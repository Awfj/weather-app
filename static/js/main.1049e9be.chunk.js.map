{"version":3,"sources":["components/Spinner/Spinner.module.scss","providers/WindowWidthProvider.tsx","constants.tsx","actions/index.tsx","reducers/reduceSettings.tsx","hooks/useTheme.tsx","hooks/useDrawer.tsx","providers/SettingsProvider.tsx","components/ListItemLink/ListItemLink.tsx","utils.tsx","components/AppDrawer/AppDrawer.tsx","components/DrawerToggle/DrawerToggle.tsx","components/ThemeToggle/ThemeToggle.tsx","components/ToolbarButtons/ToolbarButtons.tsx","components/AppHeader/AppHeader.tsx","components/Spinner/Spinner.tsx","components/Error/Error.tsx","components/DataLoader/DataLoader.tsx","containers/Welcome/Welcome.tsx","components/Temperature/Temperature.tsx","components/CurrentWeather/CurrentWeather.tsx","components/Favor/Favor.tsx","hooks/useTimer.tsx","components/Timer/Timer.tsx","components/Refresh/Refresh.tsx","hooks/useRefresh.tsx","containers/Forecast/Forecast.tsx","components/Form/Form.tsx","components/InputButton/InputButton.tsx","components/SearchButton/SearchButton.tsx","components/InputField/InputField.tsx","components/SearchField/SearchField.tsx","components/Search/Search.tsx","hooks/useFetch.tsx","hooks/useWeatherApi.tsx","containers/FrontPage/FrontPage.tsx","components/LinkBox/LinkBox.tsx","components/WeatherBox/WeatherBox.tsx","components/LaunchLocation/LaunchLocation.tsx","components/AddLocationBox/AddLocationBox.tsx","components/FavoriteLocation/FavoriteLocation.tsx","containers/Favorites/Favorites.tsx","components/Setting/Setting.tsx","components/LaunchLocationSetting/LaunchLocationSetting.tsx","containers/Settings/Settings.tsx","hooks/useGeoLocationApi.tsx","components/AppContent/AppContent.tsx","components/Page/Page.tsx","theme.tsx","containers/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","WindowWidthContext","createContext","WindowWidthProvider","children","useState","window","innerWidth","width","setWidth","useEffect","handleResize","addEventListener","removeEventListener","Provider","value","APP_STRUCTURE","LOCAL_STORAGE","isDrawerOpen","isThemeDark","weatherForecast","launchLocation","INITIAL_SETTINGS","favorites","lastLocation","drawerIconWidth","toolbarHeightMin","listItemIconMinWidth","listItemLeftGutterSize","FETCH_INIT","FETCH_SUCCESS","FETCH_FAILURE","TOGGLE_DRAWER","TOGGLE_THEME","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","SET_LAST_LOCATION","reduceSettings","state","action","type","localStorage","setItem","String","location","filter","useTheme","dispatch","prefersDarkTheme","useMediaQuery","noSsr","storedTheme","getItem","JSON","parse","useDrawer","storedDrawer","SettingsContext","SettingsDispatchContext","useSettings","useContext","SettingsProvider","useReducer","settings","useStyles","makeStyles","theme","createStyles","root","borderLeft","active","borderColor","palette","secondary","main","ListItemLink","icon","primary","to","classes","renderLink","React","useMemo","forwardRef","itemProps","ref","activeClassName","ListItem","button","component","className","ListItemIcon","ListItemText","capitalizeFirstChar","string","toUpperCase","slice","checkIfExpired","requestTime","Date","getTime","fetchLocation","a","fetch","response","ok","json","data","city","toLowerCase","console","error","fetchForecast","queriedCity","process","url","updatedUrl","forecast","currentWeather","name","condition","weather","country","sys","temperature","Math","round","temp","cloudiness","clouds","all","windSpeed","wind","speed","visibility","pressure","humidity","storeWeather","getLaunchLocation","removeExpiredWeather","key","includes","removeItem","sliceSplittedString","separator","beginIndex","endIndex","split","join","stringify","flexShrink","whiteSpace","breakpoints","up","down","minWidth","fontSize","isOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","isClosed","leavingScreen","overflowX","list","display","flexDirection","justifyContent","height","paper","top","AppDrawer","Drawer","variant","open","clsx","List","disablePadding","Divider","backgroundColor","background","alignSelf","marginRight","spacing","SidebarToggle","label","other","IconButton","aria-label","color","onClick","defaultProps","ThemeToggle","Tooltip","title","ToolbarButtons","refresh","favor","zIndex","drawer","toolbar","paddingRight","minHeight","flexGrow","AppHeader","heading","search","AppBar","Toolbar","disableGutters","DrawerToggle","Typography","textIndent","overflow","borderRadius","margin","Spinner","styles","errorBorder","padding","boxShadow","contrastText","Error","errorStyles","disableErrorBorder","DataLoader","rendered","spinnerStyles","isLoading","errorMessage","isError","displayContent","marginTop","Welcome","fontWeight","position","letterSpacing","lineHeight","right","Temperature","textAlign","maxWidth","marginBottom","flexWrap","scales","marginLeft","border","CurrentWeather","timer","Favor","isFavorite","setIsFavorite","useTimer","expirationTimeframe","setRefreshIsDisabled","setTimer","timerTimeout","setTimeout","clearTimeout","Timer","currentYear","getFullYear","requestYear","time","toTimeString","date","toDateString","currentDay","getDate","requestDay","getReadableRequestTime","milliseconds","hours","floor","minutes","getRemainingTime","Refresh","useRefresh","isDataFetched","refreshIsDisabled","disabled","Forecast","getForecast","undefined","light","Form","onSubmit","InputButton","SearchButton","InputField","onBlur","onChange","placeholder","SearchField","setSearchQuery","event","query","currentTarget","transform","Search","getData","searchQuery","searchIsShown","setSearchIsShown","windowWidth","showSearchBtn","useRef","searchFieldRef","breakpointMD","values","md","handleSubmit","preventDefault","trim","current","focus","composeSearch","reducer","useFetch","useWeatherApi","useCallback","storedForecast","FrontPage","outline","text","grey","link","box","LinkBox","tooltip","linkStyles","boxStyles","extra","group","paddingBottom","spinner","common","white","WeatherBox","alignItems","LaunchLocation","AddLocationBox","FavoritePlace","Favorites","length","map","FavoriteLocation","Setting","LaunchLocationSetting","dispatchFetch","dispatchSettings","reset","Settings","useGeoLocationApi","setLocations","AppMain","path","selected","hover","Page","AppContent","baseTheme","pallete","blue","props","MuiAppBar","elevation","MuiButtonBase","disableRipple","overrides","MuiDrawer","paperAnchorDockedLeft","borderRight","MuiIconButton","MuiListItem","gutters","paddingLeft","MuiListItemIcon","MuiSvgIcon","MuiToolbar","dense","MuiTooltip","typography","h1","h2","h3","factor","shape","lightTheme","createMuiTheme","default","darkTheme","App","StylesProvider","injectFirst","ThemeProvider","CssBaseline","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,yB,4ICKhFC,EAAqBC,wBAAc,GAqB1BC,EAlBa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAsB,EACzBC,mBAASC,OAAOC,YADS,mBAC5CC,EAD4C,KACrCC,EADqC,KAWnD,OARAC,qBAAU,WACR,IAAMC,EAAe,kBAAMF,EAASH,OAAOC,aAE3C,OADAD,OAAOM,iBAAiB,SAAUD,GAC3B,WACLL,OAAOO,oBAAoB,SAAUF,MAEtC,IAGD,kBAACV,EAAmBa,SAApB,CAA6BC,MAAOP,GACjCJ,IClBMY,EAED,WAFCA,EAGA,YAHAA,EAID,WAGCC,EAAgB,CAC3BC,aAAc,eACdC,YAAa,cACbC,gBAAiB,oBACjBC,eAAgB,mBAGLC,EAA8B,CACzCC,UAAW,GACXL,cAAc,EACdC,aAAa,EACbK,aAAc,MAaHC,EAAe,eATS,OAST,kBARM,SAQN,KACfC,EAAgB,eALC,OAKD,cAHC,GAGD,QAChBC,EAAoB,eAVC,SAUD,SACpBC,EAAsB,eAZE,OAYF,cAVI,WAUJ,K,eCtCtBC,EAAa,aAGbC,EAAgB,gBAGhBC,EAAgB,gBAGhBC,EAAgB,gBAGhBC,EAAe,eAGfC,EAAmB,mBAGnBC,EAAwB,wBAGxBC,EAAoB,oB,ykBCwClBC,MA5Cf,SAAwBC,EAAkBC,GACxC,OAAQA,EAAOC,MACb,KAAKR,EAAgB,IACXd,EAAiBoB,EAAjBpB,aAER,OADAuB,aAAaC,QAAQzB,EAAcC,aAAcyB,QAAQzB,IAClD,EAAP,GACKoB,EADL,CAEEpB,cAAeA,IAGnB,KAAKe,EAAe,IACVd,EAAgBmB,EAAhBnB,YAER,OADAsB,aAAaC,QAAQzB,EAAcE,YAAawB,QAAQxB,IACjD,EAAP,GACKmB,EADL,CAEEnB,aAAcA,IAGlB,KAAKiB,EACH,OAAO,EAAP,GACKE,EADL,CAEEd,aAAce,EAAOf,eAGzB,KAAKU,EACH,OAAO,EAAP,GACKI,EADL,CAEEf,UAAU,GAAD,mBAAMe,EAAMf,WAAZ,CAAuBgB,EAAOK,aAG3C,KAAKT,EACH,OAAO,EAAP,GACKG,EADL,CAEEf,UAAU,YACLe,EAAMf,UAAUsB,QAAO,SAAAD,GAAQ,OAAIL,EAAOK,WAAaA,QAIhE,QACE,OAAON,I,SC7BEQ,EApBE,SAACC,EAA6B5B,GAC7C,IAAM6B,EAAmBC,YAAc,+BAAgC,CACrEC,OAAO,IAGTxC,qBAAU,WACR,IAAIyC,EAAcV,aAAaW,QAAQnC,EAAcE,aACjDgC,EACEhC,IAAgBkC,KAAKC,MAAMH,IAC7BJ,EAAS,CAAEP,KAAMP,KAGfd,IAAgB6B,GAClBD,EAAS,CAAEP,KAAMP,IAEnBQ,aAAaC,QAAQzB,EAAcE,YAAawB,OAAOK,OAExD,CAACD,EAAU5B,EAAa6B,KCJdO,EAdG,SAACR,EAA6B7B,GAC9CR,qBAAU,WACR,IAAM8C,EAAef,aAAaW,QAAQnC,EAAcC,cACpDsC,EACwBH,KAAKC,MAAME,KACpBtC,GACf6B,EAAS,CAAEP,KAAMR,IAGnBS,aAAaC,QAAQzB,EAAcC,aAAcyB,OAAOzB,MAEzD,CAAC6B,EAAU7B,KCPVuC,EAAkBvD,wBAAcoB,GAChCoC,EAA0BxD,yBAAgC,eAEnDyD,EAAc,WAGzB,MAAO,CAFUC,qBAAWH,GACXG,qBAAWF,KAoBfG,EAhBU,SAAC,GAAyB,IAAvBzD,EAAsB,EAAtBA,SAAsB,EACnB0D,qBAAWzB,EAAgBf,GADR,mBACzCyC,EADyC,KAC/BhB,EAD+B,KAExC7B,EAA8B6C,EAA9B7C,aAAcC,EAAgB4C,EAAhB5C,YAKtB,OAHA2B,EAASC,EAAU5B,GACnBoC,EAAUR,EAAU7B,GAGlB,kBAACuC,EAAgB3C,SAAjB,CAA0BC,MAAOgD,GAC/B,kBAACL,EAAwB5C,SAAzB,CAAkCC,MAAOgC,GACtC3C,K,gLCjBH4D,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,WAAW,GAAD,ONauB,WMbvB,uBAEZC,OAAQ,CACNC,YAAaL,EAAMM,QAAQC,UAAUC,WAmC5BC,GAxBM,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,GAC/BC,EAAUf,KACVgB,EAAaC,IAAMC,SACvB,kBACED,IAAME,YAA6C,SAACC,EAAWC,GAAZ,OACjD,kBAAC,IAAD,eACEP,GAAE,WAAMA,GACRO,IAAKA,EACLC,gBAAiBP,EAAQT,QACrBc,SAGV,CAACN,EAAIC,EAAQT,SAEf,OACE,4BACE,kBAACiB,GAAA,EAAD,CAAUC,QAAM,EAACC,UAAWT,EAAYU,UAAWX,EAAQX,MACxDQ,EAAO,kBAACe,GAAA,EAAD,KAAef,GAAuB,KAC9C,kBAACgB,GAAA,EAAD,CAAcf,QAASA,O,6BC5ClBgB,GAAsB,SAACC,GAClC,MAAM,GAAN,OAAUA,EAAO,GAAGC,eAApB,OAAoCD,EAAOE,MAAM,KAGtCC,GAAiB,SAACC,GAG7B,OAFoB,IAAIC,MAAOC,UACCF,EPNE,MOUvBG,GAAa,yCAAG,iCAAAC,EAAA,+EAEFC,MAAM,uCAFJ,WAEnBC,EAFmB,QAGXC,GAHW,yCAGA,MAHA,uBAIYD,EAASE,OAJrB,cAInBC,EAJmB,OAKnBC,EAAOD,EAAKC,KAAKC,cALE,kBAMlBD,GANkB,yCAQzBE,QAAQC,MAAM,sDAAd,MARyB,kBASlB,MATkB,0DAAH,qDAabC,GAAa,yCAAG,WAAOC,GAAP,wBAAAX,EAAA,sEAEEY,mCACrBC,EAHmB,4DAGwCF,GAC3DG,EAJmB,UAIHD,EAJG,kBAEED,mCAFF,0BAKFX,MAAMa,GALJ,WAKnBZ,EALmB,QAMXC,GANW,yCAMA,MANA,wBAOeD,EAASE,OAPxB,eAOnBC,EAPmB,OASnBU,EAAsB,CAC1BC,eAAgB,CACdV,KAAMD,EAAKY,KACXC,UAAWb,EAAKc,QAAQ,GAAG/C,KAC3BgD,QAASf,EAAKgB,IAAID,QAClBE,YAAaC,KAAKC,MAAMnB,EAAKjC,KAAKqD,MAClCC,WAAYrB,EAAKsB,OAAOC,IACxBC,UAAWxB,EAAKyB,KAAKC,MACrBC,WAAY3B,EAAK2B,WAAa,IAC9BC,SAAU5B,EAAKjC,KAAK6D,SACpBC,SAAU7B,EAAKjC,KAAK8D,UAEtBtC,aAAa,IAAIC,MAAOC,WAE1BqC,GAAaxB,EAAaI,GAvBD,kBAwBlBA,GAxBkB,yCA0BzBP,QAAQC,MAAM,sDAAd,MA1ByB,kBA2BlB,MA3BkB,0DAAH,sDAmCb2B,GAAiB,yCAAG,6BAAApC,EAAA,sEACFD,KADE,UACzBhF,EADyB,gDAEH,MAFG,cAG/BoB,aAAaC,QAAQ,kBAAmBrB,GAHT,kBAIxBA,GAJwB,2CAAH,qDA8CjBsH,GAAuB,SAAC/B,GACnC,IAAK,IAAIgC,KAAOnG,aACd,GAAImG,EAAIC,SAAS,aAAeD,EAAIC,SAASjC,GAAO,CAClD,IAAMV,EAAsB7C,KAAKC,MAAMb,aAAamG,IAAM1C,YACtDD,GAAeC,IACjBzD,aAAaqG,WAAWF,KAMnBG,GAAsB,SACjCjD,EACAkD,EACAC,EACAC,GAEA,OAAOpD,EACJqD,MAAMH,GACNhD,MAAMiD,EAAYC,GAClBE,KAAKJ,IAGGP,GAAe,SAAC7B,EAAca,GACzChF,aAAaC,QAAb,2BAAyCkE,GAAQvD,KAAKgG,UAAU5B,KC3G5DzD,GAAYC,aAAW,SAACC,GAAD,aAC3BC,YAAa,CACXC,MAAI,GACF5D,MAJmB,SAKnB8I,WAAY,EACZC,WAAY,UAHV,cAIDrF,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BjJ,MAAO,UALP,cAOF,0BAPE,eAQC0D,EAAMsF,YAAYE,KAAK,MAAQ,CAC9BC,SAAS,QAAD,OAAUhI,EAAV,iBATV,cAYF,yBAZE,eAaCuC,EAAMsF,YAAYE,KAAK,MAAQ,CAC9BE,SAAU,YAdZ,GAkBJC,OAAO,aACLC,WAAY5F,EAAM6F,YAAYC,OAAO,QAAS,CAC5CC,OAAQ/F,EAAM6F,YAAYE,OAAOC,MACjCC,SAAUjG,EAAM6F,YAAYI,SAASC,iBAEvC5J,MA1BmB,UA2BlB0D,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BjJ,MAAO,UAGX6J,SAAU,CACRP,WAAY5F,EAAM6F,YAAYC,OAAO,QAAS,CAC5CC,OAAQ/F,EAAM6F,YAAYE,OAAOC,MACjCC,SAAUjG,EAAM6F,YAAYI,SAASG,gBAEvCC,UAAW,SACX/J,MAAOiB,GAET+I,KAAK,aACHC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,OAAO,gBAAD,OAAkBlJ,EAAlB,MACLwC,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BmB,OAAO,gBAAD,ORrCgB,OQqChB,OAGVC,MAAM,aACJC,IAAKpJ,GACJwC,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BqB,IR3CsB,cQ8FfC,GA7CG,WAAO,IAAD,IAChBhG,EAAUf,KADM,EAEKL,IAAlBzC,EAFa,oBAEbA,aAET,OACE,kBAAC8J,EAAA,EAAD,CACEC,QAAQ,YACRC,KAAMhK,EACNwE,UAAWyF,YAAKpG,EAAQX,MAAT,mBACZW,EAAQ8E,OAAS3I,GADL,cAEZ6D,EAAQsF,UAAYnJ,GAFR,IAIf6D,QAAS,CACP8F,MAAOM,YAAKpG,EAAQ8F,OAAT,mBACR9F,EAAQ8E,OAAS3I,GADT,cAER6D,EAAQsF,UAAYnJ,GAFZ,MAMb,kBAACkK,EAAA,EAAD,CAAMC,gBAAc,EAAC3F,UAAWX,EAAQyF,MACtC,6BACE,kBAAC,GAAD,CACE5F,KAAM,kBAAC,IAAD,MACNC,QAASgB,GAAoB7E,GAC7B8D,GAAI9D,IAEN,kBAAC,GAAD,CACE4D,KAAM,kBAAC,IAAD,MACNC,QAASgB,GAAoB7E,GAC7B8D,GAAI9D,KAGR,6BACE,kBAACsK,GAAA,EAAD,MACA,kBAAC,GAAD,CACE1G,KAAM,kBAAC,IAAD,MACNC,QAASgB,GAAoB7E,GAC7B8D,GAAI9D,Q,4ECnGVgD,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAK,aACHmH,gBAAiBrH,EAAMM,QAAQgH,WAAWX,MAC1CY,UAAW,UACXhB,QAAS,OACTiB,YAAaxH,EAAMyH,QAAQ,GAC3BnL,MAAOiB,GACNyC,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BiC,YAAaxH,EAAMyH,QAAQ,KAG/BnG,OAAQ,CACNhF,MAAO,aAKPoL,GAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAUC,EAAmB,0BAC9C/G,EAAUf,KADoC,EAE/BL,IAAZZ,EAF2C,oBAQpD,OACE,yBAAK2C,UAAWX,EAAQX,MACtB,kBAAC2H,GAAA,EAAD,eACEC,aAAYH,EACZI,MAAM,UACNlH,QAAS,CAAEX,KAAMW,EAAQS,QACzB0G,QAVe,WACnBnJ,EAAS,CAAEP,KAAMR,MAUT8J,GAEJ,kBAAC,KAAD,SAMRF,GAAcO,aA7CO,CACnBN,MAAO,iBA6CMD,U,kDC5CTQ,GAAc,SAAC,GAAsB,IAApBP,EAAmB,EAAnBA,MAAmB,EACJlI,IADI,mBAC/BxC,EAD+B,KAC/BA,YAAe4B,EADgB,KAIxC,OACE,kBAACsJ,GAAA,EAAD,CAASC,MAAOT,GACd,kBAACE,GAAA,EAAD,CAAYC,aAAYH,EAAOI,MAAM,UAAUC,QAH/B,kBAAMnJ,EAAS,CAAEP,KAAMP,MAIpCd,EAAc,kBAAC,KAAD,MAAkB,kBAAC,KAAD,SAMzCiL,GAAYD,aAjBS,CACnBN,MAAO,gBAiBMO,UC1BTpI,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJqG,QAAS,OACTE,eAAgB,WAChB,yBAA0B,CACxBe,YAAaxH,EAAMyH,QAAQ,WAwBpBY,GAXQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,MAC3B1H,EAAUf,KAChB,OACE,yBAAK0B,UAAWX,EAAQX,MACrBoI,EACAC,EACD,kBAAC,GAAD,QCdAzI,GAAYC,aAAW,SAACC,GAAD,aAC3BC,YAAa,CACXC,KAAM,CACJmH,gBAAiBrH,EAAMM,QAAQgH,WAAWX,MAC1C6B,OAAQxI,EAAMwI,OAAOC,OAAS,EAC9B,OAAO,eACJzI,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,SAGd,wBAAwB,eACrB1F,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,YAIhBgD,SAAO,GACLC,aAAc3I,EAAMyH,QAAQ,IADvB,cAEJzH,EAAMsF,YAAYE,KAAK,MAAQ,CAC9BoD,UAAWpL,IAHR,cAKJwC,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BoD,aAAc3I,EAAMyH,QAAQ,KANzB,GASPW,MAAO,CACLS,SAAU,QA8BDC,GApBG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,OAAWpB,EAAmB,qCACpD/G,EAAUf,KAChB,OACE,kBAACmJ,GAAA,EAAD,CAAQzH,UAAWX,EAAQX,MACzB,kBAACgJ,GAAA,EAAD,CACEC,gBAAc,EACdpC,QAAQ,QACRlG,QAAS,CAAEX,KAAMW,EAAQ6H,UAEzB,kBAACU,GAAD,MACA,kBAACC,GAAA,EAAD,CAAYtC,QAAQ,KAAKvF,UAAWX,EAAQuH,OACzCW,GAAWpH,GAAoBoH,IAEjCC,EACD,kBAAC,GAAmBpB,M,oBC5DtB9H,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ6H,MAAO/H,EAAMM,QAAQC,UAAUC,KAC/BkF,SAAU,SACV4D,WAAY,UACZC,SAAU,SACVjN,MAAO,MACPoK,OAAQ,MACR8C,aAAc,MACdC,OAAQ,mBAgBCC,GAPC,SAAC,GAA0B,IAAxBlI,EAAuB,EAAvBA,UACXX,EAAUf,KAChB,OACE,yBAAK0B,UAAWyF,YAAK0C,KAAOzJ,KAAMW,EAAQX,KAAMsB,IAAhD,e,oBCtBE1B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJqG,QAAS,OACTgB,UAAW,SACXjL,MAAO,QACP,UAAW,CACToJ,SAAU,OACV8B,YAAaxH,EAAMyH,QAAQ,KAG/BmC,YAAa,CACXC,QAAS,MACTC,UAAU,aAAD,OAAe9J,EAAMM,QAAQK,QAAQoJ,oBAkCrCC,GApBD,SAAC,GAID,IAHZ9N,EAGW,EAHXA,SACA+N,EAEW,EAFXA,YAEW,IADXC,0BACW,SACLrJ,EAAUf,KAChB,OACE,yBACE0B,UAAWyF,YACTpG,EAAQX,KACR+J,GACCC,GAAsBrJ,EAAQ+I,cAGjC,kBAAC,KAAD,MACA,2BAAI1N,KCJKiO,GA9BI,SAAC,GAQN,IACRC,EARJlO,EAOW,EAPXA,SACAmO,EAMW,EANXA,cACAC,EAKW,EALXA,UACAC,EAIW,EAJXA,aACAC,EAGW,EAHXA,QAGW,IAFXC,sBAEW,SADR7C,EACQ,mGAmBX,OAhBEwC,EADEE,EACS,kBAAC,GAAD,CAAS9I,UAAW6I,IAE3BI,GAAkBD,EAElB,oCACE,kBAAC,GAAU5C,EAAQ2C,GAClBrO,GAGIsO,EACE,kBAAC,GAAU5C,EAAQ2C,GAEnBrO,EAIR,oCAAGkO,IClCNtK,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJqG,QAAS,OACTE,eAAgB,SAChBnK,MAAO,OACPoO,UAAW,OACX,SAAU,CACRlD,YAAa,WAkCNmD,GAnBC,SAAC,GAA2C,IAAzC3B,EAAwC,EAAxCA,OAAQsB,EAAgC,EAAhCA,UAAWE,EAAqB,EAArBA,QAC9B3J,EAAUf,KAEhB,OACE,oCACE,kBAAC,GAAD,CAAWiJ,QAASjM,IACpB,kBAAC,GAAD,CACEwN,UAAWA,EACXE,QAASA,EACTC,gBAAc,EACdF,aAAY,2FAGZ,yBAAK/I,UAAWX,EAAQX,MAAO8I,MCtCjClJ,GAAYC,aAAW,SAACC,GAAD,aAC3BC,YAAa,CACXC,MAAI,GACF0K,WAAY,UACZC,SAAU,WACVC,cAAe,MAEfnC,aAAc3I,EAAMyH,QAAQ,KAC5B/B,SAAU,OACVqF,WAAY,UAPV,cAQD/K,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,OACViD,aAAc3I,EAAMyH,QAAQ,OAV5B,cAYF,SAAU,CACRoD,SAAU,WACVjE,IAAK,IACLoE,MAAO,IACPtF,SAAU,QACVqF,WAAY,UAjBZ,QAwCOE,GAXK,SAAC,GAAiD,IAA/C/O,EAA8C,EAA9CA,SAAUsF,EAAoC,EAApCA,UAAWkC,EAAyB,EAAzBA,YACpC7C,EAAUf,KAEhB,OACE,uBAAG0B,UAAWyF,YAAKpG,EAAQX,KAAMsB,IAC9BkC,EACD,qCAAYxH,KCjCZ4D,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJuJ,OAAQ,SACRyB,UAAW,SACXC,SAAU,QACV,UAAW,CACT5E,QAAS,OACTE,eAAgB,SAChB2E,aAAcpL,EAAMyH,QAAQ,KAE9B,sBAAsB,aACpBmD,WAAY,UACZlF,SAAU,OACV0F,aAAcpL,EAAMyH,QAAQ,KAC3BzH,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,WAGd,OAAQ,CACNa,QAAS,OACTE,eAAgB,SAChB4E,SAAU,OACV,wBAAyB,CACvB7D,YAAa,SAInB8D,OAAQ,CACN/E,QAAS,OACTC,cAAe,SACf+E,WAAY,MACZ,WAAY,CACVC,OAAQ,mBACR9F,SAAU,SACVmE,QAAS,eA2CF4B,GAhCQ,SAAC,GAA4B,IAA1BhJ,EAAyB,EAAzBA,KAAMiJ,EAAmB,EAAnBA,MACxB7K,EAAUf,KAEhB,OACE,6BAAS0B,UAAWX,EAAQX,MAC1B,kBAACmJ,GAAA,EAAD,CAAYtC,QAAQ,MACjBtE,EAAKC,KADR,KACgBD,EAAKe,SAErB,6BACE,kBAAC,GAAD,CAAaE,YAAajB,EAAKiB,aAA/B,MAUF,2BAAIjB,EAAKa,WACRoI,EACD,4BACE,2CAAiBjJ,EAAKqB,WAAtB,KACA,qCAAWrB,EAAKwB,UAAhB,QACA,2CAAiBxB,EAAK2B,WAAtB,OACA,yCAAe3B,EAAK4B,SAApB,OACA,yCAAe5B,EAAK6B,SAApB,Q,oBCnCOqH,GA/BD,SAAC,GAA6B,IAA3BrO,EAA0B,EAA1BA,aAA0B,EACLnB,oBAAS,GADJ,mBAClCyP,EADkC,KACtBC,EADsB,OAEPpM,IAFO,mBAEhCpC,EAFgC,KAEhCA,UAAawB,EAFmB,KAYzCrC,qBAAU,WACRqP,EAAcxO,EAAUsH,SAASrH,MAChC,CAACD,EAAWC,IAEf,IAAMqK,EAAQiE,EAAa,wBAA0B,mBAErD,OACE,kBAACzD,GAAA,EAAD,CAASC,MAAOT,GACd,kBAACE,GAAA,EAAD,CACEC,aAAYH,EACZI,MAAM,UACNC,QAAS4D,EAfa,WAC1B/M,EAAS,CAAEP,KAAML,EAAuBS,SAAUpB,KAL7B,WACrBuB,EAAS,CAAEP,KAAMN,EAAkBU,SAAUpB,MAoBxCsO,EAAa,kBAAC,KAAD,MAAe,kBAAC,IAAD,SCJtBE,GAhCE,SACfC,EACAC,GACI,IAAD,EACuBjL,IAAM5E,SAAS4P,GADtC,mBACIL,EADJ,KACWO,EADX,KA0BH,OAvBAlL,IAAMvE,WAAU,WACVuP,GAAuB,MAEzBE,EAASF,GACTC,GAAqB,MAEtB,CAACD,EAAqBC,IAEzBjL,IAAMvE,WAAU,WACd,IAAM0P,EAAeC,YAAW,WAC1BT,GAAS,IACXO,GAAS,SAAAP,GAAK,OAAIA,EAAQ,OAG1BM,GAAqB,KAItB,KACH,OAAO,kBAAMI,aAAaF,MACzB,CAACR,EAAOM,IAGJN,GC1BH5L,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAK,aACHwF,SAAU,SACV0F,aAAcpL,EAAMyH,QAAQ,KAC5B,IAAK,CACHmD,WAAY,QAEb5K,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,gBA8BH2G,GAlBD,SAAC,GAID,IAHZN,EAGW,EAHXA,oBACAC,EAEW,EAFXA,qBACAhK,EACW,EADXA,YAEMnB,EAAUf,KACV4L,EAAQI,GAASC,EAAqBC,GAE5C,OACE,uBAAGxK,UAAWX,EAAQX,MAAtB,iBdgCkC,SAAC8B,GACrC,IAAMsK,GAAc,IAAIrK,MAAOsK,cACzBC,EAAc,IAAIvK,KAAKD,GAAauK,cACpCE,EAAO5H,GACX,IAAI5C,KAAKD,GAAa0K,eACtB,IACA,EACA,GACA5K,MAAM,EAAG,GACL6K,EAAO,IAAI1K,KAAKD,GAAa4K,eAEnC,GAAIN,IAAgBE,EAAa,CAC/B,IAAMK,GAAa,IAAI5K,MAAO6K,UACxBC,EAAa,IAAI9K,KAAKD,GAAa8K,UAEzC,OAAID,IAAeE,EACVN,EACEI,EAAa,IAAME,EACtB,cAAN,OAAqBN,GAEf,GAAN,OAAU5H,GAAoB8H,EAAM,IAAK,EAAG,GAA5C,aAAmDF,GAGrD,MAAM,GAAN,OAAU5H,GAAoB8H,EAAM,IAAK,GAAzC,aAAgDF,GctD/BO,CAAuBhL,GADxC,YAC+D,IAC5D0J,GAAS,IAAT,gCdyDyB,SAACuB,GAC/BA,GAAgB,IAChB,IAAMC,EAAQvJ,KAAKwJ,MAAOF,EAAe,KAAW,IAC9CG,EAAUzJ,KAAKwJ,MAAOF,EAAe,IAAS,IAEpD,OAAIC,EAAQ,EACJ,GAAN,OAAUA,EAAV,aAAoBE,EAApB,KAEM,GAAN,OAAUA,EAAV,KchE+BC,CAAiB3B,IAC1C,kB,oBC1BJ4B,GAAU,SAAC,GAAgC,IAA9B3F,EAA6B,EAA7BA,MAAUC,EAAmB,0BAC9C,OACE,kBAACO,GAAA,EAAD,CAASC,MAAOT,GACd,8BACE,kBAACE,GAAA,EAAD,eAAYC,aAAYH,EAAOI,MAAM,WAAcH,GACjD,kBAAC,KAAD,UAOV0F,GAAQrF,aAhBa,CACnBN,MAAO,WAgBM2F,UCdAC,GAVI,SAACC,EAAwBxF,GAAyB,IAAD,EAChB7L,oBAAS,GADO,mBAC3DsR,EAD2D,KACxCzB,EADwC,KAE5D1D,EAAU,kBAAC,GAAD,CAASN,QAASA,EAAS0F,SAAUD,IACrD,OAAID,EACK,CAACxB,EAAsB1D,GAEvB,CAAC0D,ICuDG2B,GA5CE,SAAC,GAA4D,IjBqCvC3L,EiBrCnB1E,EAAyD,EAAzDA,aAAc0L,EAA2C,EAA3CA,OAAQ7F,EAAmC,EAAnCA,SAAUyK,EAAyB,EAAzBA,YAC1CnL,EAA6BU,EAA7BV,KAAM6H,EAAuBnH,EAAvBmH,UAAWE,EAAYrH,EAAZqH,QADkD,EAEnC+C,KAAa9K,GAAM,kBACzDmL,EAAYtQ,MAH6D,mBAEpE0O,EAFoE,KAE9C1D,EAF8C,KAKrEC,EAAQ9F,EAAO,kBAAC,GAAD,CAAOnF,aAAcA,SAAmBuQ,EAO7D,OALArR,qBAAU,WACRoR,EAAYtQ,KACX,CAACsQ,EAAatQ,IAIf,oCACE,kBAAC,GAAD,CACEyL,QAASjM,EACTwL,QAASA,EACTC,MAAOA,EACPS,OAAQA,IAEV,kBAAC,GAAD,CACEsB,UAAWA,EACXE,QAASA,EACTD,aAAY,2BAAsB5I,GAChCrE,GADU,+DAIXmF,GACC,kBAAC,GAAD,CACEA,KAAMA,EAAKW,eACXsI,MACE,kBAAC,GAAD,CACEK,qBjBKuB/J,EiBLqBS,EAAKT,YxBjD7B,OOuDH,IAAIC,MAAOC,UAAYF,IiBLxCgK,qBAAsBA,EACtBhK,YAAaS,EAAKT,mB,SCjD5BlC,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJmH,gBAAiBrH,EAAMM,QAAQK,QAAQmN,MACvCvH,QAAS,OACTuD,UAAU,aAAD,OAAe9J,EAAMM,QAAQK,QAAQoJ,oBAoBrCgE,GATF,SAAC,GAA8C,IAA5C7R,EAA2C,EAA3CA,SAAUsF,EAAiC,EAAjCA,UAAWwM,EAAsB,EAAtBA,SAC7BnN,EAAUf,KAChB,OACE,0BAAM0B,UAAWyF,YAAKpG,EAAQX,KAAMsB,GAAYwM,SAAUA,GACvD9R,I,4BClBD4D,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJqL,WAAY,YAkCH0C,GAnBKhN,sBAClB,WAAgCE,GAAS,IAAtCjF,EAAqC,EAArCA,SAAUyL,EAA2B,EAA3BA,MAAUC,EAAiB,qCAChC/G,EAAUf,KAChB,OACE,kBAACqI,GAAA,EAAD,CAASC,MAAOT,GACd,kBAACE,GAAA,EAAD,eACEC,aAAYH,EACZI,MAAM,UACN5G,IAAKA,GACDyG,EAJN,CAKEpG,UAAWX,EAAQX,OAElBhE,OCnBIgS,GAXMjN,sBAA2B,WAE9CE,GACC,IAFIyG,EAEL,mBACA,OACE,kBAAC,GAAD,eAAazG,IAAKA,GAASyG,GACzB,kBAAC,KAAD,UCTA9H,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ6H,MAAO/H,EAAMM,QAAQK,QAAQoJ,aAC7B1C,gBAAiB,cACjBmE,OAAQ,OACR9F,SAAU,SACVmE,QAAS,YACTvN,MAAO,OACP,UAAW,CACTwN,UAAU,eAAD,OAAiB9J,EAAMM,QAAQjC,OAAO+B,eAqCxC+N,GAnBIlN,sBAA0B,WAE3CE,GACC,IAFCtE,EAEF,EAFEA,MAAOwG,EAET,EAFSA,KAET,IAFe/E,YAEf,MAFsB,OAEtB,EAF8B8P,EAE9B,EAF8BA,OAAQC,EAEtC,EAFsCA,SAAUC,EAEhD,EAFgDA,YAG1CzN,EAAUf,KAChB,OACE,2BACEqB,IAAKA,EACLtE,MAAOA,EACPwG,KAAMA,EACNgL,SAAUA,EACVC,YAAaA,EACbhQ,KAAMA,EACN8P,OAAQA,EACR5M,UAAWX,EAAQX,UClBVqO,GApBKtN,sBAA0B,WAE5CE,GACC,IAFCqN,EAEF,EAFEA,eAAmB5G,EAErB,mCAMA,OACE,kBAAC,GAAD,eACEzG,IAAKA,EACL7C,KAAK,SACLgQ,YAAY,SACZD,SAV+B,SAAAI,GACjC,IAAMC,EAAQD,EAAME,cAAc9R,MAClC2R,EAAeE,KAST9G,OCLJ9H,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAK,aACH2K,SAAU,WACVjE,IAAK,MACLgI,UAAW,mBACX5D,MAAO,OACPxC,OAAQ,GACPxI,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BsF,SAAU,SACVrD,YAAaxH,EAAMyH,QAAQ,KAC3BmH,UAAW,OACXpG,OAAQ,cAmFDqG,GArEA,SAAC,GAAsC,IAApCvR,EAAmC,EAAnCA,aAAcwR,EAAqB,EAArBA,QAAqB,EACb3S,mBAAS,IADI,mBAC5C4S,EAD4C,KAC/BP,EAD+B,OAETrS,oBAAS,GAFA,mBAE5C6S,EAF4C,KAE7BC,EAF6B,KAG7CC,E/BxC4BxP,qBAAW3D,G+ByCvCoT,EAAgBC,iBAA0B,MAC1CC,EAAiBD,iBAAyB,MAC1CpP,EAAQpB,eACRiC,EAAUf,KAPmC,EAQ9BL,IAAZZ,EAR0C,oBAU7CyQ,EAAetP,EAAMsF,YAAYiK,OAAOC,GAExCC,EAA2B,SAAAhB,GAC/BA,EAAMiB,iBACN,IAAMhB,EAAQK,EAAYY,OAAOhN,cAC7B+L,IACFF,EAAe,IACXE,IAAUpR,EACZwR,EAAQJ,GAER7P,EAAS,CAAEP,KAAMJ,EAAmBZ,aAAcoR,KAGlDQ,EAAcI,GAAgBH,EAAcS,UAC9CX,GAAiB,GACjBE,EAAcS,QAAQC,UAM1BrT,qBAAU,WACJ0S,EAAcI,GAAgBD,EAAeO,SAC/CP,EAAeO,QAAQC,UAExB,CAACP,EAAcN,EAAeE,IAEjC,IAAMY,EAAgB,SAAC1B,GAAD,OACpB,kBAAC,GAAD,CAAM5M,UAAWX,EAAQX,KAAM8N,SAAUyB,GACvC,kBAAC,GAAD,CACEtO,IAAKkO,EACLxS,MAAOkS,EACPX,OAAQA,EACRI,eAAgBA,IAEjBU,GAAeI,GACd,kBAAC,GAAD,CAAc3H,MAAM,SAASrJ,KAAK,aAKxC,OACE,oCACG4Q,GAAeI,EACdQ,IAEA,oCACGd,GAAiBc,GA5BP,kBAAMb,GAAiB,MA6BlC,kBAAC,GAAD,CACE9N,IAAKgO,EACLxH,MAAM,cACNK,QAAS,kBAAMiH,GAAiB,S,6kBCnF5C,SAASc,GAAW3R,EAAiBC,GACnC,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,MACFS,EADL,CAEEkM,WAAW,EACXE,SAAS,IAGb,KAAK5M,EAEH,OAAO,MACFQ,EADL,CAEEqE,KAHepE,EAAToE,KAIN6H,WAAW,IAGf,KAAKzM,EACH,OAAO,MACFO,EADL,CAEEqE,KAAM,KACN6H,WAAW,EACXE,SAAS,IAGb,QACE,OAAOpM,GAKE4R,OAvCf,WACE,OAAOpQ,qBAAyCmQ,GAAS,CACvDtN,KAAM,KACN6H,WAAW,EACXE,SAAS,KCwBEyF,GApCO,SAAC3S,GAA2B,IAAD,EACrB0S,KADqB,mBACxC5R,EADwC,KACjCS,EADiC,KAGzC+O,EAAcsC,sBAAW,yCAC7B,WAAOxR,GAAP,sBAAA0D,EAAA,yDACEvD,EAAS,CAAEP,KAAMX,IACjB8G,GAAqB/F,KACfyR,EAAiB5R,aAAaW,QAAb,2BACDR,KAJxB,sBAQ4BS,KAAKC,MAAM+Q,GAA3BnO,EARZ,EAQYA,aACJD,GAAeC,GATvB,iCAUuBc,GAAcpE,GAVrC,OAUMyE,EAVN,+BAYMA,EAAWhE,KAAKC,MAAM+Q,GAZ5B,iDAeqBrN,GAAcpE,GAfnC,QAeIyE,EAfJ,eAkBItE,EADEsE,EACO,CAAE7E,KAAMV,EAAe6E,KAAMU,GAE7B,CAAE7E,KAAMT,IApBrB,4CAD6B,sDAwB7B,CAACgB,IAMH,OAJArC,qBAAU,WACRc,GAAgBsQ,EAAYtQ,KAC3B,CAACuB,EAAU+O,EAAatQ,IAEpB,CAACc,EAAOwP,ICbFwC,GAlBG,SAAC,GAAuC,IAArC9S,EAAoC,EAApCA,aAAiBsK,EAAmB,mCACvBqI,KADuB,mBAChD9M,EADgD,KACtCyK,EADsC,KAGjD5E,EAAS,kBAAC,GAAD,CAAQ1L,aAAcA,EAAcwR,QAASlB,IAG5D,OAAOtQ,EACL,kBAAC,GAAD,CACEA,aAAcA,EACd6F,SAAUA,EACVyK,YAAaA,EACb5E,OAAQA,IAGV,kBAAC,GAAD,eAASA,OAAQA,GAAYpB,K,oBCf3B9H,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJqG,QAAS,OACT,cAAe,CACb8J,QAAS,QAEX,oBAAqB,CACnB7E,OAAO,iBAAD,OAAmBxL,EAAMM,QAAQC,UAAUC,MACjDoF,WAAY,uBACZ,UAAW,CACTkE,UAAU,iBAAD,OAAmB9J,EAAMM,QAAQgQ,KAAK3P,UAEjD,UAAW,CACT0P,QAAQ,iBAAD,OAAmBrQ,EAAMM,QAAQiQ,KAAK,SAInDC,KAAM,CACJjK,QAAS,QAEXkK,IAAI,aACFpJ,gBAAiBrH,EAAMM,QAAQC,UAAUC,KACzCuH,MAAO/H,EAAMM,QAAQC,UAAUwJ,aAC/BF,QAAS7J,EAAMyH,QAAQ,GACvBmB,UAAW,SACXnD,SAAU,QACTzF,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BqD,UAAW,SACXnD,SAAU,eA2CHiL,GA1BC,SAAC,GAQH,IAPZxU,EAOW,EAPXA,SACAyU,EAMW,EANXA,QACAC,EAKW,EALXA,WACAC,EAIW,EAJXA,UACAjQ,EAGW,EAHXA,GACAkQ,EAEW,EAFXA,MACA9I,EACW,EADXA,QAEMnH,EAAUf,KAChB,OACE,yBAAK0B,UAAWX,EAAQX,MACtB,kBAACiI,GAAA,EAAD,CAASC,MAAOuI,GACd,kBAAC,IAAD,CACE/P,GAAIA,EACJoH,QAASA,EACTxG,UAAWyF,YAAKpG,EAAQ2P,KAAMI,IAE9B,yBAAKpP,UAAWyF,YAAKpG,EAAQ4P,IAAKI,IAAa3U,KAGlD4U,IC5DDhR,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuQ,KAAM,CACJhJ,YAAa,WAEfuJ,MAAO,CACLxK,QAAS,OACT,oBAAqB,CACnBb,SAAU,SACVkF,WAAY,UACZjC,aAAc3I,EAAMyH,QAAQ,KAC5BuJ,cAAehR,EAAMyH,QAAQ,GAC7B,SAAU,CACR/B,SAAU,QACVqF,WAAY,WAIlBkG,QAAS,CACPlJ,MAAO/H,EAAMM,QAAQ4Q,OAAOC,MAC5BzL,SAAU,UAEZ7C,MAAO,CACLvG,MAAO,cA0DE8U,GA7CI,SAAC,GAAmC,IAAjC1S,EAAgC,EAAhCA,SAAUxC,EAAsB,EAAtBA,SACxB2E,EAAUf,KADoC,EAEbmQ,GAAcvR,GAFD,sBAE3C+D,EAF2C,EAE3CA,KAAM6H,EAFqC,EAErCA,UAAWE,EAF0B,EAE1BA,QAF0B,EAG/B/K,IAAZZ,EAH2C,oBASpD,OACE,kBAAC,GAAD,CACE8R,QAAQ,iBACR/P,GAAE,UAAK9D,GACPkL,QARoB,WACtBnJ,EAAS,CAAEP,KAAMJ,EAAmBZ,aAAcoB,KAQhDkS,WAAY/P,EAAQ2P,KACpBM,MAAO5U,GAEP,kBAAC,GAAD,CACEmO,cAAexJ,EAAQoQ,QACvBhH,YAAapJ,EAAQgC,MACrByH,UAAWA,EACXE,QAASA,EACTD,aAAY,2BAAsB5I,GAChCjD,GADU,8DAGZwL,oBAAkB,GAEjBzH,GACC,oCACE,kBAAC4G,GAAA,EAAD,CAAYtC,QAAQ,MACjBtE,EAAKW,eAAeV,KADvB,KAC+BD,EAAKW,eAAeI,SAEnD,yBAAKhC,UAAWX,EAAQkQ,OACtB,kBAAC,GAAD,CAAarN,YAAajB,EAAKW,eAAeM,aAA9C,MAIF,2BAAIjB,EAAKW,eAAeE,eC9E9BxD,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuQ,KAAM,CACJ9K,SAAU,SACVmE,QAAS,QACTtD,QAAS,OACT8K,WAAY,SACZtJ,MAAO/H,EAAMM,QAAQgQ,KAAK3P,cAoBjB2Q,GAbQ,SAAC,GAAyB,IAApB1J,EAAmB,mBACxC/G,EAAUf,KAChB,OACE,kBAAC,GAAe8H,EACd,kBAACO,GAAA,EAAD,CAASC,MAAM,0BACb,kBAAC,IAAD,CAAMxH,GAAE,UAAK9D,GAA0B0E,UAAWX,EAAQ2P,MACxD,kBAAC,KAAD,U,oBCvBJ1Q,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwQ,IAAK,CACHlK,QAAS,OACTE,eAAgB,SAChB4K,WAAY,UAEd3Q,KAAM,CACJgF,SAAU,eAkBD6L,GAbQ,WACrB,IAAM1Q,EAAUf,KAChB,OACE,kBAAC,GAAD,CACE6Q,QAAQ,eACR/P,GAAI9D,EACJ+T,UAAWhQ,EAAQ4P,KAEnB,kBAAC,KAAD,CAASjP,UAAWX,EAAQH,S,oBCX5B8Q,GAAgB,SAAC,GAAgC,IAA9B7J,EAA6B,EAA7BA,MAAOjJ,EAAsB,EAAtBA,SAAsB,EAC/Be,IAAZZ,EAD2C,oBAOpD,OACE,kBAAC,GAAD,CAAYH,SAAUA,GACpB,kBAACyJ,GAAA,EAAD,CAASC,MAAOT,GACd,kBAACE,GAAA,EAAD,CAAYC,aAAYH,EAAOI,MAAM,UAAUC,QAPjC,WAClBnJ,EAAS,CAAEP,KAAML,EAAuBS,eAOlC,kBAAC,KAAD,UAOV8S,GAAcvJ,aAtBO,CACnBN,MAAO,yBAsBM6J,UCxBT1R,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ,6BAA6B,aAC3BkL,aAAcpL,EAAMyH,QAAQ,IAC3BzH,EAAMsF,YAAYC,GAAG,MAAQ,CAC5B6F,aAAcpL,EAAMyH,QAAQ,MAIlCpK,UAAW,CACTkJ,QAAS,OACT8E,SAAU,OACV,UAAU,aACRD,aAAcpL,EAAMyH,QAAQ,IAC3BzH,EAAMsF,YAAYC,GAAG,MAAQ,CAC5B6F,aAAcpL,EAAMyH,QAAQ,KAGhC,2BAA2B,aACzBD,YAAaxH,EAAMyH,QAAQ,IAC1BzH,EAAMsF,YAAYC,GAAG,MAAQ,CAC5B6F,aAAcpL,EAAMyH,QAAQ,WA0CvBgK,GA9BG,SAAC,GAA0C,IAAxCtU,EAAuC,EAAvCA,eAAgBE,EAAuB,EAAvBA,UAC7BwD,EAAUf,KAEhB,OACE,oCACE,kBAAC,GAAD,CAAWiJ,QAASjM,IACpB,yBAAK0E,UAAWX,EAAQX,MACtB,iCACE,kBAACmJ,GAAA,EAAD,CAAYtC,QAAQ,MAApB,mBACC5J,EACC,kBAAC,GAAD,CAAgBuB,SAAUvB,IAE1B,kBAAC,GAAD,OAGHE,EAAUqU,OAAS,GAClB,iCACE,kBAACrI,GAAA,EAAD,CAAYtC,QAAQ,MAApB,mBACA,yBAAKvF,UAAWX,EAAQxD,WACrBA,EAAUsU,KAAI,SAAAjT,GAAQ,OACrB,kBAACkT,GAAD,CAAkBlN,IAAKhG,EAAUA,SAAUA,YChD5CmT,GATC,SAAC,GAAkC,IAAhC9I,EAA+B,EAA/BA,QAAS7M,EAAsB,EAAtBA,SAC1B,OACE,iCACE,kBAACmN,GAAA,EAAD,CAAYtC,QAAQ,MAAMgC,GACzB7M,ICID4D,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJiL,SAAU,cA6CD2G,GAjCe,SAAC,GAA8C,IAA5C3U,EAA2C,EAA3CA,eAAgB4U,EAA2B,EAA3BA,cACzClR,EAAUf,KAD0D,EAE7CL,IAApBuS,EAFiE,oBAmBtEjJ,EAAO,kBAEX,OADI5L,IAAgB4L,GAAO,YAASpH,GAAoBxE,KAEtD,kBAAC,GAAD,CAAS4L,QAASA,GAChB,kBAAC,GAAD,CAAMiF,SAAU,SAAAS,GAAK,OAnBQ,SAAAA,GAC/BA,EAAMiB,iBACN,IACMvS,EADOsR,EAAME,cACSxR,eAAeN,MAAM8S,OAAOhN,cACpDxF,IACFoB,aAAaC,QAAQzB,EAAcI,eAAgBA,GACnD4U,EAAc,CAAEzT,KAAMV,EAAe6E,KAAMtF,IAC3C6U,EAAiB,CACf1T,KAAMJ,EACNZ,aAAcH,IAEhBsR,EAAME,cAAcsD,SAQKxC,CAAahB,IAAQjN,UAAWX,EAAQX,MAC/D,kBAAC,GAAD,CAAYmD,KAAK,iBAAiBiL,YAAY,wBAC9C,kBAAC,GAAD,CAAa3G,MAAM,SAASrJ,KAAK,UAC/B,kBAAC,KAAD,UC9CJwB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ5D,MAAO,OACP,cAAe,CACboO,UAAW1K,EAAMyH,QAAQ,UAuBlByK,GAfE,SAAC,GAAyB,IAApBtK,EAAmB,mBAClC/G,EAAUf,KAEhB,OACE,oCACE,kBAAC,GAAD,CAAWiJ,QAASjM,IACpB,6BAAS0E,UAAWX,EAAQX,MAC1B,kBAACmJ,GAAA,EAAD,CAAYtC,QAAQ,MAApB,WACA,kBAAC,GAA0Ba,MCapBuK,GAlCW,SAACH,GAAwC,IAAD,EACjChC,KADiC,mBACzD5R,EADyD,KAClD2T,EADkD,KAI1DK,EAAelC,uBACnB,SAAC/S,GACC6U,EAAiB,CACf1T,KAAMJ,EACNZ,aAAcH,IAEhB4U,EAAc,CAAEzT,KAAMV,EAAe6E,KAAMtF,MAE7C,CAAC4U,EAAeC,IAmBlB,OAhBAxV,qBAAU,WACR,wBAAC,6BAAA4F,EAAA,2DACKjF,EAAiBoB,aAAaW,QAAQ,oBAD3C,gBAGGkT,EAAajV,GAHhB,8BAKG4U,EAAc,CAAEzT,KAAMX,IALzB,SAM0B6G,KAN1B,QAMGrH,EANH,QAQKiV,EAAajV,GAEb4U,EAAc,CAAEzT,KAAMT,IAV3B,2CAAD,KAcC,CAACkU,EAAeK,IACZ,CAAChU,EAAO2T,ICzBXjS,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAK,aACHqG,QAAS,OACTC,cAAe,SACf6K,WAAY,aACZxI,SAAU,EACV6B,UAAWlN,EACXqM,QAAS7J,EAAMyH,QAAQ,IACtBzH,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BmF,U5CIsB,O4CHtBb,QAAS7J,EAAMyH,QAAQ,EAAG,UA0CnB4K,GApCC,WACd,IAAMxR,EAAUf,KADI,EAEoCL,IAFpC,0BAEXnC,EAFW,EAEXA,aAAcD,EAFH,EAEGA,UAAa2U,EAFhB,OAMhBG,GAAkBH,GANF,0BAIV7U,EAJU,EAIhBsF,KAAsB6H,EAJN,EAIMA,UAAWE,EAJjB,EAIiBA,QACnCuH,EALkB,KASpB,OACE,0BAAMvQ,UAAWX,EAAQX,MACvB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOoS,KAAI,WAAMxV,IACf,kBAAC,GAAD,CACEQ,aAAcA,EACdgN,UAAWA,EACXE,QAASA,KAGb,kBAAC,KAAD,CAAO8H,KAAI,WAAMxV,IACf,kBAAC,GAAD,CAAWK,eAAgBA,EAAgBE,UAAWA,KAExD,kBAAC,KAAD,CAAOiV,KAAI,WAAMxV,IACf,kBAAC,GAAD,CACEK,eAAgBA,EAChB4U,cAAeA,KAGnB,kBAAC,KAAD,CAAOO,KAAI,KACT,kBAAC,KAAD,CAAU1R,GAAE,WAAM9D,SCzDtBgD,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJqG,QAAS,OACT,OAAO,aACL6E,aAAcpL,EAAMyH,QAAQ,IAC3BzH,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,SAGd,OAAO,aACL0F,aAAcpL,EAAMyH,QAAQ,MAC3BzH,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,WAGd,WAAY,CACV,UAAW,CACT2B,gBAAiBrH,EAAMM,QAAQjC,OAAOkU,UAExC,UAAW,CACTlL,gBAAiBrH,EAAMM,QAAQjC,OAAOmU,OAExC,WAAY,CACVnL,gBAAiBrH,EAAMM,QAAQjC,OAAO+B,OACtC2H,MAAO/H,EAAMM,QAAQK,QAAQH,aAiBxBiS,GAVF,WACX,IAAM5R,EAAUf,KAChB,OACE,yBAAK0B,UAAWX,EAAQX,MACtB,kBAAC,GAAD,MACA,kBAACwS,GAAD,Q,mnBC/BN,IAAMC,GAAY,CAChBC,QAAS,CACPrS,UAAW,CACTC,K,QAAMqS,EAAK,OAGfC,MAAO,CACLC,UAAW,CACTC,UAAW,GAEbC,cAAe,CACbC,eAAe,IAGnBC,UAAW,CACTC,UAAW,CACTC,sBAAuB,CACrBC,YAAa,IAGjBC,cAAe,CACbrT,KAAM,CACJsJ,aAAc,IACd9D,SAAU,OACVmE,QAAS,UAGb2J,YAAa,CACXC,QAAS,CACPC,YAAahW,EACbiL,a9ChB6B,S8CmBjCgL,gBAAiB,CACfzT,KAAM,CACJuF,SAAUhI,IAGdmW,WAAY,CACV1T,KAAM,CACJwF,S9CzB0B,W8C4B9BmO,WAAY,CACVC,MAAO,CACLlL,U9C1BsB,S8C6B1BmL,WAAY,CACVpD,QAAS,CACPjL,SAAU,YAIhBsO,WAAY,CACVC,GAAI,CACFvO,SAAU,UAEZwO,GAAI,CACFxO,SAAU,UAEZyO,GAAI,CACFzO,SAAU,OACVkF,WAAY,MAGhBnD,QAAS,SAAC2M,GAAD,gB9C7CmB,G8C6CqBA,EAAxC,QACTC,MAAO,CACL7K,aAAc,IAIL8K,GAAaC,aAAe,MACpC5B,GADmC,CAEtCrS,QAAQ,MACHqS,GAAUC,QADR,CAELvU,OAAQ,CACN+B,OAAQ,qBACRoS,MAAO,sBACPD,SAAU,uBAEZjL,WAAY,CACVkN,QAASjE,KAAK,MAEhB5P,QAAS,CACPH,KAAM+P,KAAK,UAKJkE,GAAYF,aAAe,MACnC5B,GADkC,CAErCrS,QAAQ,MACHqS,GAAUC,QADR,CAELvU,OAAQ,CACN+B,OAAQ,2BACRoS,MAAO,4BAET7R,QAAS,CACPH,KAAM+P,KAAK,MAEbjS,KAAM,YC3FKoW,GAbO,WAAO,IAAD,EACAjV,IAAjBxC,EADiB,oBACjBA,YAET,OACE,kBAAC0X,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAACC,EAAA,EAAD,CAAe7U,MAAO/C,EAAcwX,GAAYH,IAC9C,kBAACQ,EAAA,EAAD,MACA,kBAAC,GAAD,SCJYC,QACW,cAA7B3Y,OAAOsC,SAASsW,UAEe,UAA7B5Y,OAAOsC,SAASsW,UAEhB5Y,OAAOsC,SAASsW,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,SAINC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1049e9be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Spinner_root__30P1U\",\"load6\":\"Spinner_load6__2K9aE\",\"round\":\"Spinner_round__3ZW9V\"};","import React, { useContext, useState, useEffect, createContext } from \"react\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst WindowWidthContext = createContext(0);\r\nexport const useWindowWidth = () => useContext(WindowWidthContext);\r\n\r\nconst WindowWidthProvider = ({ children }: Props) => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <WindowWidthContext.Provider value={width}>\r\n      {children}\r\n    </WindowWidthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WindowWidthProvider;\r\n","import { ISettings } from \"./types\";\r\n\r\n// export const EXPIRATION_TIMEFRAME = 3660000;\r\nexport const EXPIRATION_TIMEFRAME = 7.2e6;\r\nexport const APP_STRUCTURE = {\r\n  welcome: \"welcome\",\r\n  forecast: \"forecast\",\r\n  favorites: \"favorites\",\r\n  settings: \"settings\"\r\n};\r\n\r\nexport const LOCAL_STORAGE = {\r\n  isDrawerOpen: \"isDrawerOpen\",\r\n  isThemeDark: \"isThemeDark\",\r\n  weatherForecast: \"weather_forecast_\",\r\n  launchLocation: \"launch_location\"\r\n};\r\n\r\nexport const INITIAL_SETTINGS: ISettings = {\r\n  favorites: [],\r\n  isDrawerOpen: false,\r\n  isThemeDark: false,\r\n  lastLocation: null\r\n};\r\n\r\n// Styles -------------------------------------\r\nexport const LIST_ITEM_GUTTER_SIZE = \"1rem\";\r\nexport const SVG_ICON_FONT_SIZE = \"1.5rem\";\r\nexport const ACTIVE_LINK_BORDER_SIZE = \"0.375rem\";\r\n\r\n// should be larger than anything in toolbar\r\nexport const TOOLBAR_HEIGHT = \"4rem\";\r\n\r\nexport const SCALING_FACTOR = 0.5;\r\n\r\nexport const drawerIconWidth = `calc(${LIST_ITEM_GUTTER_SIZE} * 2 + ${SVG_ICON_FONT_SIZE})`;\r\nexport const toolbarHeightMin = `calc(${TOOLBAR_HEIGHT} - ${SCALING_FACTOR}rem)`;\r\nexport const listItemIconMinWidth = `calc(${SVG_ICON_FONT_SIZE} * 2)`;\r\nexport const listItemLeftGutterSize = `calc(${LIST_ITEM_GUTTER_SIZE} - ${ACTIVE_LINK_BORDER_SIZE})`;\r\n","export const FETCH_INIT = \"FETCH_INIT\";\r\nexport type FETCH_INIT = typeof FETCH_INIT;\r\n\r\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\r\nexport type FETCH_SUCCESS = typeof FETCH_SUCCESS;\r\n\r\nexport const FETCH_FAILURE = \"FETCH_FAILURE\";\r\nexport type FETCH_FAILURE = typeof FETCH_FAILURE;\r\n\r\nexport const TOGGLE_DRAWER = \"TOGGLE_DRAWER\";\r\nexport type TOGGLE_DRAWER = typeof TOGGLE_DRAWER;\r\n\r\nexport const TOGGLE_THEME = \"TOGGLE_THEME\";\r\nexport type TOGGLE_THEME = typeof TOGGLE_THEME;\r\n\r\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\r\nexport type ADD_TO_FAVORITES = typeof ADD_TO_FAVORITES;\r\n\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";\r\nexport type REMOVE_FROM_FAVORITES = typeof REMOVE_FROM_FAVORITES;\r\n\r\nexport const SET_LAST_LOCATION = \"SET_LAST_LOCATION\";\r\nexport type SET_LAST_LOCATION = typeof SET_LAST_LOCATION;\r\n","import {\r\n  TOGGLE_DRAWER,\r\n  TOGGLE_THEME,\r\n  SET_LAST_LOCATION,\r\n  ADD_TO_FAVORITES,\r\n  REMOVE_FROM_FAVORITES\r\n} from \"../actions\";\r\nimport { ISettings } from \"../types\";\r\nimport { LOCAL_STORAGE } from \"../constants\";\r\n\r\nexport type Action =\r\n  | { type: TOGGLE_DRAWER }\r\n  | { type: TOGGLE_THEME }\r\n  | { type: SET_LAST_LOCATION; lastLocation: string }\r\n  | { type: ADD_TO_FAVORITES; location: string }\r\n  | { type: REMOVE_FROM_FAVORITES; location: string };\r\n\r\nfunction reduceSettings(state: ISettings, action: Action): ISettings {\r\n  switch (action.type) {\r\n    case TOGGLE_DRAWER: {\r\n      const { isDrawerOpen } = state;\r\n      localStorage.setItem(LOCAL_STORAGE.isDrawerOpen, String(!isDrawerOpen));\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: !isDrawerOpen\r\n      };\r\n    }\r\n    case TOGGLE_THEME: {\r\n      const { isThemeDark } = state;\r\n      localStorage.setItem(LOCAL_STORAGE.isThemeDark, String(!isThemeDark));\r\n      return {\r\n        ...state,\r\n        isThemeDark: !isThemeDark\r\n      };\r\n    }\r\n    case SET_LAST_LOCATION: {\r\n      return {\r\n        ...state,\r\n        lastLocation: action.lastLocation\r\n      };\r\n    }\r\n    case ADD_TO_FAVORITES: {\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, action.location]\r\n      };\r\n    }\r\n    case REMOVE_FROM_FAVORITES: {\r\n      return {\r\n        ...state,\r\n        favorites: [\r\n          ...state.favorites.filter(location => action.location !== location)\r\n        ]\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default reduceSettings;\r\n","import { useEffect } from \"react\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport { TOGGLE_THEME } from \"../actions\";\r\nimport { TDispatchSettings } from \"../types\";\r\nimport { LOCAL_STORAGE } from \"../constants\";\r\n\r\nconst useTheme = (dispatch: TDispatchSettings, isThemeDark: boolean) => {\r\n  const prefersDarkTheme = useMediaQuery(\"(prefers-color-scheme: dark)\", {\r\n    noSsr: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    let storedTheme = localStorage.getItem(LOCAL_STORAGE.isThemeDark);\r\n    if (storedTheme) {\r\n      if (isThemeDark !== JSON.parse(storedTheme)) {\r\n        dispatch({ type: TOGGLE_THEME });\r\n      }\r\n    } else {\r\n      if (isThemeDark !== prefersDarkTheme) {\r\n        dispatch({ type: TOGGLE_THEME });\r\n      }\r\n      localStorage.setItem(LOCAL_STORAGE.isThemeDark, String(prefersDarkTheme));\r\n    }\r\n  }, [dispatch, isThemeDark, prefersDarkTheme]);\r\n};\r\n\r\nexport default useTheme;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { TOGGLE_DRAWER } from \"../actions\";\r\nimport { TDispatchSettings } from \"../types\";\r\nimport { LOCAL_STORAGE } from \"../constants\";\r\n\r\nconst useDrawer = (dispatch: TDispatchSettings, isDrawerOpen: boolean) => {\r\n  useEffect(() => {\r\n    const storedDrawer = localStorage.getItem(LOCAL_STORAGE.isDrawerOpen);\r\n    if (storedDrawer) {\r\n      const settings: boolean = JSON.parse(storedDrawer);\r\n      if (settings !== isDrawerOpen) {\r\n        dispatch({ type: TOGGLE_DRAWER });\r\n      }\r\n    } else {\r\n      localStorage.setItem(LOCAL_STORAGE.isDrawerOpen, String(isDrawerOpen));\r\n    }\r\n  }, [dispatch, isDrawerOpen]);\r\n};\r\n\r\nexport default useDrawer;\r\n","import React, { useReducer, useContext, createContext, Dispatch } from \"react\";\r\nimport { INITIAL_SETTINGS } from \"../constants\";\r\nimport reduceSettings, { Action } from \"../reducers/reduceSettings\";\r\nimport useTheme from \"../hooks/useTheme\";\r\nimport useDrawer from \"../hooks/useDrawer\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst SettingsContext = createContext(INITIAL_SETTINGS);\r\nconst SettingsDispatchContext = createContext<Dispatch<Action>>(() => {});\r\n\r\nexport const useSettings = () => {\r\n  const settings = useContext(SettingsContext);\r\n  const dispatch = useContext(SettingsDispatchContext);\r\n  return [settings, dispatch] as const;\r\n};\r\n\r\nconst SettingsProvider = ({ children }: Props) => {\r\n  const [settings, dispatch] = useReducer(reduceSettings, INITIAL_SETTINGS);\r\n  const { isDrawerOpen, isThemeDark } = settings;\r\n\r\n  useTheme(dispatch, isThemeDark);\r\n  useDrawer(dispatch, isDrawerOpen);\r\n\r\n  return (\r\n    <SettingsContext.Provider value={settings}>\r\n      <SettingsDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </SettingsDispatchContext.Provider>\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SettingsProvider;\r\n","import React from \"react\";\r\nimport {\r\n  NavLink as RouterLink,\r\n  LinkProps as RouterLinkProps\r\n} from \"react-router-dom\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { ACTIVE_LINK_BORDER_SIZE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      borderLeft: `${ACTIVE_LINK_BORDER_SIZE} solid transparent`\r\n    },\r\n    active: {\r\n      borderColor: theme.palette.secondary.main\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  icon?: React.ReactElement;\r\n  primary: string;\r\n  to: string;\r\n};\r\n\r\nconst ListItemLink = ({ icon, primary, to }: Props) => {\r\n  const classes = useStyles();\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, \"to\">>((itemProps, ref) => (\r\n        <RouterLink\r\n          to={`/${to}`}\r\n          ref={ref}\r\n          activeClassName={classes.active}\r\n          {...itemProps}\r\n        />\r\n      )),\r\n    [to, classes.active]\r\n  );\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink} className={classes.root}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItemLink;\r\n","import { IForecast, ICurrentWeatherData, IGeoLocationData } from \"./types\";\r\nimport { EXPIRATION_TIMEFRAME } from \"./constants\";\r\n\r\nexport const capitalizeFirstChar = (string: string) => {\r\n  return `${string[0].toUpperCase()}${string.slice(1)}`;\r\n};\r\n\r\nexport const checkIfExpired = (requestTime: number) => {\r\n  const currentDate = new Date().getTime();\r\n  const isExpired = currentDate - requestTime > EXPIRATION_TIMEFRAME;\r\n  return isExpired;\r\n};\r\n\r\nexport const fetchLocation = async () => {\r\n  try {\r\n    const response = await fetch(`https://get.geojs.io/v1/ip/geo.json`);\r\n    if (!response.ok) return null;\r\n    const data: IGeoLocationData = await response.json();\r\n    const city = data.city.toLowerCase();\r\n    return city;\r\n  } catch (error) {\r\n    console.error(\"There has been a problem with your fetch operation:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const fetchForecast = async (queriedCity: string) => {\r\n  try {\r\n    const OPENWEATHERMAP_KEY = process.env.REACT_APP_OPENWEATHERMAP_KEY;\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${queriedCity}`;\r\n    const updatedUrl = `${url}&appid=${OPENWEATHERMAP_KEY}&units=metric`;\r\n    const response = await fetch(updatedUrl);\r\n    if (!response.ok) return null;\r\n    const data: ICurrentWeatherData = await response.json();\r\n\r\n    const forecast: IForecast = {\r\n      currentWeather: {\r\n        city: data.name,\r\n        condition: data.weather[0].main,\r\n        country: data.sys.country,\r\n        temperature: Math.round(data.main.temp),\r\n        cloudiness: data.clouds.all,\r\n        windSpeed: data.wind.speed,\r\n        visibility: data.visibility / 1000,\r\n        pressure: data.main.pressure,\r\n        humidity: data.main.humidity\r\n      },\r\n      requestTime: new Date().getTime()\r\n    };\r\n    storeWeather(queriedCity, forecast);\r\n    return forecast;\r\n  } catch (error) {\r\n    console.error(\"There has been a problem with your fetch operation:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getExpirationTimeframe = (requestTime: number) => {\r\n  return EXPIRATION_TIMEFRAME - (new Date().getTime() - requestTime);\r\n};\r\n\r\nexport const getLaunchLocation = async () => {\r\n  const launchLocation = await fetchLocation();\r\n  if (!launchLocation) return null;\r\n  localStorage.setItem(\"launch_location\", launchLocation);\r\n  return launchLocation;\r\n};\r\n\r\nexport const getReadableRequestTime = (requestTime: number) => {\r\n  const currentYear = new Date().getFullYear();\r\n  const requestYear = new Date(requestTime).getFullYear();\r\n  const time = sliceSplittedString(\r\n    new Date(requestTime).toTimeString(),\r\n    \" \",\r\n    0,\r\n    1\r\n  ).slice(0, 5);\r\n  const date = new Date(requestTime).toDateString();\r\n\r\n  if (currentYear === requestYear) {\r\n    const currentDay = new Date().getDate();\r\n    const requestDay = new Date(requestTime).getDate();\r\n\r\n    if (currentDay === requestDay) {\r\n      return time;\r\n    } else if (currentDay - 1 === requestDay) {\r\n      return `Yesterday, ${time}`;\r\n    } else {\r\n      return `${sliceSplittedString(date, \" \", 1, 3)}, ${time}`;\r\n    }\r\n  } else {\r\n    return `${sliceSplittedString(date, \" \", 1)}, ${time}`;\r\n  }\r\n};\r\n\r\nexport const getRemainingTime = (milliseconds: number) => {\r\n  milliseconds += 60000;\r\n  const hours = Math.floor((milliseconds / 3600000) % 60);\r\n  const minutes = Math.floor((milliseconds / 60000) % 60);\r\n  // const seconds = Math.floor((milliseconds / 1000) % 60);\r\n  if (hours > 0) {\r\n    return `${hours}h ${minutes}m`;\r\n  } else {\r\n    return `${minutes}m`;\r\n  }\r\n};\r\n\r\nexport const removeExpiredWeather = (city: string) => {\r\n  for (let key in localStorage) {\r\n    if (key.includes(\"weather\") && !key.includes(city)) {\r\n      const requestTime: number = JSON.parse(localStorage[key]).requestTime;\r\n      if (checkIfExpired(requestTime)) {\r\n        localStorage.removeItem(key);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const sliceSplittedString = (\r\n  string: string,\r\n  separator: string,\r\n  beginIndex: number,\r\n  endIndex?: number\r\n) => {\r\n  return string\r\n    .split(separator)\r\n    .slice(beginIndex, endIndex)\r\n    .join(separator);\r\n};\r\n\r\nexport const storeWeather = (city: string, weather: object) => {\r\n  localStorage.setItem(`weather_forecast_${city}`, JSON.stringify(weather));\r\n};\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport ListItemLink from \"../ListItemLink/ListItemLink\";\r\nimport { useSettings } from \"../../providers/SettingsProvider\";\r\n\r\nimport {\r\n  TOOLBAR_HEIGHT,\r\n  toolbarHeightMin,\r\n  drawerIconWidth,\r\n  APP_STRUCTURE,\r\n  listItemIconMinWidth\r\n} from \"../../constants\";\r\nimport { capitalizeFirstChar } from \"../../utils\";\r\n\r\nconst DRAWER_MIN_WIDTH = \"8.5rem\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: DRAWER_MIN_WIDTH,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"13rem\"\r\n      },\r\n      \"& .MuiListItemIcon-root\": {\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          minWidth: `calc(${listItemIconMinWidth} - 0.5rem)`\r\n        }\r\n      },\r\n      \"& .MuiTypography-body1\": {\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          fontSize: \"0.9rem\"\r\n        }\r\n      }\r\n    },\r\n    isOpen: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      }),\r\n      width: DRAWER_MIN_WIDTH,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"13rem\"\r\n      }\r\n    },\r\n    isClosed: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: drawerIconWidth\r\n    },\r\n    list: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-between\",\r\n      height: `calc(100vh - ${toolbarHeightMin})`,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: `calc(100vh - ${TOOLBAR_HEIGHT})`\r\n      }\r\n    },\r\n    paper: {\r\n      top: toolbarHeightMin,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        top: TOOLBAR_HEIGHT\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AppDrawer = () => {\r\n  const classes = useStyles();\r\n  const [{ isDrawerOpen }] = useSettings();\r\n  // console.log(\"drawer\");\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      open={isDrawerOpen}\r\n      className={clsx(classes.root, {\r\n        [classes.isOpen]: isDrawerOpen,\r\n        [classes.isClosed]: !isDrawerOpen\r\n      })}\r\n      classes={{\r\n        paper: clsx(classes.paper, {\r\n          [classes.isOpen]: isDrawerOpen,\r\n          [classes.isClosed]: !isDrawerOpen\r\n        })\r\n      }}\r\n    >\r\n      <List disablePadding className={classes.list}>\r\n        <div>\r\n          <ListItemLink\r\n            icon={<HomeOutlinedIcon />}\r\n            primary={capitalizeFirstChar(APP_STRUCTURE.forecast)}\r\n            to={APP_STRUCTURE.forecast}\r\n          />\r\n          <ListItemLink\r\n            icon={<StarBorderIcon />}\r\n            primary={capitalizeFirstChar(APP_STRUCTURE.favorites)}\r\n            to={APP_STRUCTURE.favorites}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Divider />\r\n          <ListItemLink\r\n            icon={<SettingsOutlinedIcon />}\r\n            primary={capitalizeFirstChar(APP_STRUCTURE.settings)}\r\n            to={APP_STRUCTURE.settings}\r\n          />\r\n        </div>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AppDrawer;\r\n","import React from \"react\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { drawerIconWidth } from \"../../constants\";\r\nimport { TOGGLE_DRAWER } from \"../../actions\";\r\nimport { useSettings } from \"../../providers/SettingsProvider\";\r\n\r\ntype Props = {\r\n  className?: string;\r\n} & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n  label: \"Toggle drawer\"\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      alignSelf: \"stretch\",\r\n      display: \"flex\",\r\n      marginRight: theme.spacing(1),\r\n      width: drawerIconWidth,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginRight: theme.spacing(2)\r\n      }\r\n    },\r\n    button: {\r\n      width: \"100%\"\r\n    }\r\n  })\r\n);\r\n\r\nconst SidebarToggle = ({ label, ...other }: Props) => {\r\n  const classes = useStyles();\r\n  const [, dispatch] = useSettings();\r\n\r\n  const toggleDrawer = () => {\r\n    dispatch({ type: TOGGLE_DRAWER });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        aria-label={label}\r\n        color=\"inherit\"\r\n        classes={{ root: classes.button }}\r\n        onClick={toggleDrawer}\r\n        {...other}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebarToggle.defaultProps = defaultProps;\r\nexport default SidebarToggle;\r\n","import React from \"react\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\n\r\nimport { TOGGLE_THEME } from \"../../actions\";\r\nimport { useSettings } from \"../../providers/SettingsProvider\";\r\n\r\ntype Props = {} & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n  label: \"Toggle theme\"\r\n};\r\n\r\nconst ThemeToggle = ({ label }: Props) => {\r\n  const [{ isThemeDark }, dispatch] = useSettings();\r\n\r\n  const handleClick = () => dispatch({ type: TOGGLE_THEME });\r\n  return (\r\n    <Tooltip title={label}>\r\n      <IconButton aria-label={label} color=\"inherit\" onClick={handleClick}>\r\n        {isThemeDark ? <WbSunnyIcon /> : <Brightness2Icon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nThemeToggle.defaultProps = defaultProps;\r\nexport default ThemeToggle;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ThemeToggle from \"../../components/ThemeToggle/ThemeToggle\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      \"& > *:not(:last-child)\": {\r\n        marginRight: theme.spacing(0.5)\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport type ToolbarButtonsProps = {\r\n  refresh?: JSX.Element;\r\n  favor?: JSX.Element;\r\n};\r\n\r\ntype Props = {} & ToolbarButtonsProps;\r\n\r\nconst ToolbarButtons = ({ refresh, favor }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {refresh}\r\n      {favor}\r\n      <ThemeToggle />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolbarButtons;\r\n","import React from \"react\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport DrawerToggle from \"../DrawerToggle/DrawerToggle\";\r\nimport ToolbarButtons, {\r\n  ToolbarButtonsProps\r\n} from \"../ToolbarButtons/ToolbarButtons\";\r\n\r\nimport { toolbarHeightMin } from \"../../constants\";\r\nimport { capitalizeFirstChar } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      \"& h1\": {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          fontSize: \"2rem\"\r\n        }\r\n      },\r\n      \"& .MuiIconButton-root\": {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          fontSize: \"1.5rem\"\r\n        }\r\n      }\r\n    },\r\n    toolbar: {\r\n      paddingRight: theme.spacing(1),\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: toolbarHeightMin\r\n      },\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        paddingRight: theme.spacing(2)\r\n      }\r\n    },\r\n    title: {\r\n      flexGrow: 1\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  search?: JSX.Element;\r\n  heading?: string;\r\n} & ToolbarButtonsProps;\r\n\r\nconst AppHeader = ({ heading, search, ...other }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar className={classes.root}>\r\n      <Toolbar\r\n        disableGutters\r\n        variant=\"dense\"\r\n        classes={{ root: classes.toolbar }}\r\n      >\r\n        <DrawerToggle />\r\n        <Typography variant=\"h1\" className={classes.title}>\r\n          {heading && capitalizeFirstChar(heading)}\r\n        </Typography>\r\n        {search}\r\n        <ToolbarButtons {...other} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport styles from \"./Spinner.module.scss\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: theme.palette.secondary.main,\r\n      fontSize: \"5.6rem\",\r\n      textIndent: \"-9999em\",\r\n      overflow: \"hidden\",\r\n      width: \"1em\",\r\n      height: \"1em\",\r\n      borderRadius: \"50%\",\r\n      margin: \"0.8em auto\"\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  className?: string;\r\n};\r\n\r\nconst Spinner = ({ className }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={clsx(styles.root, classes.root, className)}>Loading...</div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      alignSelf: \"center\",\r\n      width: \"25rem\",\r\n      \"& > svg\": {\r\n        fontSize: \"2rem\",\r\n        marginRight: theme.spacing(1)\r\n      }\r\n    },\r\n    errorBorder: {\r\n      padding: \"1em\",\r\n      boxShadow: `0 0 0 1px ${theme.palette.primary.contrastText}`\r\n    }\r\n  })\r\n);\r\n\r\nexport type ErrorProps = {\r\n  errorStyles?: string;\r\n  disableErrorBorder?: boolean;\r\n};\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n} & ErrorProps;\r\n\r\nconst Error = ({\r\n  children,\r\n  errorStyles,\r\n  disableErrorBorder = false\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        classes.root,\r\n        errorStyles,\r\n        !disableErrorBorder && classes.errorBorder\r\n      )}\r\n    >\r\n      <ErrorOutlineIcon />\r\n      <p>{children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Error, { ErrorProps } from \"../Error/Error\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  spinnerStyles?: string;\r\n  errorMessage: string;\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n  displayContent?: boolean;\r\n} & ErrorProps;\r\n\r\nconst DataLoader = ({\r\n  children,\r\n  spinnerStyles,\r\n  isLoading,\r\n  errorMessage,\r\n  isError,\r\n  displayContent = false,\r\n  ...other\r\n}: Props) => {\r\n  let rendered: React.ReactNode;\r\n  if (isLoading) {\r\n    rendered = <Spinner className={spinnerStyles} />;\r\n  } else {\r\n    if (displayContent && isError) {\r\n      rendered = (\r\n        <>\r\n          <Error {...other}>{errorMessage}</Error>\r\n          {children}\r\n        </>\r\n      );\r\n    } else if (isError) {\r\n      rendered = <Error {...other}>{errorMessage}</Error>;\r\n    } else {\r\n      rendered = children;\r\n    }\r\n  }\r\n\r\n  return <>{rendered}</>;\r\n};\r\n\r\nexport default DataLoader;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppHeader from \"../../components/AppHeader/AppHeader\";\r\nimport DataLoader from \"../../components/DataLoader/DataLoader\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      width: \"100%\",\r\n      marginTop: \"1rem\",\r\n      \"& form\": {\r\n        marginRight: \"0\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport type WelcomeProps = {\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n};\r\n\r\ntype Props = {\r\n  search: JSX.Element;\r\n} & WelcomeProps;\r\n\r\nconst Welcome = ({ search, isLoading, isError }: Props) => {\r\n  const classes = useStyles();\r\n  // console.log(\"welcome\");\r\n  return (\r\n    <>\r\n      <AppHeader heading={APP_STRUCTURE.forecast} />\r\n      <DataLoader\r\n        isLoading={isLoading}\r\n        isError={isError}\r\n        displayContent\r\n        errorMessage={`We couldn't find your city automatically,\r\n         you can still look for it manually.`}\r\n      >\r\n        <div className={classes.root}>{search}</div>\r\n      </DataLoader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      fontWeight: \"lighter\",\r\n      position: \"relative\",\r\n      letterSpacing: \"0px\",\r\n      // paddingRight: theme.spacing(2.5),\r\n      paddingRight: theme.spacing(4.5),\r\n      fontSize: \"3rem\",\r\n      lineHeight: \"0.85em\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        fontSize: \"5rem\",\r\n        paddingRight: theme.spacing(7.5)\r\n      },\r\n      \"& span\": {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        right: \"0\",\r\n        fontSize: \"0.7em\",\r\n        lineHeight: \"0.9em\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n  temperature: number;\r\n};\r\n\r\nconst Temperature = ({ children, className, temperature }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <p className={clsx(classes.root, className)}>\r\n      {temperature}\r\n      <span>&deg;{children}</span>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Temperature from \"../Temperature/Temperature\";\r\nimport { ICurrentWeather } from \"../../types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"0 auto\",\r\n      textAlign: \"center\",\r\n      maxWidth: \"28rem\",\r\n      \"& > div\": {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginBottom: theme.spacing(0.5)\r\n      },\r\n      \"& > p:first-of-type\": {\r\n        fontWeight: \"lighter\",\r\n        fontSize: \"1rem\",\r\n        marginBottom: theme.spacing(0.5),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          fontSize: \"1.5rem\"\r\n        }\r\n      },\r\n      \"& ul\": {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n        \"& li:not(:last-child)\": {\r\n          marginRight: \"1em\"\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      marginLeft: \"1em\",\r\n      \"& button\": {\r\n        border: \"1px solid orange\",\r\n        fontSize: \"1.2rem\",\r\n        padding: \"0.3em\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  data: ICurrentWeather;\r\n  timer: JSX.Element;\r\n};\r\n\r\nconst CurrentWeather = ({ data, timer }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section className={classes.root}>\r\n      <Typography variant=\"h2\">\r\n        {data.city}, {data.country}\r\n      </Typography>\r\n      <div>\r\n        <Temperature temperature={data.temperature}>C</Temperature>\r\n        {/* <div className={classes.scales}>\r\n              <IconButton aria-label=\"Convert to celsius\" color=\"inherit\">\r\n                C\r\n              </IconButton>\r\n              <IconButton aria-label=\"Convert to fahrenheit\" color=\"inherit\">\r\n                F\r\n              </IconButton>\r\n            </div> */}\r\n      </div>\r\n      <p>{data.condition}</p>\r\n      {timer}\r\n      <ul>\r\n        <li>Cloudiness: {data.cloudiness}%</li>\r\n        <li>Wind: {data.windSpeed} m/s</li>\r\n        <li>Visibility: {data.visibility} km</li>\r\n        <li>Pressure: {data.pressure} mb</li>\r\n        <li>Humidity: {data.humidity}%</li>\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES } from \"../../actions\";\r\nimport { useSettings } from \"../../providers/SettingsProvider\";\r\n\r\nexport type FavorProps = {\r\n  lastLocation: string;\r\n};\r\n\r\ntype Props = {} & FavorProps;\r\n\r\nconst Favor = ({ lastLocation }: Props) => {\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const [{ favorites }, dispatch] = useSettings();\r\n\r\n  const addToFavorites = () => {\r\n    dispatch({ type: ADD_TO_FAVORITES, location: lastLocation });\r\n  };\r\n\r\n  const removeFromFavorites = () => {\r\n    dispatch({ type: REMOVE_FROM_FAVORITES, location: lastLocation });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsFavorite(favorites.includes(lastLocation));\r\n  }, [favorites, lastLocation]);\r\n\r\n  const label = isFavorite ? \"Remove from Favorites\" : \"Add to Favorites\";\r\n  // console.log(lastLocation, favorites);\r\n  return (\r\n    <Tooltip title={label}>\r\n      <IconButton\r\n        aria-label={label}\r\n        color=\"inherit\"\r\n        onClick={isFavorite ? removeFromFavorites : addToFavorites}\r\n      >\r\n        {isFavorite ? <StarIcon /> : <StarBorderIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Favor;\r\n","import React from \"react\";\r\nimport { TSetBoolean } from \"../types\";\r\n\r\nconst useTimer = (\r\n  expirationTimeframe: number,\r\n  setRefreshIsDisabled: TSetBoolean\r\n) => {\r\n  const [timer, setTimer] = React.useState(expirationTimeframe);\r\n\r\n  React.useEffect(() => {\r\n    if (expirationTimeframe >= 1000) {\r\n      // console.log(\"test\");\r\n      setTimer(expirationTimeframe);\r\n      setRefreshIsDisabled(true);\r\n    }\r\n  }, [expirationTimeframe, setRefreshIsDisabled]);\r\n\r\n  React.useEffect(() => {\r\n    const timerTimeout = setTimeout(() => {\r\n      if (timer >= 1000) {\r\n        setTimer(timer => timer - 1000);\r\n        // console.log(\"count\");\r\n      } else {\r\n        setRefreshIsDisabled(false);\r\n        // console.log(\"end\");\r\n      }\r\n      // console.log(\"timer\");\r\n    }, 1000);\r\n    return () => clearTimeout(timerTimeout);\r\n  }, [timer, setRefreshIsDisabled]);\r\n\r\n  // console.log(expirationTimeframe, timer);\r\n  return timer;\r\n};\r\n\r\nexport default useTimer;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { getRemainingTime, getReadableRequestTime } from \"../../utils\";\r\nimport { TSetBoolean } from \"../../types\";\r\nimport useTimer from \"../../hooks/useTimer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      fontSize: \"0.8rem\",\r\n      marginBottom: theme.spacing(1.5),\r\n      \"&\": {\r\n        fontWeight: \"500\"\r\n      },\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        fontSize: \"0.9rem\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  expirationTimeframe: number;\r\n  setRefreshIsDisabled: TSetBoolean;\r\n  requestTime: number;\r\n};\r\n\r\nconst Timer = ({\r\n  expirationTimeframe,\r\n  setRefreshIsDisabled,\r\n  requestTime\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  const timer = useTimer(expirationTimeframe, setRefreshIsDisabled);\r\n\r\n  return (\r\n    <p className={classes.root}>\r\n      Updated as of {getReadableRequestTime(requestTime)}. Refresh{\" \"}\r\n      {timer >= 1000\r\n        ? `will be available in: ${getRemainingTime(timer)}`\r\n        : \"is available!\"}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n  disabled: boolean;\r\n} & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n  label: \"Refresh\"\r\n};\r\n\r\nconst Refresh = ({ label, ...other }: Props) => {\r\n  return (\r\n    <Tooltip title={label}>\r\n      <span>\r\n        <IconButton aria-label={label} color=\"inherit\" {...other}>\r\n          <RefreshIcon />\r\n        </IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nRefresh.defaultProps = defaultProps;\r\nexport default Refresh;\r\n","import React, { useState } from \"react\";\r\nimport Refresh from \"../components/Refresh/Refresh\";\r\n\r\nconst useRefresh = (isDataFetched: boolean, onClick: () => void) => {\r\n  const [refreshIsDisabled, setRefreshIsDisabled] = useState(true);\r\n  const refresh = <Refresh onClick={onClick} disabled={refreshIsDisabled} />;\r\n  if (isDataFetched) {\r\n    return [setRefreshIsDisabled, refresh] as const;\r\n  } else {\r\n    return [setRefreshIsDisabled] as const;\r\n  }\r\n};\r\n\r\nexport default useRefresh;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport CurrentWeather from \"../../components/CurrentWeather/CurrentWeather\";\r\nimport AppHeader from \"../../components/AppHeader/AppHeader\";\r\nimport DataLoader from \"../../components/DataLoader/DataLoader\";\r\nimport Favor, { FavorProps } from \"../../components/Favor/Favor\";\r\nimport Timer from \"../../components/Timer/Timer\";\r\nimport { getExpirationTimeframe } from \"../../utils\";\r\nimport useRefresh from \"../../hooks/useRefresh\";\r\nimport { State as SUseFetch } from \"../../hooks/useFetch\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\nimport { TGetData, IForecast } from \"../../types\";\r\nimport { capitalizeFirstChar } from \"../../utils\";\r\n\r\ntype Props = {\r\n  getForecast: TGetData;\r\n  forecast: SUseFetch<IForecast>;\r\n  search: JSX.Element;\r\n} & FavorProps;\r\n\r\nconst Forecast = ({ lastLocation, search, forecast, getForecast }: Props) => {\r\n  const { data, isLoading, isError } = forecast;\r\n  const [setRefreshIsDisabled, refresh] = useRefresh(!!data, () =>\r\n    getForecast(lastLocation)\r\n  );\r\n  const favor = data ? <Favor lastLocation={lastLocation} /> : undefined;\r\n\r\n  useEffect(() => {\r\n    getForecast(lastLocation);\r\n  }, [getForecast, lastLocation]);\r\n\r\n  // console.log(\"forecast\");\r\n  return (\r\n    <>\r\n      <AppHeader\r\n        heading={APP_STRUCTURE.forecast}\r\n        refresh={refresh}\r\n        favor={favor}\r\n        search={search}\r\n      />\r\n      <DataLoader\r\n        isLoading={isLoading}\r\n        isError={isError}\r\n        errorMessage={`We couldn't find ${capitalizeFirstChar(\r\n          lastLocation\r\n        )}. Please, check if the name is correct or try again later.`}\r\n      >\r\n        {data && (\r\n          <CurrentWeather\r\n            data={data.currentWeather}\r\n            timer={\r\n              <Timer\r\n                expirationTimeframe={getExpirationTimeframe(data.requestTime)}\r\n                setRefreshIsDisabled={setRefreshIsDisabled}\r\n                requestTime={data.requestTime}\r\n              />\r\n            }\r\n          />\r\n        )}\r\n      </DataLoader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { TFormEvent } from \"../../types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      display: \"flex\",\r\n      boxShadow: `0 0 0 1px ${theme.palette.primary.contrastText}`\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  onSubmit?: TFormEvent;\r\n};\r\n\r\nconst Form = ({ children, className, onSubmit }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <form className={clsx(classes.root, className)} onSubmit={onSubmit}>\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { forwardRef } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { TButton } from \"../../types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginLeft: \"3px\"\r\n    }\r\n  })\r\n);\r\n\r\nexport type InputButtonProps = {\r\n  label: string;\r\n  type?: \"submit\";\r\n  onClick?: () => void;\r\n};\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n} & InputButtonProps;\r\n\r\nconst InputButton = forwardRef<TButton, Props>(\r\n  ({ children, label, ...other }, ref) => {\r\n    const classes = useStyles();\r\n    return (\r\n      <Tooltip title={label}>\r\n        <IconButton\r\n          aria-label={label}\r\n          color=\"inherit\"\r\n          ref={ref}\r\n          {...other}\r\n          className={classes.root}\r\n        >\r\n          {children}\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  }\r\n);\r\n\r\nexport default InputButton;\r\n","import React, { forwardRef } from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputButton, { InputButtonProps } from \"../InputButton/InputButton\";\r\nimport { TButton } from \"../../types\";\r\n\r\ntype Props = {} & InputButtonProps;\r\n\r\nconst SearchButton = forwardRef<TButton, Props>(function SearchButton(\r\n  { ...other },\r\n  ref\r\n) {\r\n  return (\r\n    <InputButton ref={ref} {...other}>\r\n      <SearchIcon />\r\n    </InputButton>\r\n  );\r\n});\r\n\r\nexport default SearchButton;\r\n","import React, { forwardRef } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { TInput, TChangeInput } from \"../../types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: theme.palette.primary.contrastText,\r\n      backgroundColor: \"transparent\",\r\n      border: \"none\",\r\n      fontSize: \"0.9rem\",\r\n      padding: \"1em 0.8em\",\r\n      width: \"100%\",\r\n      \"&:focus\": {\r\n        boxShadow: `0 0 0 .2rem ${theme.palette.action.active}`\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport type InputFieldProps = {\r\n  value?: string;\r\n  name?: string;\r\n  onBlur?: () => void;\r\n};\r\n\r\ntype Props = {\r\n  placeholder: string;\r\n  type?: \"text\" | \"search\";\r\n  onChange?: TChangeInput;\r\n} & InputFieldProps;\r\n\r\nconst InputField = forwardRef<TInput, Props>(function InputField(\r\n  { value, name, type = \"text\", onBlur, onChange, placeholder },\r\n  ref\r\n) {\r\n  const classes = useStyles();\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      value={value}\r\n      name={name}\r\n      onChange={onChange}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      onBlur={onBlur}\r\n      className={classes.root}\r\n    />\r\n  );\r\n});\r\n\r\nexport default InputField;\r\n","import React, { forwardRef } from \"react\";\r\nimport InputField, { InputFieldProps } from \"../InputField/InputField\";\r\nimport { TSetString, TInput, TChangeInput } from \"../../types\";\r\n\r\ntype Props = {\r\n  setSearchQuery: TSetString;\r\n} & InputFieldProps;\r\n\r\nconst SearchField = forwardRef<TInput, Props>(function SearchField(\r\n  { setSearchQuery, ...other },\r\n  ref\r\n) {\r\n  const handleChange: TChangeInput = event => {\r\n    const query = event.currentTarget.value;\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  return (\r\n    <InputField\r\n      ref={ref}\r\n      type=\"search\"\r\n      placeholder=\"Search\"\r\n      onChange={handleChange}\r\n      {...other}\r\n    />\r\n  );\r\n});\r\n\r\nexport default SearchField;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Form from \"../Form/Form\";\r\nimport SearchButton from \"../SearchButton/SearchButton\";\r\nimport SearchField from \"../SearchField/SearchField\";\r\n\r\nimport { SET_LAST_LOCATION } from \"../../actions\";\r\nimport { TFormEvent, TGetData } from \"../../types\";\r\nimport { useSettings } from \"../../providers/SettingsProvider\";\r\nimport { useWindowWidth } from \"../../providers/WindowWidthProvider\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      right: \"15px\",\r\n      zIndex: 1,\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        position: \"static\",\r\n        marginRight: theme.spacing(1.5),\r\n        transform: \"none\",\r\n        zIndex: \"auto\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport type SearchProps = {\r\n  lastLocation: string | null;\r\n};\r\n\r\ntype Props = {\r\n  getData: TGetData;\r\n} & SearchProps;\r\n\r\nconst Search = ({ lastLocation, getData }: Props) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchIsShown, setSearchIsShown] = useState(false);\r\n  const windowWidth = useWindowWidth();\r\n  const showSearchBtn = useRef<HTMLButtonElement>(null);\r\n  const searchFieldRef = useRef<HTMLInputElement>(null);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const [, dispatch] = useSettings();\r\n\r\n  const breakpointMD = theme.breakpoints.values.md;\r\n\r\n  const handleSubmit: TFormEvent = event => {\r\n    event.preventDefault();\r\n    const query = searchQuery.trim().toLowerCase();\r\n    if (query) {\r\n      setSearchQuery(\"\");\r\n      if (query === lastLocation) {\r\n        getData(query);\r\n      } else {\r\n        dispatch({ type: SET_LAST_LOCATION, lastLocation: query });\r\n      }\r\n    }\r\n    if (windowWidth < breakpointMD && showSearchBtn.current) {\r\n      setSearchIsShown(false);\r\n      showSearchBtn.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => setSearchIsShown(false);\r\n\r\n  useEffect(() => {\r\n    if (windowWidth < breakpointMD && searchFieldRef.current) {\r\n      searchFieldRef.current.focus();\r\n    }\r\n  }, [breakpointMD, searchIsShown, windowWidth]);\r\n\r\n  const composeSearch = (onBlur?: () => void) => (\r\n    <Form className={classes.root} onSubmit={handleSubmit}>\r\n      <SearchField\r\n        ref={searchFieldRef}\r\n        value={searchQuery}\r\n        onBlur={onBlur}\r\n        setSearchQuery={setSearchQuery}\r\n      />\r\n      {windowWidth >= breakpointMD && (\r\n        <SearchButton label=\"Search\" type=\"submit\" />\r\n      )}\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {windowWidth >= breakpointMD ? (\r\n        composeSearch()\r\n      ) : (\r\n        <>\r\n          {searchIsShown && composeSearch(handleBlur)}\r\n          <SearchButton\r\n            ref={showSearchBtn}\r\n            label=\"Show search\"\r\n            onClick={() => setSearchIsShown(true)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useReducer, Reducer } from \"react\";\r\nimport { FETCH_INIT, FETCH_FAILURE, FETCH_SUCCESS } from \"../actions\";\r\n\r\nexport type State<T> = {\r\n  data: T | null;\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n};\r\n\r\nexport type Action<T> =\r\n  | { type: FETCH_INIT }\r\n  | { type: FETCH_SUCCESS; data: T }\r\n  | { type: FETCH_FAILURE };\r\n\r\nfunction useFetch<T>() {\r\n  return useReducer<Reducer<State<T>, Action<T>>>(reducer, {\r\n    data: null,\r\n    isLoading: false,\r\n    isError: false\r\n  });\r\n}\r\n\r\nfunction reducer<T>(state: State<T>, action: Action<T>): State<T> {\r\n  switch (action.type) {\r\n    case FETCH_INIT: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false\r\n      };\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      const { data } = action;\r\n      return {\r\n        ...state,\r\n        data,\r\n        isLoading: false\r\n      };\r\n    }\r\n    case FETCH_FAILURE: {\r\n      return {\r\n        ...state,\r\n        data: null,\r\n        isLoading: false,\r\n        isError: true\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default useFetch;\r\n","import { useEffect, useCallback } from \"react\";\r\nimport { fetchForecast, checkIfExpired, removeExpiredWeather } from \"../utils\";\r\nimport { FETCH_INIT, FETCH_SUCCESS, FETCH_FAILURE } from \"../actions\";\r\nimport { IForecast } from \"../types\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst useWeatherApi = (lastLocation?: string) => {\r\n  const [state, dispatch] = useFetch<IForecast>();\r\n\r\n  const getForecast = useCallback(\r\n    async (location: string) => {\r\n      dispatch({ type: FETCH_INIT });\r\n      removeExpiredWeather(location);\r\n      const storedForecast = localStorage.getItem(\r\n        `weather_forecast_${location}`\r\n      );\r\n      let forecast: IForecast | null;\r\n      if (storedForecast) {\r\n        const { requestTime } = JSON.parse(storedForecast);\r\n        if (checkIfExpired(requestTime)) {\r\n          forecast = await fetchForecast(location);\r\n        } else {\r\n          forecast = JSON.parse(storedForecast);\r\n        }\r\n      } else {\r\n        forecast = await fetchForecast(location);\r\n      }\r\n      if (forecast) {\r\n        dispatch({ type: FETCH_SUCCESS, data: forecast });\r\n      } else {\r\n        dispatch({ type: FETCH_FAILURE });\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n  useEffect(() => {\r\n    lastLocation && getForecast(lastLocation);\r\n  }, [dispatch, getForecast, lastLocation]);\r\n\r\n  return [state, getForecast] as const;\r\n};\r\n\r\nexport default useWeatherApi;\r\n","import React from \"react\";\r\nimport Welcome, { WelcomeProps } from \"../../containers/Welcome/Welcome\";\r\nimport Forecast from \"../../containers/Forecast/Forecast\";\r\nimport Search, { SearchProps } from \"../../components/Search/Search\";\r\nimport useWeatherApi from \"../../hooks/useWeatherApi\";\r\n\r\ntype Props = {} & WelcomeProps & SearchProps;\r\n\r\nconst FrontPage = ({ lastLocation, ...other }: Props) => {\r\n  const [forecast, getForecast] = useWeatherApi();\r\n\r\n  const search = <Search lastLocation={lastLocation} getData={getForecast} />;\r\n\r\n  // console.log(\"front\");\r\n  return lastLocation ? (\r\n    <Forecast\r\n      lastLocation={lastLocation}\r\n      forecast={forecast}\r\n      getForecast={getForecast}\r\n      search={search}\r\n    />\r\n  ) : (\r\n    <Welcome search={search} {...other} />\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > a:focus\": {\r\n        outline: \"none\"\r\n      },\r\n      \"& > button, & > a\": {\r\n        border: `0.25rem solid ${theme.palette.secondary.main}`,\r\n        transition: \"all 0.1s ease-in-out\",\r\n        \"&:focus\": {\r\n          boxShadow: `0 0 0 0.25rem ${theme.palette.text.primary}`\r\n        },\r\n        \"&:hover\": {\r\n          outline: `0.25rem solid ${theme.palette.grey[500]}`\r\n        }\r\n      }\r\n    },\r\n    link: {\r\n      display: \"flex\"\r\n    },\r\n    box: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      color: theme.palette.secondary.contrastText,\r\n      padding: theme.spacing(1),\r\n      minHeight: \"6.5rem\",\r\n      minWidth: \"8rem\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        minHeight: \"8.5rem\",\r\n        minWidth: \"13rem\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  className?: string;\r\n  linkStyles?: string;\r\n  boxStyles?: string;\r\n  children: React.ReactNode;\r\n  tooltip: string;\r\n  to: string;\r\n  extra?: React.ReactNode;\r\n  onClick?: () => void;\r\n};\r\n\r\nconst LinkBox = ({\r\n  children,\r\n  tooltip,\r\n  linkStyles,\r\n  boxStyles,\r\n  to,\r\n  extra,\r\n  onClick\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tooltip title={tooltip}>\r\n        <Link\r\n          to={to}\r\n          onClick={onClick}\r\n          className={clsx(classes.link, linkStyles)}\r\n        >\r\n          <div className={clsx(classes.box, boxStyles)}>{children}</div>\r\n        </Link>\r\n      </Tooltip>\r\n      {extra}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkBox;\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport Temperature from \"../../components/Temperature/Temperature\";\r\nimport DataLoader from \"../../components/DataLoader/DataLoader\";\r\nimport LinkBox from \"../LinkBox/LinkBox\";\r\nimport useWeatherApi from \"../../hooks/useWeatherApi\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\nimport { SET_LAST_LOCATION } from \"../../actions\";\r\nimport { capitalizeFirstChar } from \"../../utils\";\r\nimport { useSettings } from \"../../providers/SettingsProvider\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    link: {\r\n      marginRight: \"0.25rem\"\r\n    },\r\n    group: {\r\n      display: \"flex\",\r\n      \"& > p:first-child\": {\r\n        fontSize: \"2.5rem\",\r\n        fontWeight: \"lighter\",\r\n        paddingRight: theme.spacing(2.5),\r\n        paddingBottom: theme.spacing(1),\r\n        \"& span\": {\r\n          fontSize: \"0.4em\",\r\n          lineHeight: \"2.6em\"\r\n        }\r\n      }\r\n    },\r\n    spinner: {\r\n      color: theme.palette.common.white,\r\n      fontSize: \"2.2rem\"\r\n    },\r\n    error: {\r\n      width: \"16rem\"\r\n    }\r\n  })\r\n);\r\n\r\nexport type WeatherBoxProps = {\r\n  location: string;\r\n};\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n} & WeatherBoxProps;\r\n\r\nconst WeatherBox = ({ location, children }: Props) => {\r\n  const classes = useStyles();\r\n  const [{ data, isLoading, isError }] = useWeatherApi(location);\r\n  const [, dispatch] = useSettings();\r\n\r\n  const setLastLocation = () => {\r\n    dispatch({ type: SET_LAST_LOCATION, lastLocation: location });\r\n  };\r\n\r\n  return (\r\n    <LinkBox\r\n      tooltip=\"Go to Forecast\"\r\n      to={`${APP_STRUCTURE.forecast}`}\r\n      onClick={setLastLocation}\r\n      linkStyles={classes.link}\r\n      extra={children}\r\n    >\r\n      <DataLoader\r\n        spinnerStyles={classes.spinner}\r\n        errorStyles={classes.error}\r\n        isLoading={isLoading}\r\n        isError={isError}\r\n        errorMessage={`We couldn't find ${capitalizeFirstChar(\r\n          location\r\n        )}. Please, check if the name is correct or try again later.`}\r\n        disableErrorBorder\r\n      >\r\n        {data && (\r\n          <>\r\n            <Typography variant=\"h3\">\r\n              {data.currentWeather.city}, {data.currentWeather.country}\r\n            </Typography>\r\n            <div className={classes.group}>\r\n              <Temperature temperature={data.currentWeather.temperature}>\r\n                C\r\n              </Temperature>\r\n            </div>\r\n            <p>{data.currentWeather.condition}</p>\r\n          </>\r\n        )}\r\n      </DataLoader>\r\n    </LinkBox>\r\n  );\r\n};\r\n\r\nexport default WeatherBox;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport WeatherBox, { WeatherBoxProps } from \"../WeatherBox/WeatherBox\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    link: {\r\n      fontSize: \"1.5rem\",\r\n      padding: \"0.5em\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      color: theme.palette.text.primary\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {} & WeatherBoxProps;\r\n\r\nconst LaunchLocation = ({ ...other }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <WeatherBox {...other}>\r\n      <Tooltip title=\"Change Launch Location\">\r\n        <Link to={`${APP_STRUCTURE.settings}`} className={classes.link}>\r\n          <EditIcon />\r\n        </Link>\r\n      </Tooltip>\r\n    </WeatherBox>\r\n  );\r\n};\r\n\r\nexport default LaunchLocation;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport LinkBox from \"../LinkBox/LinkBox\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    box: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"\r\n    },\r\n    icon: {\r\n      fontSize: \"6.5rem\"\r\n    }\r\n  })\r\n);\r\n\r\nconst AddLocationBox = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <LinkBox\r\n      tooltip=\"Add Location\"\r\n      to={APP_STRUCTURE.settings}\r\n      boxStyles={classes.box}\r\n    >\r\n      <AddIcon className={classes.icon} />\r\n    </LinkBox>\r\n  );\r\n};\r\n\r\nexport default AddLocationBox;\r\n","import React from \"react\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport WeatherBox, { WeatherBoxProps } from \"../WeatherBox/WeatherBox\";\r\nimport { REMOVE_FROM_FAVORITES } from \"../../actions\";\r\nimport { useSettings } from \"../../providers/SettingsProvider\";\r\n\r\ntype Props = {} & WeatherBoxProps & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n  label: \"Remove from Favorites\"\r\n};\r\n\r\nconst FavoritePlace = ({ label, location }: Props) => {\r\n  const [, dispatch] = useSettings();\r\n\r\n  const handleClick = () => {\r\n    dispatch({ type: REMOVE_FROM_FAVORITES, location });\r\n  };\r\n\r\n  return (\r\n    <WeatherBox location={location}>\r\n      <Tooltip title={label}>\r\n        <IconButton aria-label={label} color=\"inherit\" onClick={handleClick}>\r\n          <ClearIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </WeatherBox>\r\n  );\r\n};\r\n\r\nFavoritePlace.defaultProps = defaultProps;\r\nexport default FavoritePlace;\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport AppHeader from \"../../components/AppHeader/AppHeader\";\r\nimport LaunchLocation from \"../../components/LaunchLocation/LaunchLocation\";\r\nimport AddLocationBox from \"../../components/AddLocationBox/AddLocationBox\";\r\nimport FavoriteLocation from \"../../components/FavoriteLocation/FavoriteLocation\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& section:not(:last-child)\": {\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          marginBottom: theme.spacing(4)\r\n        }\r\n      }\r\n    },\r\n    favorites: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      \"& > div\": {\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          marginBottom: theme.spacing(3)\r\n        }\r\n      },\r\n      \"& > div:not(:last-child)\": {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          marginBottom: theme.spacing(3)\r\n        }\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  launchLocation: string | null;\r\n  favorites: string[];\r\n};\r\n\r\nconst Favorites = ({ launchLocation, favorites }: Props) => {\r\n  const classes = useStyles();\r\n  // console.log(\"favorites\");\r\n  return (\r\n    <>\r\n      <AppHeader heading={APP_STRUCTURE.favorites} />\r\n      <div className={classes.root}>\r\n        <section>\r\n          <Typography variant=\"h2\">Launch Location</Typography>\r\n          {launchLocation ? (\r\n            <LaunchLocation location={launchLocation} />\r\n          ) : (\r\n            <AddLocationBox />\r\n          )}\r\n        </section>\r\n        {favorites.length > 0 && (\r\n          <section>\r\n            <Typography variant=\"h2\">Favorite Places</Typography>\r\n            <div className={classes.favorites}>\r\n              {favorites.map(location => (\r\n                <FavoriteLocation key={location} location={location} />\r\n              ))}\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ntype Props = {\r\n  heading: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst Setting = ({ heading, children }: Props) => {\r\n  return (\r\n    <section>\r\n      <Typography variant=\"h3\">{heading}</Typography>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport Form from \"../../components/Form/Form\";\r\nimport InputField from \"../../components/InputField/InputField\";\r\nimport InputButton from \"../../components/InputButton/InputButton\";\r\nimport Setting from \"../../components/Setting/Setting\";\r\n\r\nimport { TFormEvent } from \"../../types\";\r\nimport { FETCH_SUCCESS, SET_LAST_LOCATION } from \"../../actions\";\r\nimport { LOCAL_STORAGE } from \"../../constants\";\r\nimport { Action as FetchAction } from \"../../hooks/useFetch\";\r\nimport { capitalizeFirstChar } from \"../../utils\";\r\nimport { useSettings } from \"../../providers/SettingsProvider\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"16rem\"\r\n    }\r\n  })\r\n);\r\n\r\nexport type LaunchLocationSettingProps = {\r\n  dispatchFetch: React.Dispatch<FetchAction<string>>;\r\n  launchLocation: string | null;\r\n};\r\n\r\ntype Props = {} & LaunchLocationSettingProps;\r\n\r\nconst LaunchLocationSetting = ({ launchLocation, dispatchFetch }: Props) => {\r\n  const classes = useStyles();\r\n  const [, dispatchSettings] = useSettings();\r\n\r\n  const handleSubmit: TFormEvent = event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const launchLocation = form.launchLocation.value.trim().toLowerCase();\r\n    if (launchLocation) {\r\n      localStorage.setItem(LOCAL_STORAGE.launchLocation, launchLocation);\r\n      dispatchFetch({ type: FETCH_SUCCESS, data: launchLocation });\r\n      dispatchSettings({\r\n        type: SET_LAST_LOCATION,\r\n        lastLocation: launchLocation\r\n      });\r\n      event.currentTarget.reset();\r\n    }\r\n  };\r\n\r\n  let heading = `Launch Location`;\r\n  if (launchLocation) heading += `: ${capitalizeFirstChar(launchLocation)}`;\r\n  return (\r\n    <Setting heading={heading}>\r\n      <Form onSubmit={event => handleSubmit(event)} className={classes.root}>\r\n        <InputField name=\"launchLocation\" placeholder=\"New Launch Location\" />\r\n        <InputButton label=\"Submit\" type=\"submit\">\r\n          <EditIcon />\r\n        </InputButton>\r\n      </Form>\r\n    </Setting>\r\n  );\r\n};\r\n\r\nexport default LaunchLocationSetting;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport AppHeader from \"../../components/AppHeader/AppHeader\";\r\nimport LaunchLocationSetting, {\r\n  LaunchLocationSettingProps\r\n} from \"../../components/LaunchLocationSetting/LaunchLocationSetting\";\r\n// import ThemeSetting from \"../../components/ThemeSetting/ThemeSetting\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      \"& > section\": {\r\n        marginTop: theme.spacing(3)\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {} & LaunchLocationSettingProps;\r\n\r\nconst Settings = ({ ...other }: Props) => {\r\n  const classes = useStyles();\r\n  // console.log(\"settings\");\r\n  return (\r\n    <>\r\n      <AppHeader heading={APP_STRUCTURE.settings} />\r\n      <section className={classes.root}>\r\n        <Typography variant=\"h2\">Options</Typography>\r\n        <LaunchLocationSetting {...other} />\r\n        {/* <ThemeSetting /> */}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { useEffect, Dispatch, useCallback } from \"react\";\r\nimport {\r\n  FETCH_INIT,\r\n  FETCH_SUCCESS,\r\n  FETCH_FAILURE,\r\n  SET_LAST_LOCATION\r\n} from \"../actions\";\r\nimport useFetch from \"./useFetch\";\r\nimport { getLaunchLocation } from \"../utils\";\r\nimport { Action } from \"../reducers/reduceSettings\";\r\n\r\nconst useGeoLocationApi = (dispatchSettings: Dispatch<Action>) => {\r\n  const [state, dispatchFetch] = useFetch<string>();\r\n  // console.log(state)\r\n\r\n  const setLocations = useCallback(\r\n    (launchLocation: string) => {\r\n      dispatchSettings({\r\n        type: SET_LAST_LOCATION,\r\n        lastLocation: launchLocation\r\n      });\r\n      dispatchFetch({ type: FETCH_SUCCESS, data: launchLocation });\r\n    },\r\n    [dispatchFetch, dispatchSettings]\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let launchLocation = localStorage.getItem(\"launch_location\");\r\n      if (launchLocation) {\r\n        setLocations(launchLocation);\r\n      } else {\r\n        dispatchFetch({ type: FETCH_INIT });\r\n        launchLocation = await getLaunchLocation();\r\n        if (launchLocation) {\r\n          setLocations(launchLocation);\r\n        } else {\r\n          dispatchFetch({ type: FETCH_FAILURE });\r\n        }\r\n      }\r\n    })();\r\n  }, [dispatchFetch, setLocations]);\r\n  return [state, dispatchFetch] as const;\r\n};\r\n\r\nexport default useGeoLocationApi;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport FrontPage from \"../../containers/FrontPage/FrontPage\";\r\nimport Favorites from \"../../containers/Favorites/Favorites\";\r\nimport Settings from \"../../containers/Settings/Settings\";\r\n\r\nimport {\r\n  APP_STRUCTURE,\r\n  TOOLBAR_HEIGHT,\r\n  toolbarHeightMin\r\n} from \"../../constants\";\r\nimport useGeoLocationApi from \"../../hooks/useGeoLocationApi\";\r\nimport { useSettings } from \"../../providers/SettingsProvider\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"flex-start\",\r\n      flexGrow: 1,\r\n      marginTop: toolbarHeightMin,\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginTop: TOOLBAR_HEIGHT,\r\n        padding: theme.spacing(4, 6)\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AppMain = () => {\r\n  const classes = useStyles();\r\n  const [{ lastLocation, favorites }, dispatchSettings] = useSettings();\r\n  const [\r\n    { data: launchLocation, isLoading, isError },\r\n    dispatchFetch\r\n  ] = useGeoLocationApi(dispatchSettings);\r\n\r\n  // console.log('main', launchLocation, lastLocation);\r\n  return (\r\n    <main className={classes.root}>\r\n      <Switch>\r\n        <Route path={`/${APP_STRUCTURE.forecast}`}>\r\n          <FrontPage\r\n            lastLocation={lastLocation}\r\n            isLoading={isLoading}\r\n            isError={isError}\r\n          />\r\n        </Route>\r\n        <Route path={`/${APP_STRUCTURE.favorites}`}>\r\n          <Favorites launchLocation={launchLocation} favorites={favorites} />\r\n        </Route>\r\n        <Route path={`/${APP_STRUCTURE.settings}`}>\r\n          <Settings\r\n            launchLocation={launchLocation}\r\n            dispatchFetch={dispatchFetch}\r\n          />\r\n        </Route>\r\n        <Route path={`/`}>\r\n          <Redirect to={`/${APP_STRUCTURE.forecast}`} />\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AppMain;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport AppDrawer from \"../../components/AppDrawer/AppDrawer\";\r\nimport AppContent from \"../../components/AppContent/AppContent\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& h2\": {\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          fontSize: \"2rem\"\r\n        }\r\n      },\r\n      \"& h3\": {\r\n        marginBottom: theme.spacing(1.5),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          fontSize: \"1.5rem\"\r\n        }\r\n      },\r\n      \"& button\": {\r\n        \"&:focus\": {\r\n          backgroundColor: theme.palette.action.selected\r\n        },\r\n        \"&:hover\": {\r\n          backgroundColor: theme.palette.action.hover\r\n        },\r\n        \"&:active\": {\r\n          backgroundColor: theme.palette.action.active,\r\n          color: theme.palette.primary.main\r\n        }\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst Page = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppDrawer />\r\n      <AppContent />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport {\r\n  LIST_ITEM_GUTTER_SIZE,\r\n  TOOLBAR_HEIGHT,\r\n  SVG_ICON_FONT_SIZE,\r\n  listItemIconMinWidth,\r\n  listItemLeftGutterSize,\r\n  SCALING_FACTOR\r\n} from \"./constants\";\r\n\r\nconst baseTheme = {\r\n  pallete: {\r\n    secondary: {\r\n      main: blue[700]\r\n    }\r\n  },\r\n  props: {\r\n    MuiAppBar: {\r\n      elevation: 0\r\n    },\r\n    MuiButtonBase: {\r\n      disableRipple: true\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paperAnchorDockedLeft: {\r\n        borderRight: 0\r\n      }\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        borderRadius: \"0\",\r\n        fontSize: \"1rem\",\r\n        padding: \"0.5em\"\r\n      }\r\n    },\r\n    MuiListItem: {\r\n      gutters: {\r\n        paddingLeft: listItemLeftGutterSize,\r\n        paddingRight: LIST_ITEM_GUTTER_SIZE\r\n      }\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        minWidth: listItemIconMinWidth\r\n      }\r\n    },\r\n    MuiSvgIcon: {\r\n      root: {\r\n        fontSize: SVG_ICON_FONT_SIZE\r\n      }\r\n    },\r\n    MuiToolbar: {\r\n      dense: {\r\n        minHeight: TOOLBAR_HEIGHT\r\n      }\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: \"0.8rem\"\r\n      }\r\n    }\r\n  },\r\n  typography: {\r\n    h1: {\r\n      fontSize: \"1.5rem\"\r\n    },\r\n    h2: {\r\n      fontSize: \"1.3rem\"\r\n    },\r\n    h3: {\r\n      fontSize: \"1rem\",\r\n      fontWeight: 300\r\n    }\r\n  },\r\n  spacing: (factor: number) => `${SCALING_FACTOR * factor}rem`,\r\n  shape: {\r\n    borderRadius: 0\r\n  }\r\n};\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  ...baseTheme,\r\n  palette: {\r\n    ...baseTheme.pallete,\r\n    action: {\r\n      active: \"rgba(0, 0, 0, 0.5)\",\r\n      hover: \"rgba(0, 0, 0, 0.13)\",\r\n      selected: \"rgba(0, 0, 0, 0.16)\"\r\n    },\r\n    background: {\r\n      default: grey[100]\r\n    },\r\n    primary: {\r\n      main: grey[50]\r\n    }\r\n  }\r\n});\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  ...baseTheme,\r\n  palette: {\r\n    ...baseTheme.pallete,\r\n    action: {\r\n      active: \"rgba(255, 255, 255, 0.8)\",\r\n      hover: \"rgba(255, 255, 255, 0.3)\"\r\n    },\r\n    primary: {\r\n      main: grey[900]\r\n    },\r\n    type: \"dark\"\r\n  }\r\n});\r\n","import React from \"react\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { ThemeProvider, StylesProvider } from \"@material-ui/core/styles\";\r\n\r\nimport Page from \"../../components/Page/Page\";\r\nimport { useSettings } from \"../../providers/SettingsProvider\";\r\nimport { lightTheme, darkTheme } from \"../../theme\";\r\n\r\nconst App: React.FC = () => {\r\n  const [{ isThemeDark }] = useSettings();\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <ThemeProvider theme={isThemeDark ? darkTheme : lightTheme}>\r\n        <CssBaseline />\r\n        <Page />\r\n      </ThemeProvider>\r\n    </StylesProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport WindowWidthProvider from \"./providers/WindowWidthProvider\";\r\nimport SettingsProvider from \"./providers/SettingsProvider\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <WindowWidthProvider>\r\n      <SettingsProvider>\r\n        <App />\r\n      </SettingsProvider>\r\n    </WindowWidthProvider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}