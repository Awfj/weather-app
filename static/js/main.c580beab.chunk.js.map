{"version":3,"sources":["components/Spinner/Spinner.module.scss","constants.tsx","components/ListItemLink/ListItemLink.tsx","utils.tsx","contexts.tsx","components/AppDrawer/AppDrawer.tsx","actions/index.tsx","components/DrawerToggle/DrawerToggle.tsx","components/ThemeToggle/ThemeToggle.tsx","components/ToolbarButtons/ToolbarButtons.tsx","components/AppHeader/AppHeader.tsx","components/Spinner/Spinner.tsx","components/Error/Error.tsx","components/DataLoader/DataLoader.tsx","containers/Welcome/Welcome.tsx","components/Temperature/Temperature.tsx","components/CurrentWeather/CurrentWeather.tsx","components/Favor/Favor.tsx","hooks/useTimer.tsx","components/Timer/Timer.tsx","components/Refresh/Refresh.tsx","hooks/useRefresh.tsx","containers/Forecast/Forecast.tsx","components/Form/Form.tsx","components/InputButton/InputButton.tsx","components/SearchButton/SearchButton.tsx","components/InputField/InputField.tsx","components/SearchField/SearchField.tsx","components/Search/Search.tsx","hooks/useFetch.tsx","hooks/useWeatherApi.tsx","containers/FrontPage/FrontPage.tsx","components/LinkBox/LinkBox.tsx","components/WeatherBox/WeatherBox.tsx","components/LaunchLocation/LaunchLocation.tsx","components/AddLocationBox/AddLocationBox.tsx","components/FavoriteLocation/FavoriteLocation.tsx","containers/Favorites/Favorites.tsx","components/Setting/Setting.tsx","components/LaunchLocationSetting/LaunchLocationSetting.tsx","containers/Settings/Settings.tsx","hooks/useGeoLocationApi.tsx","components/AppContent/AppContent.tsx","components/Page/Page.tsx","theme.tsx","hooks/useTheme.tsx","hooks/useDrawer.tsx","hooks/useSettings.tsx","hooks/useWindowWidth.tsx","containers/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","APP_STRUCTURE","LOCAL_STORAGE","isDrawerOpen","isThemeDark","weatherForecast","launchLocation","INITIAL_SETTINGS","favorites","lastLocation","drawerIconWidth","toolbarHeightMin","listItemIconMinWidth","listItemLeftGutterSize","useStyles","makeStyles","theme","createStyles","root","borderLeft","active","borderColor","palette","secondary","main","ListItemLink","icon","primary","to","classes","renderLink","React","useMemo","forwardRef","itemProps","ref","activeClassName","ListItem","button","component","className","ListItemIcon","ListItemText","capitalizeFirstChar","string","toUpperCase","slice","checkIfExpired","requestTime","Date","getTime","fetchLocation","a","fetch","response","ok","json","data","city","toLowerCase","console","error","fetchForecast","queriedCity","process","url","updatedUrl","forecast","currentWeather","name","condition","weather","country","sys","temperature","Math","round","temp","cloudiness","clouds","all","windSpeed","wind","speed","visibility","pressure","humidity","storeWeather","getLaunchLocation","localStorage","setItem","removeExpiredWeather","key","includes","JSON","parse","removeItem","sliceSplittedString","separator","beginIndex","endIndex","split","join","stringify","SettingsDispatchCtx","createContext","SettingsCtx","WindowWidthCtx","width","flexShrink","whiteSpace","breakpoints","up","down","minWidth","fontSize","isOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","isClosed","leavingScreen","overflowX","list","display","flexDirection","justifyContent","height","paper","top","AppDrawer","useContext","Drawer","variant","open","clsx","List","disablePadding","Divider","FETCH_INIT","FETCH_SUCCESS","FETCH_FAILURE","TOGGLE_DRAWER","TOGGLE_THEME","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","SET_LAST_LOCATION","backgroundColor","background","alignSelf","marginRight","spacing","SidebarToggle","label","other","dispatchSettings","IconButton","aria-label","color","onClick","type","defaultProps","ThemeToggle","Tooltip","title","ToolbarButtons","refresh","favor","zIndex","drawer","toolbar","paddingRight","minHeight","flexGrow","AppHeader","heading","search","AppBar","Toolbar","disableGutters","DrawerToggle","Typography","textIndent","overflow","borderRadius","margin","Spinner","styles","errorBorder","padding","boxShadow","contrastText","Error","children","errorStyles","disableErrorBorder","DataLoader","rendered","spinnerStyles","isLoading","errorMessage","isError","displayContent","marginTop","Welcome","fontWeight","position","letterSpacing","lineHeight","right","Temperature","textAlign","maxWidth","marginBottom","flexWrap","scales","marginLeft","border","CurrentWeather","timer","Favor","useState","isFavorite","setIsFavorite","useEffect","location","useTimer","expirationTimeframe","setRefreshIsDisabled","setTimer","timerTimeout","setTimeout","clearTimeout","Timer","currentYear","getFullYear","requestYear","time","toTimeString","date","toDateString","currentDay","getDate","requestDay","getReadableRequestTime","milliseconds","hours","floor","minutes","getRemainingTime","Refresh","useRefresh","isDataFetched","refreshIsDisabled","disabled","Forecast","getForecast","undefined","light","Form","onSubmit","InputButton","SearchButton","action","InputField","value","onBlur","onChange","placeholder","SearchField","setSearchQuery","event","query","currentTarget","transform","Search","getData","searchQuery","searchIsShown","setSearchIsShown","windowWidth","showSearchBtn","useRef","searchFieldRef","useTheme","breakpointMD","values","md","handleSubmit","preventDefault","trim","current","focus","composeSearch","reducer","state","useFetch","useReducer","useWeatherApi","dispatch","useCallback","storedForecast","getItem","FrontPage","outline","text","grey","link","box","LinkBox","tooltip","linkStyles","boxStyles","extra","group","paddingBottom","spinner","common","white","WeatherBox","alignItems","LaunchLocation","AddLocationBox","FavoritePlace","Favorites","length","map","FavoriteLocation","Setting","LaunchLocationSetting","dispatchFetch","reset","Settings","useGeoLocationApi","setLocations","AppMain","path","selected","hover","Page","AppContent","baseTheme","pallete","blue","props","MuiAppBar","elevation","MuiButtonBase","disableRipple","overrides","MuiDrawer","paperAnchorDockedLeft","borderRight","MuiIconButton","MuiListItem","gutters","paddingLeft","MuiListItemIcon","MuiSvgIcon","MuiToolbar","dense","MuiTooltip","typography","h1","h2","h3","factor","shape","lightTheme","createMuiTheme","default","darkTheme","prefersDarkTheme","useMediaQuery","noSsr","storedTheme","String","useDrawer","storedDrawer","filter","useSettings","useWindowWidth","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","App","settings","StylesProvider","injectFirst","ThemeProvider","CssBaseline","Provider","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,yB,+TCGzEC,EAED,WAFCA,EAGA,YAHAA,EAID,WAGCC,EAAgB,CAC3BC,aAAc,eACdC,YAAa,cACbC,gBAAiB,oBACjBC,eAAgB,mBAGLC,EAA8B,CACzCC,UAAW,GACXL,cAAc,EACdC,aAAa,EACbK,aAAc,MAaHC,EAAe,eATS,OAST,kBARM,SAQN,KACfC,EAAgB,eALC,OAKD,cAHC,GAGD,QAChBC,EAAoB,eAVC,SAUD,SACpBC,EAAsB,eAZE,OAYF,cAVI,WAUJ,KC1B7BC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,WAAW,GAAD,ODauB,WCbvB,uBAEZC,OAAQ,CACNC,YAAaL,EAAMM,QAAQC,UAAUC,WAmC5BC,EAxBM,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,GAC/BC,EAAUf,IACVgB,EAAaC,IAAMC,SACvB,kBACED,IAAME,YAA6C,SAACC,EAAWC,GAAZ,OACjD,kBAAC,IAAD,eACEP,GAAE,WAAMA,GACRO,IAAKA,EACLC,gBAAiBP,EAAQT,QACrBc,SAGV,CAACN,EAAIC,EAAQT,SAEf,OACE,4BACE,kBAACiB,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWT,EAAYU,UAAWX,EAAQX,MACxDQ,EAAO,kBAACe,EAAA,EAAD,KAAef,GAAuB,KAC9C,kBAACgB,EAAA,EAAD,CAAcf,QAASA,O,yBC5ClBgB,EAAsB,SAACC,GAClC,MAAM,GAAN,OAAUA,EAAO,GAAGC,eAApB,OAAoCD,EAAOE,MAAM,KAGtCC,EAAiB,SAACC,GAG7B,OAFoB,IAAIC,MAAOC,UACCF,EFNE,MEUvBG,EAAa,uCAAG,gCAAAC,EAAA,+EAEFC,MAAM,uCAFJ,WAEnBC,EAFmB,QAGXC,GAHW,yCAGA,MAHA,uBAIYD,EAASE,OAJrB,cAInBC,EAJmB,OAKnBC,EAAOD,EAAKC,KAAKC,cALE,kBAMlBD,GANkB,yCAQzBE,QAAQC,MAAM,sDAAd,MARyB,kBASlB,MATkB,0DAAH,qDAabC,EAAa,uCAAG,WAAOC,GAAP,uBAAAX,EAAA,sEAEEY,mCACrBC,EAHmB,4DAGwCF,GAC3DG,EAJmB,UAIHD,EAJG,kBAEED,mCAFF,0BAKFX,MAAMa,GALJ,WAKnBZ,EALmB,QAMXC,GANW,yCAMA,MANA,wBAOeD,EAASE,OAPxB,eAOnBC,EAPmB,OASnBU,EAAsB,CAC1BC,eAAgB,CACdV,KAAMD,EAAKY,KACXC,UAAWb,EAAKc,QAAQ,GAAG/C,KAC3BgD,QAASf,EAAKgB,IAAID,QAClBE,YAAaC,KAAKC,MAAMnB,EAAKjC,KAAKqD,MAClCC,WAAYrB,EAAKsB,OAAOC,IACxBC,UAAWxB,EAAKyB,KAAKC,MACrBC,WAAY3B,EAAK2B,WAAa,IAC9BC,SAAU5B,EAAKjC,KAAK6D,SACpBC,SAAU7B,EAAKjC,KAAK8D,UAEtBtC,aAAa,IAAIC,MAAOC,WAE1BqC,EAAaxB,EAAaI,GAvBD,kBAwBlBA,GAxBkB,yCA0BzBP,QAAQC,MAAM,sDAAd,MA1ByB,kBA2BlB,MA3BkB,0DAAH,sDAmCb2B,EAAiB,uCAAG,4BAAApC,EAAA,sEACFD,IADE,UACzB7C,EADyB,gDAEH,MAFG,cAG/BmF,aAAaC,QAAQ,kBAAmBpF,GAHT,kBAIxBA,GAJwB,2CAAH,qDA8CjBqF,EAAuB,SAACjC,GACnC,IAAK,IAAIkC,KAAOH,aACd,GAAIG,EAAIC,SAAS,aAAeD,EAAIC,SAASnC,GAAO,CAClD,IAAMV,EAAsB8C,KAAKC,MAAMN,aAAaG,IAAM5C,YACtDD,EAAeC,IACjByC,aAAaO,WAAWJ,KAMnBK,EAAsB,SACjCrD,EACAsD,EACAC,EACAC,GAEA,OAAOxD,EACJyD,MAAMH,GACNpD,MAAMqD,EAAYC,GAClBE,KAAKJ,IAGGX,EAAe,SAAC7B,EAAca,GACzCkB,aAAaC,QAAb,2BAAyChC,GAAQoC,KAAKS,UAAUhC,KC9HrDiC,EAAsBC,yBACjC,eAEWC,EAAcD,wBAAclG,GAC5BoG,EAAiBF,wBAAc,GCctC3F,EAAYC,aAAW,SAACC,GAAD,aAC3BC,YAAa,CACXC,MAAI,GACF0F,MAJmB,SAKnBC,WAAY,EACZC,WAAY,UAHV,cAID9F,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BJ,MAAO,UALP,cAOF,0BAPE,eAQC5F,EAAM+F,YAAYE,KAAK,MAAQ,CAC9BC,SAAS,QAAD,OAAUtG,EAAV,iBATV,cAYF,yBAZE,eAaCI,EAAM+F,YAAYE,KAAK,MAAQ,CAC9BE,SAAU,YAdZ,GAkBJC,OAAO,aACLC,WAAYrG,EAAMsG,YAAYC,OAAO,QAAS,CAC5CC,OAAQxG,EAAMsG,YAAYE,OAAOC,MACjCC,SAAU1G,EAAMsG,YAAYI,SAASC,iBAEvCf,MA1BmB,UA2BlB5F,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BJ,MAAO,UAGXgB,SAAU,CACRP,WAAYrG,EAAMsG,YAAYC,OAAO,QAAS,CAC5CC,OAAQxG,EAAMsG,YAAYE,OAAOC,MACjCC,SAAU1G,EAAMsG,YAAYI,SAASG,gBAEvCC,UAAW,SACXlB,MAAOlG,GAETqH,KAAK,aACHC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,OAAO,gBAAD,OAAkBxH,EAAlB,MACLK,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BmB,OAAO,gBAAD,OJpCgB,OIoChB,OAGVC,MAAM,aACJC,IAAK1H,GACJK,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BqB,IJ1CsB,cI6FfC,GA7CG,WAAO,IAAD,IAChBzG,EAAUf,IACRX,EAAiBoI,qBAAW7B,GAA5BvG,aAER,OACE,kBAACqI,EAAA,EAAD,CACEC,QAAQ,YACRC,KAAMvI,EACNqC,UAAWmG,YAAK9G,EAAQX,MAAT,mBACZW,EAAQuF,OAASjH,GADL,cAEZ0B,EAAQ+F,UAAYzH,GAFR,IAIf0B,QAAS,CACPuG,MAAOO,YAAK9G,EAAQuG,OAAT,mBACRvG,EAAQuF,OAASjH,GADT,cAER0B,EAAQ+F,UAAYzH,GAFZ,MAMb,kBAACyI,EAAA,EAAD,CAAMC,gBAAc,EAACrG,UAAWX,EAAQkG,MACtC,6BACE,kBAAC,EAAD,CACErG,KAAM,kBAAC,IAAD,MACNC,QAASgB,EAAoB1C,GAC7B2B,GAAI3B,IAEN,kBAAC,EAAD,CACEyB,KAAM,kBAAC,IAAD,MACNC,QAASgB,EAAoB1C,GAC7B2B,GAAI3B,KAGR,6BACE,kBAAC6I,EAAA,EAAD,MACA,kBAAC,EAAD,CACEpH,KAAM,kBAAC,IAAD,MACNC,QAASgB,EAAoB1C,GAC7B2B,GAAI3B,Q,4ECpHH8I,GAAa,aAGbC,GAAgB,gBAGhBC,GAAgB,gBAGhBC,GAAgB,gBAGhBC,GAAe,eAGfC,GAAmB,mBAGnBC,GAAwB,wBAGxBC,GAAoB,oBCH3BxI,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAK,aACHqI,gBAAiBvI,EAAMM,QAAQkI,WAAWpB,MAC1CqB,UAAW,UACXzB,QAAS,OACT0B,YAAa1I,EAAM2I,QAAQ,GAC3B/C,MAAOlG,GACNM,EAAM+F,YAAYC,GAAG,MAAQ,CAC5B0C,YAAa1I,EAAM2I,QAAQ,KAG/BrH,OAAQ,CACNsE,MAAO,aAKPgD,GAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAUC,EAAmB,0BAC9CjI,EAAUf,KACViJ,EAAmBxB,qBAAW/B,GAMpC,OACE,yBAAKhE,UAAWX,EAAQX,MACtB,kBAAC8I,GAAA,EAAD,eACEC,aAAYJ,EACZK,MAAM,UACNrI,QAAS,CAAEX,KAAMW,EAAQS,QACzB6H,QAVe,WACnBJ,EAAiB,CAAEK,KAAMlB,OAUjBY,GAEJ,kBAAC,KAAD,SAMRF,GAAcS,aA7CO,CACnBR,MAAO,iBA6CMD,U,kDC5CTU,GAAc,SAAC,GAAsB,IAApBT,EAAmB,EAAnBA,MACfE,EAAmBxB,qBAAW/B,GAC5BpG,EAAgBmI,qBAAW7B,GAA3BtG,YAGR,OACE,kBAACmK,GAAA,EAAD,CAASC,MAAOX,GACd,kBAACG,GAAA,EAAD,CAAYC,aAAYJ,EAAOK,MAAM,UAAUC,QAH/B,kBAAMJ,EAAiB,CAAEK,KAAMjB,OAI5C/I,EAAc,kBAAC,KAAD,MAAkB,kBAAC,KAAD,SAMzCkK,GAAYD,aAlBS,CACnBR,MAAO,gBAkBMS,UC3BTxJ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ8G,QAAS,OACTE,eAAgB,WAChB,yBAA0B,CACxBwB,YAAa1I,EAAM2I,QAAQ,WAwBpBc,GAXQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,MAC3B9I,EAAUf,KAChB,OACE,yBAAK0B,UAAWX,EAAQX,MACrBwJ,EACAC,EACD,kBAAC,GAAD,QCdA7J,GAAYC,aAAW,SAACC,GAAD,aAC3BC,YAAa,CACXC,KAAM,CACJqI,gBAAiBvI,EAAMM,QAAQkI,WAAWpB,MAC1CwC,OAAQ5J,EAAM4J,OAAOC,OAAS,EAC9B,OAAO,eACJ7J,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,SAGd,wBAAwB,eACrBnG,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,YAIhB2D,SAAO,GACLC,aAAc/J,EAAM2I,QAAQ,IADvB,cAEJ3I,EAAM+F,YAAYE,KAAK,MAAQ,CAC9B+D,UAAWrK,IAHR,cAKJK,EAAM+F,YAAYC,GAAG,MAAQ,CAC5B+D,aAAc/J,EAAM2I,QAAQ,KANzB,GASPa,MAAO,CACLS,SAAU,QA8BDC,GApBG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,OAAWtB,EAAmB,qCACpDjI,EAAUf,KAChB,OACE,kBAACuK,GAAA,EAAD,CAAQ7I,UAAWX,EAAQX,MACzB,kBAACoK,GAAA,EAAD,CACEC,gBAAc,EACd9C,QAAQ,QACR5G,QAAS,CAAEX,KAAMW,EAAQiJ,UAEzB,kBAACU,GAAD,MACA,kBAACC,GAAA,EAAD,CAAYhD,QAAQ,KAAKjG,UAAWX,EAAQ2I,OACzCW,GAAWxI,EAAoBwI,IAEjCC,EACD,kBAAC,GAAmBtB,M,oBC5DtBhJ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJgJ,MAAOlJ,EAAMM,QAAQC,UAAUC,KAC/B2F,SAAU,SACVuE,WAAY,UACZC,SAAU,SACV/E,MAAO,MACPuB,OAAQ,MACRyD,aAAc,MACdC,OAAQ,mBAgBCC,GAPC,SAAC,GAA0B,IAAxBtJ,EAAuB,EAAvBA,UACXX,EAAUf,KAChB,OACE,yBAAK0B,UAAWmG,YAAKoD,KAAO7K,KAAMW,EAAQX,KAAMsB,IAAhD,e,oBCtBE1B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ8G,QAAS,OACTyB,UAAW,SACX7C,MAAO,QACP,UAAW,CACTO,SAAU,OACVuC,YAAa1I,EAAM2I,QAAQ,KAG/BqC,YAAa,CACXC,QAAS,MACTC,UAAU,aAAD,OAAelL,EAAMM,QAAQK,QAAQwK,oBAkCrCC,GApBD,SAAC,GAID,IAHZC,EAGW,EAHXA,SACAC,EAEW,EAFXA,YAEW,IADXC,0BACW,SACL1K,EAAUf,KAChB,OACE,yBACE0B,UAAWmG,YACT9G,EAAQX,KACRoL,GACCC,GAAsB1K,EAAQmK,cAGjC,kBAAC,KAAD,MACA,2BAAIK,KCJKG,GA9BI,SAAC,GAQN,IACRC,EARJJ,EAOW,EAPXA,SACAK,EAMW,EANXA,cACAC,EAKW,EALXA,UACAC,EAIW,EAJXA,aACAC,EAGW,EAHXA,QAGW,IAFXC,sBAEW,SADRhD,EACQ,mGAmBX,OAhBE2C,EADEE,EACS,kBAAC,GAAD,CAASnK,UAAWkK,IAE3BI,GAAkBD,EAElB,oCACE,kBAAC,GAAU/C,EAAQ8C,GAClBP,GAGIQ,EACE,kBAAC,GAAU/C,EAAQ8C,GAEnBP,EAIR,oCAAGI,IClCN3L,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ8G,QAAS,OACTE,eAAgB,SAChBtB,MAAO,OACPmG,UAAW,OACX,SAAU,CACRrD,YAAa,WAkCNsD,GAnBC,SAAC,GAA2C,IAAzC5B,EAAwC,EAAxCA,OAAQuB,EAAgC,EAAhCA,UAAWE,EAAqB,EAArBA,QAC9BhL,EAAUf,KAEhB,OACE,oCACE,kBAAC,GAAD,CAAWqK,QAASlL,IACpB,kBAAC,GAAD,CACE0M,UAAWA,EACXE,QAASA,EACTC,gBAAc,EACdF,aAAY,2FAGZ,yBAAKpK,UAAWX,EAAQX,MAAOkK,MCtCjCtK,GAAYC,aAAW,SAACC,GAAD,aAC3BC,YAAa,CACXC,MAAI,GACF+L,WAAY,UACZC,SAAU,WACVC,cAAe,MAEfpC,aAAc/J,EAAM2I,QAAQ,KAC5BxC,SAAU,OACViG,WAAY,UAPV,cAQDpM,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,OACV4D,aAAc/J,EAAM2I,QAAQ,OAV5B,cAYF,SAAU,CACRuD,SAAU,WACV7E,IAAK,IACLgF,MAAO,IACPlG,SAAU,QACViG,WAAY,UAjBZ,QAwCOE,GAXK,SAAC,GAAiD,IAA/CjB,EAA8C,EAA9CA,SAAU7J,EAAoC,EAApCA,UAAWkC,EAAyB,EAAzBA,YACpC7C,EAAUf,KAEhB,OACE,uBAAG0B,UAAWmG,YAAK9G,EAAQX,KAAMsB,IAC9BkC,EACD,qCAAY2H,KCjCZvL,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ2K,OAAQ,SACR0B,UAAW,SACXC,SAAU,QACV,UAAW,CACTxF,QAAS,OACTE,eAAgB,SAChBuF,aAAczM,EAAM2I,QAAQ,KAE9B,sBAAsB,aACpBsD,WAAY,UACZ9F,SAAU,OACVsG,aAAczM,EAAM2I,QAAQ,KAC3B3I,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,WAGd,OAAQ,CACNa,QAAS,OACTE,eAAgB,SAChBwF,SAAU,OACV,wBAAyB,CACvBhE,YAAa,SAInBiE,OAAQ,CACN3F,QAAS,OACTC,cAAe,SACf2F,WAAY,MACZ,WAAY,CACVC,OAAQ,mBACR1G,SAAU,SACV8E,QAAS,eA2CF6B,GAhCQ,SAAC,GAA4B,IAA1BrK,EAAyB,EAAzBA,KAAMsK,EAAmB,EAAnBA,MACxBlM,EAAUf,KAEhB,OACE,6BAAS0B,UAAWX,EAAQX,MAC1B,kBAACuK,GAAA,EAAD,CAAYhD,QAAQ,MACjBhF,EAAKC,KADR,KACgBD,EAAKe,SAErB,6BACE,kBAAC,GAAD,CAAaE,YAAajB,EAAKiB,aAA/B,MAUF,2BAAIjB,EAAKa,WACRyJ,EACD,4BACE,2CAAiBtK,EAAKqB,WAAtB,KACA,qCAAWrB,EAAKwB,UAAhB,QACA,2CAAiBxB,EAAK2B,WAAtB,OACA,yCAAe3B,EAAK4B,SAApB,OACA,yCAAe5B,EAAK6B,SAApB,Q,oBClCO0I,GAhCD,SAAC,GAA6B,IAA3BvN,EAA0B,EAA1BA,aAA0B,EACLwN,oBAAS,GADJ,mBAClCC,EADkC,KACtBC,EADsB,KAEnCpE,EAAmBxB,qBAAW/B,GAC5BhG,EAAc+H,qBAAW7B,GAAzBlG,UAUR4N,qBAAU,WACRD,EAAc3N,EAAUqF,SAASpF,MAChC,CAACD,EAAWC,IAEf,IAAMoJ,EAAQqE,EAAa,wBAA0B,mBAErD,OACE,kBAAC3D,GAAA,EAAD,CAASC,MAAOX,GACd,kBAACG,GAAA,EAAD,CACEC,aAAYJ,EACZK,MAAM,UACNC,QAAS+D,EAfa,WAC1BnE,EAAiB,CAAEK,KAAMf,GAAuBgF,SAAU5N,KALrC,WACrBsJ,EAAiB,CAAEK,KAAMhB,GAAkBiF,SAAU5N,MAoBhDyN,EAAa,kBAAC,KAAD,MAAe,kBAAC,IAAD,SCLtBI,GAhCE,SACfC,EACAC,GACI,IAAD,EACuBzM,IAAMkM,SAASM,GADtC,mBACIR,EADJ,KACWU,EADX,KA0BH,OAvBA1M,IAAMqM,WAAU,WACVG,GAAuB,MAEzBE,EAASF,GACTC,GAAqB,MAEtB,CAACD,EAAqBC,IAEzBzM,IAAMqM,WAAU,WACd,IAAMM,EAAeC,YAAW,WAC1BZ,GAAS,IACXU,GAAS,SAAAV,GAAK,OAAIA,EAAQ,OAG1BS,GAAqB,KAItB,KACH,OAAO,kBAAMI,aAAaF,MACzB,CAACX,EAAOS,IAGJT,GC1BHjN,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAK,aACHiG,SAAU,SACVsG,aAAczM,EAAM2I,QAAQ,KAC5B,IAAK,CACHsD,WAAY,QAEbjM,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,gBA8BH0H,GAlBD,SAAC,GAID,IAHZN,EAGW,EAHXA,oBACAC,EAEW,EAFXA,qBACAxL,EACW,EADXA,YAEMnB,EAAUf,KACViN,EAAQO,GAASC,EAAqBC,GAE5C,OACE,uBAAGhM,UAAWX,EAAQX,MAAtB,iBhBgCkC,SAAC8B,GACrC,IAAM8L,GAAc,IAAI7L,MAAO8L,cACzBC,EAAc,IAAI/L,KAAKD,GAAa+L,cACpCE,EAAOhJ,EACX,IAAIhD,KAAKD,GAAakM,eACtB,IACA,EACA,GACApM,MAAM,EAAG,GACLqM,EAAO,IAAIlM,KAAKD,GAAaoM,eAEnC,GAAIN,IAAgBE,EAAa,CAC/B,IAAMK,GAAa,IAAIpM,MAAOqM,UACxBC,EAAa,IAAItM,KAAKD,GAAasM,UAEzC,OAAID,IAAeE,EACVN,EACEI,EAAa,IAAME,EACtB,cAAN,OAAqBN,GAEf,GAAN,OAAUhJ,EAAoBkJ,EAAM,IAAK,EAAG,GAA5C,aAAmDF,GAGrD,MAAM,GAAN,OAAUhJ,EAAoBkJ,EAAM,IAAK,GAAzC,aAAgDF,GgBtD/BO,CAAuBxM,GADxC,YAC+D,IAC5D+K,GAAS,IAAT,gChByDyB,SAAC0B,GAC/BA,GAAgB,IAChB,IAAMC,EAAQ/K,KAAKgL,MAAOF,EAAe,KAAW,IAC9CG,EAAUjL,KAAKgL,MAAOF,EAAe,IAAS,IAEpD,OAAIC,EAAQ,EACJ,GAAN,OAAUA,EAAV,aAAoBE,EAApB,KAEM,GAAN,OAAUA,EAAV,KgBhE+BC,CAAiB9B,IAC1C,kB,oBC1BJ+B,GAAU,SAAC,GAAgC,IAA9BjG,EAA6B,EAA7BA,MAAUC,EAAmB,0BAC9C,OACE,kBAACS,GAAA,EAAD,CAASC,MAAOX,GACd,8BACE,kBAACG,GAAA,EAAD,eAAYC,aAAYJ,EAAOK,MAAM,WAAcJ,GACjD,kBAAC,KAAD,UAOVgG,GAAQzF,aAhBa,CACnBR,MAAO,WAgBMiG,UCdAC,GAVI,SAACC,EAAwB7F,GAAyB,IAAD,EAChB8D,oBAAS,GADO,mBAC3DgC,EAD2D,KACxCzB,EADwC,KAE5D9D,EAAU,kBAAC,GAAD,CAASP,QAASA,EAAS+F,SAAUD,IACrD,OAAID,EACK,CAACxB,EAAsB9D,GAEvB,CAAC8D,ICuDG2B,GA5CE,SAAC,GAA4D,InBqCvCnN,EmBrCnBvC,EAAyD,EAAzDA,aAAc2K,EAA2C,EAA3CA,OAAQjH,EAAmC,EAAnCA,SAAUiM,EAAyB,EAAzBA,YAC1C3M,EAA6BU,EAA7BV,KAAMkJ,EAAuBxI,EAAvBwI,UAAWE,EAAY1I,EAAZ0I,QADkD,EAEnCkD,KAAatM,GAAM,kBACzD2M,EAAY3P,MAH6D,mBAEpE+N,EAFoE,KAE9C9D,EAF8C,KAKrEC,EAAQlH,EAAO,kBAAC,GAAD,CAAOhD,aAAcA,SAAmB4P,EAO7D,OALAjC,qBAAU,WACRgC,EAAY3P,KACX,CAAC2P,EAAa3P,IAIf,oCACE,kBAAC,GAAD,CACE0K,QAASlL,EACTyK,QAASA,EACTC,MAAOA,EACPS,OAAQA,IAEV,kBAAC,GAAD,CACEuB,UAAWA,EACXE,QAASA,EACTD,aAAY,2BAAsBjK,EAChClC,GADU,+DAIXgD,GACC,kBAAC,GAAD,CACEA,KAAMA,EAAKW,eACX2J,MACE,kBAAC,GAAD,CACEQ,qBnBKuBvL,EmBLqBS,EAAKT,YrBjD7B,OEuDH,IAAIC,MAAOC,UAAYF,ImBLxCwL,qBAAsBA,EACtBxL,YAAaS,EAAKT,mBCjD5BlC,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJqI,gBAAiBvI,EAAMM,QAAQK,QAAQ2O,MACvCtI,QAAS,OACTkE,UAAU,aAAD,OAAelL,EAAMM,QAAQK,QAAQwK,oBAoBrCoE,GATF,SAAC,GAA8C,IAA5ClE,EAA2C,EAA3CA,SAAU7J,EAAiC,EAAjCA,UAAWgO,EAAsB,EAAtBA,SAC7B3O,EAAUf,KAChB,OACE,0BAAM0B,UAAWmG,YAAK9G,EAAQX,KAAMsB,GAAYgO,SAAUA,GACvDnE,I,4BClBDvL,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ0M,WAAY,YAkCH6C,GAnBKxO,sBAClB,WAAgCE,GAAS,IAAtCkK,EAAqC,EAArCA,SAAUxC,EAA2B,EAA3BA,MAAUC,EAAiB,qCAChCjI,EAAUf,KAChB,OACE,kBAACyJ,GAAA,EAAD,CAASC,MAAOX,GACd,kBAACG,GAAA,EAAD,eACEC,aAAYJ,EACZK,MAAM,UACN/H,IAAKA,GACD2H,EAJN,CAKEtH,UAAWX,EAAQX,OAElBmL,OCnBIqE,GAXMzO,sBAA2B,WAE9CE,GACC,IAFI2H,EAEL,mBACA,OACE,kBAAC,GAAD,eAAa3H,IAAKA,GAAS2H,GACzB,kBAAC,KAAD,UCTAhJ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJgJ,MAAOlJ,EAAMM,QAAQK,QAAQwK,aAC7B5C,gBAAiB,cACjBsE,OAAQ,OACR1G,SAAU,SACV8E,QAAS,YACTrF,MAAO,OACP,UAAW,CACTsF,UAAU,eAAD,OAAiBlL,EAAMM,QAAQqP,OAAOvP,eAqCxCwP,GAnBI3O,sBAA0B,WAE3CE,GACC,IAFC0O,EAEF,EAFEA,MAAOxM,EAET,EAFSA,KAET,IAFe+F,YAEf,MAFsB,OAEtB,EAF8B0G,EAE9B,EAF8BA,OAAQC,EAEtC,EAFsCA,SAAUC,EAEhD,EAFgDA,YAG1CnP,EAAUf,KAChB,OACE,2BACEqB,IAAKA,EACL0O,MAAOA,EACPxM,KAAMA,EACN0M,SAAUA,EACVC,YAAaA,EACb5G,KAAMA,EACN0G,OAAQA,EACRtO,UAAWX,EAAQX,UClBV+P,GApBKhP,sBAA0B,WAE5CE,GACC,IAFC+O,EAEF,EAFEA,eAAmBpH,EAErB,mCAMA,OACE,kBAAC,GAAD,eACE3H,IAAKA,EACLiI,KAAK,SACL4G,YAAY,SACZD,SAV+B,SAAAI,GACjC,IAAMC,EAAQD,EAAME,cAAcR,MAClCK,EAAeE,KASTtH,O,SCPJhJ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAK,aACHgM,SAAU,WACV7E,IAAK,MACLiJ,UAAW,mBACXjE,MAAO,OACPzC,OAAQ,GACP5J,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BkG,SAAU,SACVxD,YAAa1I,EAAM2I,QAAQ,KAC3B2H,UAAW,OACX1G,OAAQ,cAmFD2G,GArEA,SAAC,GAAsC,IAApC9Q,EAAmC,EAAnCA,aAAc+Q,EAAqB,EAArBA,QAAqB,EACbvD,mBAAS,IADI,mBAC5CwD,EAD4C,KAC/BP,EAD+B,OAETjD,oBAAS,GAFA,mBAE5CyD,EAF4C,KAE7BC,EAF6B,KAG7CC,EAAcrJ,qBAAW5B,GACzBkL,EAAgBC,iBAA0B,MAC1CC,EAAiBD,iBAAyB,MAC1C9Q,EAAQgR,eACRnQ,EAAUf,KACViJ,EAAmBxB,qBAAW/B,GAE9ByL,EAAejR,EAAM+F,YAAYmL,OAAOC,GAExCC,EAA2B,SAAAjB,GAC/BA,EAAMkB,iBACN,IAAMjB,EAAQK,EAAYa,OAAO3O,cAC7ByN,IACFF,EAAe,IACXE,IAAU3Q,EACZ+Q,EAAQJ,GAERrH,EAAiB,CAAEK,KAAMd,GAAmB7I,aAAc2Q,KAG1DQ,EAAcK,GAAgBJ,EAAcU,UAC9CZ,GAAiB,GACjBE,EAAcU,QAAQC,UAM1BpE,qBAAU,WACJwD,EAAcK,GAAgBF,EAAeQ,SAC/CR,EAAeQ,QAAQC,UAExB,CAACP,EAAcP,EAAeE,IAEjC,IAAMa,EAAgB,SAAC3B,GAAD,OACpB,kBAAC,GAAD,CAAMtO,UAAWX,EAAQX,KAAMsP,SAAU4B,GACvC,kBAAC,GAAD,CACEjQ,IAAK4P,EACLlB,MAAOY,EACPX,OAAQA,EACRI,eAAgBA,IAEjBU,GAAeK,GACd,kBAAC,GAAD,CAAcpI,MAAM,SAASO,KAAK,aAKxC,OACE,oCACGwH,GAAeK,EACdQ,IAEA,oCACGf,GAAiBe,GA5BP,kBAAMd,GAAiB,MA6BlC,kBAAC,GAAD,CACExP,IAAK0P,EACLhI,MAAM,cACNM,QAAS,kBAAMwH,GAAiB,S,6kBCjF5C,SAASe,GAAWC,EAAiBhC,GACnC,OAAQA,EAAOvG,MACb,KAAKrB,GACH,OAAO,GAAP,GACK4J,EADL,CAEEhG,WAAW,EACXE,SAAS,IAGb,KAAK7D,GAEH,OAAO,GAAP,GACK2J,EADL,CAEElP,KAHekN,EAATlN,KAINkJ,WAAW,IAGf,KAAK1D,GACH,OAAO,GAAP,GACK0J,EADL,CAEElP,KAAM,KACNkJ,WAAW,EACXE,SAAS,IAGb,QACE,OAAO8F,GAKEC,OAvCf,WACE,OAAOC,qBAAyCH,GAAS,CACvDjP,KAAM,KACNkJ,WAAW,EACXE,SAAS,KCwBEiG,GApCO,SAACrS,GAA2B,IAAD,EACrBmS,KADqB,mBACxCD,EADwC,KACjCI,EADiC,KAGzC3C,EAAc4C,sBAAW,uCAC7B,WAAO3E,GAAP,qBAAAjL,EAAA,yDACE2P,EAAS,CAAE3I,KAAMrB,KACjBpD,EAAqB0I,KACf4E,EAAiBxN,aAAayN,QAAb,2BACD7E,KAJxB,sBAQ4BvI,KAAKC,MAAMkN,GAA3BjQ,EARZ,EAQYA,aACJD,EAAeC,GATvB,iCAUuBc,EAAcuK,GAVrC,OAUMlK,EAVN,+BAYMA,EAAW2B,KAAKC,MAAMkN,GAZ5B,iDAeqBnP,EAAcuK,GAfnC,QAeIlK,EAfJ,eAkBI4O,EADE5O,EACO,CAAEiG,KAAMpB,GAAevF,KAAMU,GAE7B,CAAEiG,KAAMnB,KApBrB,4CAD6B,sDAwB7B,CAAC8J,IAMH,OAJA3E,qBAAU,WACR3N,GAAgB2P,EAAY3P,KAC3B,CAACsS,EAAU3C,EAAa3P,IAEpB,CAACkS,EAAOvC,ICbF+C,GAlBG,SAAC,GAAuC,IAArC1S,EAAoC,EAApCA,aAAiBqJ,EAAmB,mCACvBgJ,KADuB,mBAChD3O,EADgD,KACtCiM,EADsC,KAGjDhF,EAAS,kBAAC,GAAD,CAAQ3K,aAAcA,EAAc+Q,QAASpB,IAG5D,OAAO3P,EACL,kBAAC,GAAD,CACEA,aAAcA,EACd0D,SAAUA,EACViM,YAAaA,EACbhF,OAAQA,IAGV,kBAAC,GAAD,eAASA,OAAQA,GAAYtB,K,oBCf3BhJ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ8G,QAAS,OACT,cAAe,CACboL,QAAS,QAEX,oBAAqB,CACnBvF,OAAO,iBAAD,OAAmB7M,EAAMM,QAAQC,UAAUC,MACjD6F,WAAY,uBACZ,UAAW,CACT6E,UAAU,iBAAD,OAAmBlL,EAAMM,QAAQ+R,KAAK1R,UAEjD,UAAW,CACTyR,QAAQ,iBAAD,OAAmBpS,EAAMM,QAAQgS,KAAK,SAInDC,KAAM,CACJvL,QAAS,QAEXwL,IAAI,aACFjK,gBAAiBvI,EAAMM,QAAQC,UAAUC,KACzC0I,MAAOlJ,EAAMM,QAAQC,UAAU4K,aAC/BF,QAASjL,EAAM2I,QAAQ,GACvBqB,UAAW,SACX9D,SAAU,QACTlG,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BgE,UAAW,SACX9D,SAAU,eA2CHuM,GA1BC,SAAC,GAQH,IAPZpH,EAOW,EAPXA,SACAqH,EAMW,EANXA,QACAC,EAKW,EALXA,WACAC,EAIW,EAJXA,UACAhS,EAGW,EAHXA,GACAiS,EAEW,EAFXA,MACA1J,EACW,EADXA,QAEMtI,EAAUf,KAChB,OACE,yBAAK0B,UAAWX,EAAQX,MACtB,kBAACqJ,GAAA,EAAD,CAASC,MAAOkJ,GACd,kBAAC,IAAD,CACE9R,GAAIA,EACJuI,QAASA,EACT3H,UAAWmG,YAAK9G,EAAQ0R,KAAMI,IAE9B,yBAAKnR,UAAWmG,YAAK9G,EAAQ2R,IAAKI,IAAavH,KAGlDwH,IC5DD/S,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXsS,KAAM,CACJ7J,YAAa,WAEfoK,MAAO,CACL9L,QAAS,OACT,oBAAqB,CACnBb,SAAU,SACV8F,WAAY,UACZlC,aAAc/J,EAAM2I,QAAQ,KAC5BoK,cAAe/S,EAAM2I,QAAQ,GAC7B,SAAU,CACRxC,SAAU,QACViG,WAAY,WAIlB4G,QAAS,CACP9J,MAAOlJ,EAAMM,QAAQ2S,OAAOC,MAC5B/M,SAAU,UAEZtD,MAAO,CACL+C,MAAO,cA0DEuN,GA7CI,SAAC,GAAmC,IAAjC9F,EAAgC,EAAhCA,SAAUhC,EAAsB,EAAtBA,SACxBxK,EAAUf,KADoC,EAEbgS,GAAczE,GAFD,sBAE3C5K,EAF2C,EAE3CA,KAAMkJ,EAFqC,EAErCA,UAAWE,EAF0B,EAE1BA,QACpB9C,EAAmBxB,qBAAW/B,GAMpC,OACE,kBAAC,GAAD,CACEkN,QAAQ,iBACR9R,GAAE,UAAK3B,GACPkK,QARoB,WACtBJ,EAAiB,CAAEK,KAAMd,GAAmB7I,aAAc4N,KAQxDsF,WAAY9R,EAAQ0R,KACpBM,MAAOxH,GAEP,kBAAC,GAAD,CACEK,cAAe7K,EAAQmS,QACvB1H,YAAazK,EAAQgC,MACrB8I,UAAWA,EACXE,QAASA,EACTD,aAAY,2BAAsBjK,EAChC0L,GADU,8DAGZ9B,oBAAkB,GAEjB9I,GACC,oCACE,kBAACgI,GAAA,EAAD,CAAYhD,QAAQ,MACjBhF,EAAKW,eAAeV,KADvB,KAC+BD,EAAKW,eAAeI,SAEnD,yBAAKhC,UAAWX,EAAQiS,OACtB,kBAAC,GAAD,CAAapP,YAAajB,EAAKW,eAAeM,aAA9C,MAIF,2BAAIjB,EAAKW,eAAeE,eC9E9BxD,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXsS,KAAM,CACJpM,SAAU,SACV8E,QAAS,QACTjE,QAAS,OACToM,WAAY,SACZlK,MAAOlJ,EAAMM,QAAQ+R,KAAK1R,cAoBjB0S,GAbQ,SAAC,GAAyB,IAApBvK,EAAmB,mBACxCjI,EAAUf,KAChB,OACE,kBAAC,GAAegJ,EACd,kBAACS,GAAA,EAAD,CAASC,MAAM,0BACb,kBAAC,IAAD,CAAM5I,GAAE,UAAK3B,GAA0BuC,UAAWX,EAAQ0R,MACxD,kBAAC,KAAD,U,oBCvBJzS,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuS,IAAK,CACHxL,QAAS,OACTE,eAAgB,SAChBkM,WAAY,UAEd1S,KAAM,CACJyF,SAAU,eAkBDmN,GAbQ,WACrB,IAAMzS,EAAUf,KAChB,OACE,kBAAC,GAAD,CACE4S,QAAQ,eACR9R,GAAI3B,EACJ2T,UAAW/R,EAAQ2R,KAEnB,kBAAC,KAAD,CAAShR,UAAWX,EAAQH,S,oBCX5B6S,GAAgB,SAAC,GAAgC,IAA9B1K,EAA6B,EAA7BA,MAAOwE,EAAsB,EAAtBA,SACxBtE,EAAmBxB,qBAAW/B,GAMpC,OACE,kBAAC,GAAD,CAAY6H,SAAUA,GACpB,kBAAC9D,GAAA,EAAD,CAASC,MAAOX,GACd,kBAACG,GAAA,EAAD,CAAYC,aAAYJ,EAAOK,MAAM,UAAUC,QAPjC,WAClBJ,EAAiB,CAAEK,KAAMf,GAAuBgF,eAO1C,kBAAC,KAAD,UAOVkG,GAAclK,aAtBO,CACnBR,MAAO,yBAsBM0K,UCxBTzT,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ,6BAA6B,aAC3BuM,aAAczM,EAAM2I,QAAQ,IAC3B3I,EAAM+F,YAAYC,GAAG,MAAQ,CAC5ByG,aAAczM,EAAM2I,QAAQ,MAIlCnJ,UAAW,CACTwH,QAAS,OACT0F,SAAU,OACV,UAAU,aACRD,aAAczM,EAAM2I,QAAQ,IAC3B3I,EAAM+F,YAAYC,GAAG,MAAQ,CAC5ByG,aAAczM,EAAM2I,QAAQ,KAGhC,2BAA2B,aACzBD,YAAa1I,EAAM2I,QAAQ,IAC1B3I,EAAM+F,YAAYC,GAAG,MAAQ,CAC5ByG,aAAczM,EAAM2I,QAAQ,WA0CvB6K,GA9BG,SAAC,GAA0C,IAAxClU,EAAuC,EAAvCA,eAAgBE,EAAuB,EAAvBA,UAC7BqB,EAAUf,KAEhB,OACE,oCACE,kBAAC,GAAD,CAAWqK,QAASlL,IACpB,yBAAKuC,UAAWX,EAAQX,MACtB,iCACE,kBAACuK,GAAA,EAAD,CAAYhD,QAAQ,MAApB,mBACCnI,EACC,kBAAC,GAAD,CAAgB+N,SAAU/N,IAE1B,kBAAC,GAAD,OAGHE,EAAUiU,OAAS,GAClB,iCACE,kBAAChJ,GAAA,EAAD,CAAYhD,QAAQ,MAApB,mBACA,yBAAKjG,UAAWX,EAAQrB,WACrBA,EAAUkU,KAAI,SAAArG,GAAQ,OACrB,kBAACsG,GAAD,CAAkB/O,IAAKyI,EAAUA,SAAUA,YChD5CuG,GATC,SAAC,GAAkC,IAAhCzJ,EAA+B,EAA/BA,QAASkB,EAAsB,EAAtBA,SAC1B,OACE,iCACE,kBAACZ,GAAA,EAAD,CAAYhD,QAAQ,MAAM0C,GACzBkB,ICIDvL,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJsM,SAAU,cA6CDqH,GAjCe,SAAC,GAA8C,IAA5CvU,EAA2C,EAA3CA,eAAgBwU,EAA2B,EAA3BA,cACzCjT,EAAUf,KACViJ,EAAmBxB,qBAAW/B,GAiBhC2E,EAAO,kBAEX,OADI7K,IAAgB6K,GAAO,YAASxI,EAAoBrC,KAEtD,kBAAC,GAAD,CAAS6K,QAASA,GAChB,kBAAC,GAAD,CAAMqF,SAAU,SAAAW,GAAK,OAnBQ,SAAAA,GAC/BA,EAAMkB,iBACN,IACM/R,EADO6Q,EAAME,cACS/Q,eAAeuQ,MAAMyB,OAAO3O,cACpDrD,IACFmF,aAAaC,QAAQxF,EAAcI,eAAgBA,GACnDwU,EAAc,CAAE1K,KAAMpB,GAAevF,KAAMnD,IAC3CyJ,EAAiB,CACfK,KAAMd,GACN7I,aAAcH,IAEhB6Q,EAAME,cAAc0D,SAQK3C,CAAajB,IAAQ3O,UAAWX,EAAQX,MAC/D,kBAAC,GAAD,CAAYmD,KAAK,iBAAiB2M,YAAY,wBAC9C,kBAAC,GAAD,CAAanH,MAAM,SAASO,KAAK,UAC/B,kBAAC,KAAD,UC9CJtJ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ0F,MAAO,OACP,cAAe,CACbmG,UAAW/L,EAAM2I,QAAQ,UAuBlBqL,GAfE,SAAC,GAAyB,IAApBlL,EAAmB,mBAClCjI,EAAUf,KAEhB,OACE,oCACE,kBAAC,GAAD,CAAWqK,QAASlL,IACpB,6BAASuC,UAAWX,EAAQX,MAC1B,kBAACuK,GAAA,EAAD,CAAYhD,QAAQ,MAApB,WACA,kBAAC,GAA0BqB,MCapBmL,GAlCW,SAAClL,GAAgD,IAAD,EACzC6I,KADyC,mBACjED,EADiE,KAC1DmC,EAD0D,KAIlEI,EAAelC,uBACnB,SAAC1S,GACCyJ,EAAiB,CACfK,KAAMd,GACN7I,aAAcH,IAEhBwU,EAAc,CAAE1K,KAAMpB,GAAevF,KAAMnD,MAE7C,CAACwU,EAAe/K,IAmBlB,OAhBAqE,qBAAU,WACR,sBAAC,4BAAAhL,EAAA,2DACK9C,EAAiBmF,aAAayN,QAAQ,oBAD3C,gBAGGgC,EAAa5U,GAHhB,8BAKGwU,EAAc,CAAE1K,KAAMrB,KALzB,SAM0BvD,IAN1B,QAMGlF,EANH,QAQK4U,EAAa5U,GAEbwU,EAAc,CAAE1K,KAAMnB,KAV3B,2CAAD,KAcC,CAAC6L,EAAeI,IACZ,CAACvC,EAAOmC,ICzBXhU,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAK,aACH8G,QAAS,OACTC,cAAe,SACfmM,WAAY,aACZnJ,SAAU,EACV8B,UAAWpM,EACXsL,QAASjL,EAAM2I,QAAQ,IACtB3I,EAAM+F,YAAYC,GAAG,MAAQ,CAC5B+F,UzCIsB,OyCHtBd,QAASjL,EAAM2I,QAAQ,EAAG,UA2CnBwL,GArCC,WACd,IAAMtT,EAAUf,KACViJ,EAAmBxB,qBAAW/B,GAFhB,EAGgB+B,qBAAW7B,GAAvCjG,EAHY,EAGZA,aAAcD,EAHF,EAGEA,UAHF,EAOhByU,GAAkBlL,GAPF,0BAKVzJ,EALU,EAKhBmD,KAAsBkJ,EALN,EAKMA,UAAWE,EALjB,EAKiBA,QACnCiI,EANkB,KAUpB,OACE,0BAAMtS,UAAWX,EAAQX,MACvB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOkU,KAAI,WAAMnV,IACf,kBAAC,GAAD,CACEQ,aAAcA,EACdkM,UAAWA,EACXE,QAASA,KAGb,kBAAC,KAAD,CAAOuI,KAAI,WAAMnV,IACf,kBAAC,GAAD,CAAWK,eAAgBA,EAAgBE,UAAWA,KAExD,kBAAC,KAAD,CAAO4U,KAAI,WAAMnV,IACf,kBAAC,GAAD,CACEK,eAAgBA,EAChBwU,cAAeA,KAGnB,kBAAC,KAAD,CAAOM,KAAI,KACT,kBAAC,KAAD,CAAUxT,GAAE,WAAM3B,SC3DtBa,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ8G,QAAS,OACT,OAAO,aACLyF,aAAczM,EAAM2I,QAAQ,IAC3B3I,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,SAGd,OAAO,aACLsG,aAAczM,EAAM2I,QAAQ,MAC3B3I,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BG,SAAU,WAGd,WAAY,CACV,UAAW,CACToC,gBAAiBvI,EAAMM,QAAQqP,OAAO0E,UAExC,UAAW,CACT9L,gBAAiBvI,EAAMM,QAAQqP,OAAO2E,OAExC,WAAY,CACV/L,gBAAiBvI,EAAMM,QAAQqP,OAAOvP,OACtC8I,MAAOlJ,EAAMM,QAAQK,QAAQH,aAiBxB+T,GAVF,WACX,IAAM1T,EAAUf,KAChB,OACE,yBAAK0B,UAAWX,EAAQX,MACtB,kBAAC,GAAD,MACA,kBAACsU,GAAD,Q,mnBC9BN,IAAMC,GAAY,CAChBC,QAAS,CACPnU,UAAW,CACTC,K,QAAMmU,EAAK,OAGfC,MAAO,CACLC,UAAW,CACTC,UAAW,GAEbC,cAAe,CACbC,eAAe,IAGnBC,UAAW,CACTC,UAAW,CACTC,sBAAuB,CACrBC,YAAa,IAGjBC,cAAe,CACbnV,KAAM,CACJ0K,aAAc,IACdzE,SAAU,OACV8E,QAAS,UAGbqK,YAAa,CACXC,QAAS,CACPC,YAAa3V,EACbkK,a3ChB6B,S2CmBjC0L,gBAAiB,CACfvV,KAAM,CACJgG,SAAUtG,IAGd8V,WAAY,CACVxV,KAAM,CACJiG,S3CzB0B,W2C4B9BwP,WAAY,CACVC,MAAO,CACL5L,U3C1BsB,S2C6B1B6L,WAAY,CACVnD,QAAS,CACPvM,SAAU,YAIhB2P,WAAY,CACVC,GAAI,CACF5P,SAAU,UAEZ6P,GAAI,CACF7P,SAAU,UAEZ8P,GAAI,CACF9P,SAAU,OACV8F,WAAY,MAGhBtD,QAAS,SAACuN,GAAD,gB3C7CmB,G2C6CqBA,EAAxC,QACTC,MAAO,CACLvL,aAAc,IAILwL,GAAaC,aAAe,MACpC5B,GADmC,CAEtCnU,QAAQ,MACHmU,GAAUC,QADR,CAEL/E,OAAQ,CACNvP,OAAQ,qBACRkU,MAAO,sBACPD,SAAU,uBAEZ7L,WAAY,CACV8N,QAAShE,KAAK,MAEhB3R,QAAS,CACPH,KAAM8R,KAAK,UAKJiE,GAAYF,aAAe,MACnC5B,GADkC,CAErCnU,QAAQ,MACHmU,GAAUC,QADR,CAEL/E,OAAQ,CACNvP,OAAQ,2BACRkU,MAAO,4BAET3T,QAAS,CACPH,KAAM8R,KAAK,MAEblJ,KAAM,Y,mBCtFK4H,GApBE,SAACe,EAA6B3S,GAC7C,IAAMoX,EAAmBC,aAAc,+BAAgC,CACrEC,OAAO,IAGTtJ,qBAAU,WACR,IAAIuJ,EAAclS,aAAayN,QAAQhT,EAAcE,aACjDuX,EACEvX,IAAgB0F,KAAKC,MAAM4R,IAC7B5E,EAAS,CAAE3I,KAAMjB,MAGf/I,IAAgBoX,GAClBzE,EAAS,CAAE3I,KAAMjB,KAEnB1D,aAAaC,QAAQxF,EAAcE,YAAawX,OAAOJ,OAExD,CAACzE,EAAU3S,EAAaoX,KCJdK,GAdG,SAAC9E,EAA6B5S,GAC9CiO,qBAAU,WACR,IAAM0J,EAAerS,aAAayN,QAAQhT,EAAcC,cACpD2X,EACwBhS,KAAKC,MAAM+R,KACpB3X,GACf4S,EAAS,CAAE3I,KAAMlB,KAGnBzD,aAAaC,QAAQxF,EAAcC,aAAcyX,OAAOzX,MAEzD,CAAC4S,EAAU5S,K,6kBCchB,SAASuS,GAAQC,EAAkBhC,GACjC,OAAQA,EAAOvG,MACb,KAAKlB,GAAgB,IACX/I,EAAiBwS,EAAjBxS,aAER,OADAsF,aAAaC,QAAQxF,EAAcC,aAAcyX,QAAQzX,IAClD,MACFwS,EADL,CAEExS,cAAeA,IAGnB,KAAKgJ,GAAe,IACV/I,EAAgBuS,EAAhBvS,YAER,OADAqF,aAAaC,QAAQxF,EAAcE,YAAawX,QAAQxX,IACjD,MACFuS,EADL,CAEEvS,aAAcA,IAGlB,KAAKkJ,GACH,OAAO,MACFqJ,EADL,CAEElS,aAAckQ,EAAOlQ,eAGzB,KAAK2I,GACH,OAAO,MACFuJ,EADL,CAEEnS,UAAU,GAAD,oBAAMmS,EAAMnS,WAAZ,CAAuBmQ,EAAOtC,aAG3C,KAAKhF,GACH,OAAO,MACFsJ,EADL,CAEEnS,UAAU,aACLmS,EAAMnS,UAAUuX,QAAO,SAAA1J,GAAQ,OAAIsC,EAAOtC,WAAaA,QAIhE,QACE,OAAOsE,GAKEqF,OAtDK,WAAO,IAAD,EACEnF,qBAAWH,GAASnS,GADtB,mBACjBoS,EADiB,KACVI,EADU,KAEhB5S,EAA8BwS,EAA9BxS,aAAcC,EAAgBuS,EAAhBvS,YAKtB,OAHA4R,GAASe,EAAU3S,GACnByX,GAAU9E,EAAU5S,GAEb,CAACwS,EAAOI,ICZFkF,GAdQ,WAAO,IAAD,EACDhK,mBAASiK,OAAOC,YADf,mBACpBvR,EADoB,KACbwR,EADa,KAW3B,OARAhK,qBAAU,WACR,IAAMiK,EAAe,kBAAMD,EAASF,OAAOC,aAE3C,OADAD,OAAOI,iBAAiB,SAAUD,GAC3B,WACLH,OAAOK,oBAAoB,SAAUF,MAEtC,IAEIzR,GCsBM4R,GArBO,WACpB,IAAM5G,EAAcqG,KADM,EAEWD,KAFX,mBAEnBS,EAFmB,KAET1O,EAFS,KAK1B,OACE,kBAAC2O,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAACC,EAAA,EAAD,CAAe5X,MAAOyX,EAASrY,YAAcmX,GAAYH,IACvD,kBAACyB,EAAA,EAAD,MACA,kBAAClS,EAAemS,SAAhB,CAAyBjI,MAAOe,GAC9B,kBAACpL,EAAoBsS,SAArB,CAA8BjI,MAAO9G,GACnC,kBAACrD,EAAYoS,SAAb,CAAsBjI,MAAO4H,GAC3B,kBAAC,GAAD,YCdMM,QACW,cAA7Bb,OAAO7J,SAAS2K,UAEe,UAA7Bd,OAAO7J,SAAS2K,UAEhBd,OAAO7J,SAAS2K,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c580beab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Spinner_root__30P1U\",\"load6\":\"Spinner_load6__2K9aE\",\"round\":\"Spinner_round__3ZW9V\"};","import { ISettings } from \"./types\";\r\n\r\n// export const EXPIRATION_TIMEFRAME = 3660000;\r\nexport const EXPIRATION_TIMEFRAME = 7.2e6;\r\nexport const APP_STRUCTURE = {\r\n  welcome: \"welcome\",\r\n  forecast: \"forecast\",\r\n  favorites: \"favorites\",\r\n  settings: \"settings\"\r\n};\r\n\r\nexport const LOCAL_STORAGE = {\r\n  isDrawerOpen: \"isDrawerOpen\",\r\n  isThemeDark: \"isThemeDark\",\r\n  weatherForecast: \"weather_forecast_\",\r\n  launchLocation: \"launch_location\"\r\n};\r\n\r\nexport const INITIAL_SETTINGS: ISettings = {\r\n  favorites: [],\r\n  isDrawerOpen: false,\r\n  isThemeDark: false,\r\n  lastLocation: null\r\n};\r\n\r\n// Styles -------------------------------------\r\nexport const LIST_ITEM_GUTTER_SIZE = \"1rem\";\r\nexport const SVG_ICON_FONT_SIZE = \"1.5rem\";\r\nexport const ACTIVE_LINK_BORDER_SIZE = \"0.375rem\";\r\n\r\n// should be larger than anything in toolbar\r\nexport const TOOLBAR_HEIGHT = \"4rem\";\r\n\r\nexport const SCALING_FACTOR = 0.5;\r\n\r\nexport const drawerIconWidth = `calc(${LIST_ITEM_GUTTER_SIZE} * 2 + ${SVG_ICON_FONT_SIZE})`;\r\nexport const toolbarHeightMin = `calc(${TOOLBAR_HEIGHT} - ${SCALING_FACTOR}rem)`;\r\nexport const listItemIconMinWidth = `calc(${SVG_ICON_FONT_SIZE} * 2)`;\r\nexport const listItemLeftGutterSize = `calc(${LIST_ITEM_GUTTER_SIZE} - ${ACTIVE_LINK_BORDER_SIZE})`;\r\n","import React from \"react\";\r\nimport {\r\n  NavLink as RouterLink,\r\n  LinkProps as RouterLinkProps\r\n} from \"react-router-dom\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { ACTIVE_LINK_BORDER_SIZE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      borderLeft: `${ACTIVE_LINK_BORDER_SIZE} solid transparent`\r\n    },\r\n    active: {\r\n      borderColor: theme.palette.secondary.main\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  icon?: React.ReactElement;\r\n  primary: string;\r\n  to: string;\r\n};\r\n\r\nconst ListItemLink = ({ icon, primary, to }: Props) => {\r\n  const classes = useStyles();\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, \"to\">>((itemProps, ref) => (\r\n        <RouterLink\r\n          to={`/${to}`}\r\n          ref={ref}\r\n          activeClassName={classes.active}\r\n          {...itemProps}\r\n        />\r\n      )),\r\n    [to, classes.active]\r\n  );\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink} className={classes.root}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItemLink;\r\n","import { IForecast, ICurrentWeatherData, IGeoLocationData } from \"./types\";\r\nimport { EXPIRATION_TIMEFRAME } from \"./constants\";\r\n\r\nexport const capitalizeFirstChar = (string: string) => {\r\n  return `${string[0].toUpperCase()}${string.slice(1)}`;\r\n};\r\n\r\nexport const checkIfExpired = (requestTime: number) => {\r\n  const currentDate = new Date().getTime();\r\n  const isExpired = currentDate - requestTime > EXPIRATION_TIMEFRAME;\r\n  return isExpired;\r\n};\r\n\r\nexport const fetchLocation = async () => {\r\n  try {\r\n    const response = await fetch(`https://get.geojs.io/v1/ip/geo.json`);\r\n    if (!response.ok) return null;\r\n    const data: IGeoLocationData = await response.json();\r\n    const city = data.city.toLowerCase();\r\n    return city;\r\n  } catch (error) {\r\n    console.error(\"There has been a problem with your fetch operation:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const fetchForecast = async (queriedCity: string) => {\r\n  try {\r\n    const OPENWEATHERMAP_KEY = process.env.REACT_APP_OPENWEATHERMAP_KEY;\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${queriedCity}`;\r\n    const updatedUrl = `${url}&appid=${OPENWEATHERMAP_KEY}&units=metric`;\r\n    const response = await fetch(updatedUrl);\r\n    if (!response.ok) return null;\r\n    const data: ICurrentWeatherData = await response.json();\r\n\r\n    const forecast: IForecast = {\r\n      currentWeather: {\r\n        city: data.name,\r\n        condition: data.weather[0].main,\r\n        country: data.sys.country,\r\n        temperature: Math.round(data.main.temp),\r\n        cloudiness: data.clouds.all,\r\n        windSpeed: data.wind.speed,\r\n        visibility: data.visibility / 1000,\r\n        pressure: data.main.pressure,\r\n        humidity: data.main.humidity\r\n      },\r\n      requestTime: new Date().getTime()\r\n    };\r\n    storeWeather(queriedCity, forecast);\r\n    return forecast;\r\n  } catch (error) {\r\n    console.error(\"There has been a problem with your fetch operation:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getExpirationTimeframe = (requestTime: number) => {\r\n  return EXPIRATION_TIMEFRAME - (new Date().getTime() - requestTime);\r\n};\r\n\r\nexport const getLaunchLocation = async () => {\r\n  const launchLocation = await fetchLocation();\r\n  if (!launchLocation) return null;\r\n  localStorage.setItem(\"launch_location\", launchLocation);\r\n  return launchLocation;\r\n};\r\n\r\nexport const getReadableRequestTime = (requestTime: number) => {\r\n  const currentYear = new Date().getFullYear();\r\n  const requestYear = new Date(requestTime).getFullYear();\r\n  const time = sliceSplittedString(\r\n    new Date(requestTime).toTimeString(),\r\n    \" \",\r\n    0,\r\n    1\r\n  ).slice(0, 5);\r\n  const date = new Date(requestTime).toDateString();\r\n\r\n  if (currentYear === requestYear) {\r\n    const currentDay = new Date().getDate();\r\n    const requestDay = new Date(requestTime).getDate();\r\n\r\n    if (currentDay === requestDay) {\r\n      return time;\r\n    } else if (currentDay - 1 === requestDay) {\r\n      return `Yesterday, ${time}`;\r\n    } else {\r\n      return `${sliceSplittedString(date, \" \", 1, 3)}, ${time}`;\r\n    }\r\n  } else {\r\n    return `${sliceSplittedString(date, \" \", 1)}, ${time}`;\r\n  }\r\n};\r\n\r\nexport const getRemainingTime = (milliseconds: number) => {\r\n  milliseconds += 60000;\r\n  const hours = Math.floor((milliseconds / 3600000) % 60);\r\n  const minutes = Math.floor((milliseconds / 60000) % 60);\r\n  // const seconds = Math.floor((milliseconds / 1000) % 60);\r\n  if (hours > 0) {\r\n    return `${hours}h ${minutes}m`;\r\n  } else {\r\n    return `${minutes}m`;\r\n  }\r\n};\r\n\r\nexport const removeExpiredWeather = (city: string) => {\r\n  for (let key in localStorage) {\r\n    if (key.includes(\"weather\") && !key.includes(city)) {\r\n      const requestTime: number = JSON.parse(localStorage[key]).requestTime;\r\n      if (checkIfExpired(requestTime)) {\r\n        localStorage.removeItem(key);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const sliceSplittedString = (\r\n  string: string,\r\n  separator: string,\r\n  beginIndex: number,\r\n  endIndex?: number\r\n) => {\r\n  return string\r\n    .split(separator)\r\n    .slice(beginIndex, endIndex)\r\n    .join(separator);\r\n};\r\n\r\nexport const storeWeather = (city: string, weather: object) => {\r\n  localStorage.setItem(`weather_forecast_${city}`, JSON.stringify(weather));\r\n};\r\n","import { createContext, Dispatch } from \"react\";\r\n\r\nimport { Action as SettingsAction } from \"./hooks/useSettings\";\r\nimport { INITIAL_SETTINGS } from \"./constants\";\r\n\r\nexport const SettingsDispatchCtx = createContext<Dispatch<SettingsAction>>(\r\n  () => {}\r\n);\r\nexport const SettingsCtx = createContext(INITIAL_SETTINGS);\r\nexport const WindowWidthCtx = createContext(0);\r\n","import React, { useContext } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport ListItemLink from \"../ListItemLink/ListItemLink\";\r\nimport {\r\n  TOOLBAR_HEIGHT,\r\n  toolbarHeightMin,\r\n  drawerIconWidth,\r\n  APP_STRUCTURE,\r\n  listItemIconMinWidth\r\n} from \"../../constants\";\r\nimport { capitalizeFirstChar } from \"../../utils\";\r\nimport { SettingsCtx } from \"../../contexts\";\r\n\r\nconst DRAWER_MIN_WIDTH = \"8.5rem\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: DRAWER_MIN_WIDTH,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"13rem\"\r\n      },\r\n      \"& .MuiListItemIcon-root\": {\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          minWidth: `calc(${listItemIconMinWidth} - 0.5rem)`\r\n        }\r\n      },\r\n      \"& .MuiTypography-body1\": {\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          fontSize: \"0.9rem\"\r\n        }\r\n      }\r\n    },\r\n    isOpen: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      }),\r\n      width: DRAWER_MIN_WIDTH,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"13rem\"\r\n      }\r\n    },\r\n    isClosed: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: drawerIconWidth\r\n    },\r\n    list: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-between\",\r\n      height: `calc(100vh - ${toolbarHeightMin})`,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        height: `calc(100vh - ${TOOLBAR_HEIGHT})`\r\n      }\r\n    },\r\n    paper: {\r\n      top: toolbarHeightMin,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        top: TOOLBAR_HEIGHT\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AppDrawer = () => {\r\n  const classes = useStyles();\r\n  const { isDrawerOpen } = useContext(SettingsCtx);\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      open={isDrawerOpen}\r\n      className={clsx(classes.root, {\r\n        [classes.isOpen]: isDrawerOpen,\r\n        [classes.isClosed]: !isDrawerOpen\r\n      })}\r\n      classes={{\r\n        paper: clsx(classes.paper, {\r\n          [classes.isOpen]: isDrawerOpen,\r\n          [classes.isClosed]: !isDrawerOpen\r\n        })\r\n      }}\r\n    >\r\n      <List disablePadding className={classes.list}>\r\n        <div>\r\n          <ListItemLink\r\n            icon={<HomeOutlinedIcon />}\r\n            primary={capitalizeFirstChar(APP_STRUCTURE.forecast)}\r\n            to={APP_STRUCTURE.forecast}\r\n          />\r\n          <ListItemLink\r\n            icon={<StarBorderIcon />}\r\n            primary={capitalizeFirstChar(APP_STRUCTURE.favorites)}\r\n            to={APP_STRUCTURE.favorites}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Divider />\r\n          <ListItemLink\r\n            icon={<SettingsOutlinedIcon />}\r\n            primary={capitalizeFirstChar(APP_STRUCTURE.settings)}\r\n            to={APP_STRUCTURE.settings}\r\n          />\r\n        </div>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AppDrawer;\r\n","export const FETCH_INIT = \"FETCH_INIT\";\r\nexport type FETCH_INIT = typeof FETCH_INIT;\r\n\r\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\r\nexport type FETCH_SUCCESS = typeof FETCH_SUCCESS;\r\n\r\nexport const FETCH_FAILURE = \"FETCH_FAILURE\";\r\nexport type FETCH_FAILURE = typeof FETCH_FAILURE;\r\n\r\nexport const TOGGLE_DRAWER = \"TOGGLE_DRAWER\";\r\nexport type TOGGLE_DRAWER = typeof TOGGLE_DRAWER;\r\n\r\nexport const TOGGLE_THEME = \"TOGGLE_THEME\";\r\nexport type TOGGLE_THEME = typeof TOGGLE_THEME;\r\n\r\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\r\nexport type ADD_TO_FAVORITES = typeof ADD_TO_FAVORITES;\r\n\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";\r\nexport type REMOVE_FROM_FAVORITES = typeof REMOVE_FROM_FAVORITES;\r\n\r\nexport const SET_LAST_LOCATION = \"SET_LAST_LOCATION\";\r\nexport type SET_LAST_LOCATION = typeof SET_LAST_LOCATION;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { drawerIconWidth } from \"../../constants\";\r\nimport { TOGGLE_DRAWER } from \"../../actions\";\r\nimport { SettingsDispatchCtx } from \"../../contexts\";\r\n\r\ntype Props = {\r\n  className?: string;\r\n} & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n  label: \"Toggle drawer\"\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      alignSelf: \"stretch\",\r\n      display: \"flex\",\r\n      marginRight: theme.spacing(1),\r\n      width: drawerIconWidth,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginRight: theme.spacing(2)\r\n      }\r\n    },\r\n    button: {\r\n      width: \"100%\"\r\n    }\r\n  })\r\n);\r\n\r\nconst SidebarToggle = ({ label, ...other }: Props) => {\r\n  const classes = useStyles();\r\n  const dispatchSettings = useContext(SettingsDispatchCtx);\r\n\r\n  const toggleDrawer = () => {\r\n    dispatchSettings({ type: TOGGLE_DRAWER });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        aria-label={label}\r\n        color=\"inherit\"\r\n        classes={{ root: classes.button }}\r\n        onClick={toggleDrawer}\r\n        {...other}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebarToggle.defaultProps = defaultProps;\r\nexport default SidebarToggle;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\n\r\nimport { SettingsDispatchCtx, SettingsCtx } from \"../../contexts\";\r\nimport { TOGGLE_THEME } from \"../../actions\";\r\n\r\ntype Props = {} & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n  label: \"Toggle theme\"\r\n};\r\n\r\nconst ThemeToggle = ({ label }: Props) => {\r\n  const dispatchSettings = useContext(SettingsDispatchCtx);\r\n  const { isThemeDark } = useContext(SettingsCtx);\r\n\r\n  const handleClick = () => dispatchSettings({ type: TOGGLE_THEME });\r\n  return (\r\n    <Tooltip title={label}>\r\n      <IconButton aria-label={label} color=\"inherit\" onClick={handleClick}>\r\n        {isThemeDark ? <WbSunnyIcon /> : <Brightness2Icon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nThemeToggle.defaultProps = defaultProps;\r\nexport default ThemeToggle;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ThemeToggle from \"../../components/ThemeToggle/ThemeToggle\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      \"& > *:not(:last-child)\": {\r\n        marginRight: theme.spacing(0.5)\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport type ToolbarButtonsProps = {\r\n  refresh?: JSX.Element;\r\n  favor?: JSX.Element;\r\n};\r\n\r\ntype Props = {} & ToolbarButtonsProps;\r\n\r\nconst ToolbarButtons = ({ refresh, favor }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {refresh}\r\n      {favor}\r\n      <ThemeToggle />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolbarButtons;\r\n","import React from \"react\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport DrawerToggle from \"../DrawerToggle/DrawerToggle\";\r\nimport ToolbarButtons, {\r\n  ToolbarButtonsProps\r\n} from \"../ToolbarButtons/ToolbarButtons\";\r\n\r\nimport { toolbarHeightMin } from \"../../constants\";\r\nimport { capitalizeFirstChar } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      \"& h1\": {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          fontSize: \"2rem\"\r\n        }\r\n      },\r\n      \"& .MuiIconButton-root\": {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          fontSize: \"1.5rem\"\r\n        }\r\n      }\r\n    },\r\n    toolbar: {\r\n      paddingRight: theme.spacing(1),\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: toolbarHeightMin\r\n      },\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        paddingRight: theme.spacing(2)\r\n      }\r\n    },\r\n    title: {\r\n      flexGrow: 1\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  search?: JSX.Element;\r\n  heading?: string;\r\n} & ToolbarButtonsProps;\r\n\r\nconst AppHeader = ({ heading, search, ...other }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar className={classes.root}>\r\n      <Toolbar\r\n        disableGutters\r\n        variant=\"dense\"\r\n        classes={{ root: classes.toolbar }}\r\n      >\r\n        <DrawerToggle />\r\n        <Typography variant=\"h1\" className={classes.title}>\r\n          {heading && capitalizeFirstChar(heading)}\r\n        </Typography>\r\n        {search}\r\n        <ToolbarButtons {...other} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport styles from \"./Spinner.module.scss\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: theme.palette.secondary.main,\r\n      fontSize: \"5.6rem\",\r\n      textIndent: \"-9999em\",\r\n      overflow: \"hidden\",\r\n      width: \"1em\",\r\n      height: \"1em\",\r\n      borderRadius: \"50%\",\r\n      margin: \"0.8em auto\"\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  className?: string;\r\n};\r\n\r\nconst Spinner = ({ className }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={clsx(styles.root, classes.root, className)}>Loading...</div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      alignSelf: \"center\",\r\n      width: \"25rem\",\r\n      \"& > svg\": {\r\n        fontSize: \"2rem\",\r\n        marginRight: theme.spacing(1)\r\n      }\r\n    },\r\n    errorBorder: {\r\n      padding: \"1em\",\r\n      boxShadow: `0 0 0 1px ${theme.palette.primary.contrastText}`\r\n    }\r\n  })\r\n);\r\n\r\nexport type ErrorProps = {\r\n  errorStyles?: string;\r\n  disableErrorBorder?: boolean;\r\n};\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n} & ErrorProps;\r\n\r\nconst Error = ({\r\n  children,\r\n  errorStyles,\r\n  disableErrorBorder = false\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        classes.root,\r\n        errorStyles,\r\n        !disableErrorBorder && classes.errorBorder\r\n      )}\r\n    >\r\n      <ErrorOutlineIcon />\r\n      <p>{children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Error, { ErrorProps } from \"../Error/Error\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  spinnerStyles?: string;\r\n  errorMessage: string;\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n  displayContent?: boolean;\r\n} & ErrorProps;\r\n\r\nconst DataLoader = ({\r\n  children,\r\n  spinnerStyles,\r\n  isLoading,\r\n  errorMessage,\r\n  isError,\r\n  displayContent = false,\r\n  ...other\r\n}: Props) => {\r\n  let rendered: React.ReactNode;\r\n  if (isLoading) {\r\n    rendered = <Spinner className={spinnerStyles} />;\r\n  } else {\r\n    if (displayContent && isError) {\r\n      rendered = (\r\n        <>\r\n          <Error {...other}>{errorMessage}</Error>\r\n          {children}\r\n        </>\r\n      );\r\n    } else if (isError) {\r\n      rendered = <Error {...other}>{errorMessage}</Error>;\r\n    } else {\r\n      rendered = children;\r\n    }\r\n  }\r\n\r\n  return <>{rendered}</>;\r\n};\r\n\r\nexport default DataLoader;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppHeader from \"../../components/AppHeader/AppHeader\";\r\nimport DataLoader from \"../../components/DataLoader/DataLoader\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      width: \"100%\",\r\n      marginTop: \"1rem\",\r\n      \"& form\": {\r\n        marginRight: \"0\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport type WelcomeProps = {\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n};\r\n\r\ntype Props = {\r\n  search: JSX.Element;\r\n} & WelcomeProps;\r\n\r\nconst Welcome = ({ search, isLoading, isError }: Props) => {\r\n  const classes = useStyles();\r\n  // console.log(\"welcome\");\r\n  return (\r\n    <>\r\n      <AppHeader heading={APP_STRUCTURE.forecast} />\r\n      <DataLoader\r\n        isLoading={isLoading}\r\n        isError={isError}\r\n        displayContent\r\n        errorMessage={`We couldn't find your city automatically,\r\n         you can still look for it manually.`}\r\n      >\r\n        <div className={classes.root}>{search}</div>\r\n      </DataLoader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      fontWeight: \"lighter\",\r\n      position: \"relative\",\r\n      letterSpacing: \"0px\",\r\n      // paddingRight: theme.spacing(2.5),\r\n      paddingRight: theme.spacing(4.5),\r\n      fontSize: \"3rem\",\r\n      lineHeight: \"0.85em\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        fontSize: \"5rem\",\r\n        paddingRight: theme.spacing(7.5)\r\n      },\r\n      \"& span\": {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        right: \"0\",\r\n        fontSize: \"0.7em\",\r\n        lineHeight: \"0.9em\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n  temperature: number;\r\n};\r\n\r\nconst Temperature = ({ children, className, temperature }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <p className={clsx(classes.root, className)}>\r\n      {temperature}\r\n      <span>&deg;{children}</span>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Temperature from \"../Temperature/Temperature\";\r\nimport { ICurrentWeather } from \"../../types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"0 auto\",\r\n      textAlign: \"center\",\r\n      maxWidth: \"28rem\",\r\n      \"& > div\": {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginBottom: theme.spacing(0.5)\r\n      },\r\n      \"& > p:first-of-type\": {\r\n        fontWeight: \"lighter\",\r\n        fontSize: \"1rem\",\r\n        marginBottom: theme.spacing(0.5),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          fontSize: \"1.5rem\"\r\n        }\r\n      },\r\n      \"& ul\": {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n        \"& li:not(:last-child)\": {\r\n          marginRight: \"1em\"\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      marginLeft: \"1em\",\r\n      \"& button\": {\r\n        border: \"1px solid orange\",\r\n        fontSize: \"1.2rem\",\r\n        padding: \"0.3em\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  data: ICurrentWeather;\r\n  timer: JSX.Element;\r\n};\r\n\r\nconst CurrentWeather = ({ data, timer }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section className={classes.root}>\r\n      <Typography variant=\"h2\">\r\n        {data.city}, {data.country}\r\n      </Typography>\r\n      <div>\r\n        <Temperature temperature={data.temperature}>C</Temperature>\r\n        {/* <div className={classes.scales}>\r\n              <IconButton aria-label=\"Convert to celsius\" color=\"inherit\">\r\n                C\r\n              </IconButton>\r\n              <IconButton aria-label=\"Convert to fahrenheit\" color=\"inherit\">\r\n                F\r\n              </IconButton>\r\n            </div> */}\r\n      </div>\r\n      <p>{data.condition}</p>\r\n      {timer}\r\n      <ul>\r\n        <li>Cloudiness: {data.cloudiness}%</li>\r\n        <li>Wind: {data.windSpeed} m/s</li>\r\n        <li>Visibility: {data.visibility} km</li>\r\n        <li>Pressure: {data.pressure} mb</li>\r\n        <li>Humidity: {data.humidity}%</li>\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { SettingsDispatchCtx, SettingsCtx } from \"../../contexts\";\r\nimport { ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES } from \"../../actions\";\r\n\r\nexport type FavorProps = {\r\n  lastLocation: string;\r\n};\r\n\r\ntype Props = {} & FavorProps;\r\n\r\nconst Favor = ({ lastLocation }: Props) => {\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const dispatchSettings = useContext(SettingsDispatchCtx);\r\n  const { favorites } = useContext(SettingsCtx);\r\n\r\n  const addToFavorites = () => {\r\n    dispatchSettings({ type: ADD_TO_FAVORITES, location: lastLocation });\r\n  };\r\n\r\n  const removeFromFavorites = () => {\r\n    dispatchSettings({ type: REMOVE_FROM_FAVORITES, location: lastLocation });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsFavorite(favorites.includes(lastLocation));\r\n  }, [favorites, lastLocation]);\r\n\r\n  const label = isFavorite ? \"Remove from Favorites\" : \"Add to Favorites\";\r\n  // console.log(lastLocation, favorites);\r\n  return (\r\n    <Tooltip title={label}>\r\n      <IconButton\r\n        aria-label={label}\r\n        color=\"inherit\"\r\n        onClick={isFavorite ? removeFromFavorites : addToFavorites}\r\n      >\r\n        {isFavorite ? <StarIcon /> : <StarBorderIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Favor;\r\n","import React from \"react\";\r\nimport { TSetBoolean } from \"../types\";\r\n\r\nconst useTimer = (\r\n  expirationTimeframe: number,\r\n  setRefreshIsDisabled: TSetBoolean\r\n) => {\r\n  const [timer, setTimer] = React.useState(expirationTimeframe);\r\n\r\n  React.useEffect(() => {\r\n    if (expirationTimeframe >= 1000) {\r\n      // console.log(\"test\");\r\n      setTimer(expirationTimeframe);\r\n      setRefreshIsDisabled(true);\r\n    }\r\n  }, [expirationTimeframe, setRefreshIsDisabled]);\r\n\r\n  React.useEffect(() => {\r\n    const timerTimeout = setTimeout(() => {\r\n      if (timer >= 1000) {\r\n        setTimer(timer => timer - 1000);\r\n        // console.log(\"count\");\r\n      } else {\r\n        setRefreshIsDisabled(false);\r\n        // console.log(\"end\");\r\n      }\r\n      // console.log(\"timer\");\r\n    }, 1000);\r\n    return () => clearTimeout(timerTimeout);\r\n  }, [timer, setRefreshIsDisabled]);\r\n\r\n  // console.log(expirationTimeframe, timer);\r\n  return timer;\r\n};\r\n\r\nexport default useTimer;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { getRemainingTime, getReadableRequestTime } from \"../../utils\";\r\nimport { TSetBoolean } from \"../../types\";\r\nimport useTimer from \"../../hooks/useTimer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      fontSize: \"0.8rem\",\r\n      marginBottom: theme.spacing(1.5),\r\n      \"&\": {\r\n        fontWeight: \"500\"\r\n      },\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        fontSize: \"0.9rem\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  expirationTimeframe: number;\r\n  setRefreshIsDisabled: TSetBoolean;\r\n  requestTime: number;\r\n};\r\n\r\nconst Timer = ({\r\n  expirationTimeframe,\r\n  setRefreshIsDisabled,\r\n  requestTime\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  const timer = useTimer(expirationTimeframe, setRefreshIsDisabled);\r\n\r\n  return (\r\n    <p className={classes.root}>\r\n      Updated as of {getReadableRequestTime(requestTime)}. Refresh{\" \"}\r\n      {timer >= 1000\r\n        ? `will be available in: ${getRemainingTime(timer)}`\r\n        : \"is available!\"}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n  disabled: boolean;\r\n} & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n  label: \"Refresh\"\r\n};\r\n\r\nconst Refresh = ({ label, ...other }: Props) => {\r\n  return (\r\n    <Tooltip title={label}>\r\n      <span>\r\n        <IconButton aria-label={label} color=\"inherit\" {...other}>\r\n          <RefreshIcon />\r\n        </IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nRefresh.defaultProps = defaultProps;\r\nexport default Refresh;\r\n","import React, { useState } from \"react\";\r\nimport Refresh from \"../components/Refresh/Refresh\";\r\n\r\nconst useRefresh = (isDataFetched: boolean, onClick: () => void) => {\r\n  const [refreshIsDisabled, setRefreshIsDisabled] = useState(true);\r\n  const refresh = <Refresh onClick={onClick} disabled={refreshIsDisabled} />;\r\n  if (isDataFetched) {\r\n    return [setRefreshIsDisabled, refresh] as const;\r\n  } else {\r\n    return [setRefreshIsDisabled] as const;\r\n  }\r\n};\r\n\r\nexport default useRefresh;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport CurrentWeather from \"../../components/CurrentWeather/CurrentWeather\";\r\nimport AppHeader from \"../../components/AppHeader/AppHeader\";\r\nimport DataLoader from \"../../components/DataLoader/DataLoader\";\r\nimport Favor, { FavorProps } from \"../../components/Favor/Favor\";\r\nimport Timer from \"../../components/Timer/Timer\";\r\nimport { getExpirationTimeframe } from \"../../utils\";\r\nimport useRefresh from \"../../hooks/useRefresh\";\r\nimport { State as SUseFetch } from \"../../hooks/useFetch\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\nimport { TGetData, IForecast } from \"../../types\";\r\nimport { capitalizeFirstChar } from \"../../utils\";\r\n\r\ntype Props = {\r\n  getForecast: TGetData;\r\n  forecast: SUseFetch<IForecast>;\r\n  search: JSX.Element;\r\n} & FavorProps;\r\n\r\nconst Forecast = ({ lastLocation, search, forecast, getForecast }: Props) => {\r\n  const { data, isLoading, isError } = forecast;\r\n  const [setRefreshIsDisabled, refresh] = useRefresh(!!data, () =>\r\n    getForecast(lastLocation)\r\n  );\r\n  const favor = data ? <Favor lastLocation={lastLocation} /> : undefined;\r\n\r\n  useEffect(() => {\r\n    getForecast(lastLocation);\r\n  }, [getForecast, lastLocation]);\r\n\r\n  // console.log(\"forecast\");\r\n  return (\r\n    <>\r\n      <AppHeader\r\n        heading={APP_STRUCTURE.forecast}\r\n        refresh={refresh}\r\n        favor={favor}\r\n        search={search}\r\n      />\r\n      <DataLoader\r\n        isLoading={isLoading}\r\n        isError={isError}\r\n        errorMessage={`We couldn't find ${capitalizeFirstChar(\r\n          lastLocation\r\n        )}. Please, check if the name is correct or try again later.`}\r\n      >\r\n        {data && (\r\n          <CurrentWeather\r\n            data={data.currentWeather}\r\n            timer={\r\n              <Timer\r\n                expirationTimeframe={getExpirationTimeframe(data.requestTime)}\r\n                setRefreshIsDisabled={setRefreshIsDisabled}\r\n                requestTime={data.requestTime}\r\n              />\r\n            }\r\n          />\r\n        )}\r\n      </DataLoader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { TFormEvent } from \"../../types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      display: \"flex\",\r\n      boxShadow: `0 0 0 1px ${theme.palette.primary.contrastText}`\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  onSubmit?: TFormEvent;\r\n};\r\n\r\nconst Form = ({ children, className, onSubmit }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <form className={clsx(classes.root, className)} onSubmit={onSubmit}>\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { forwardRef } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { TButton } from \"../../types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginLeft: \"3px\"\r\n    }\r\n  })\r\n);\r\n\r\nexport type InputButtonProps = {\r\n  label: string;\r\n  type?: \"submit\";\r\n  onClick?: () => void;\r\n};\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n} & InputButtonProps;\r\n\r\nconst InputButton = forwardRef<TButton, Props>(\r\n  ({ children, label, ...other }, ref) => {\r\n    const classes = useStyles();\r\n    return (\r\n      <Tooltip title={label}>\r\n        <IconButton\r\n          aria-label={label}\r\n          color=\"inherit\"\r\n          ref={ref}\r\n          {...other}\r\n          className={classes.root}\r\n        >\r\n          {children}\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  }\r\n);\r\n\r\nexport default InputButton;\r\n","import React, { forwardRef } from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputButton, { InputButtonProps } from \"../InputButton/InputButton\";\r\nimport { TButton } from \"../../types\";\r\n\r\ntype Props = {} & InputButtonProps;\r\n\r\nconst SearchButton = forwardRef<TButton, Props>(function SearchButton(\r\n  { ...other },\r\n  ref\r\n) {\r\n  return (\r\n    <InputButton ref={ref} {...other}>\r\n      <SearchIcon />\r\n    </InputButton>\r\n  );\r\n});\r\n\r\nexport default SearchButton;\r\n","import React, { forwardRef } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { TInput, TChangeInput } from \"../../types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: theme.palette.primary.contrastText,\r\n      backgroundColor: \"transparent\",\r\n      border: \"none\",\r\n      fontSize: \"0.9rem\",\r\n      padding: \"1em 0.8em\",\r\n      width: \"100%\",\r\n      \"&:focus\": {\r\n        boxShadow: `0 0 0 .2rem ${theme.palette.action.active}`\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport type InputFieldProps = {\r\n  value?: string;\r\n  name?: string;\r\n  onBlur?: () => void;\r\n};\r\n\r\ntype Props = {\r\n  placeholder: string;\r\n  type?: \"text\" | \"search\";\r\n  onChange?: TChangeInput;\r\n} & InputFieldProps;\r\n\r\nconst InputField = forwardRef<TInput, Props>(function InputField(\r\n  { value, name, type = \"text\", onBlur, onChange, placeholder },\r\n  ref\r\n) {\r\n  const classes = useStyles();\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      value={value}\r\n      name={name}\r\n      onChange={onChange}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      onBlur={onBlur}\r\n      className={classes.root}\r\n    />\r\n  );\r\n});\r\n\r\nexport default InputField;\r\n","import React, { forwardRef } from \"react\";\r\nimport InputField, { InputFieldProps } from \"../InputField/InputField\";\r\nimport { TSetString, TInput, TChangeInput } from \"../../types\";\r\n\r\ntype Props = {\r\n  setSearchQuery: TSetString;\r\n} & InputFieldProps;\r\n\r\nconst SearchField = forwardRef<TInput, Props>(function SearchField(\r\n  { setSearchQuery, ...other },\r\n  ref\r\n) {\r\n  const handleChange: TChangeInput = event => {\r\n    const query = event.currentTarget.value;\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  return (\r\n    <InputField\r\n      ref={ref}\r\n      type=\"search\"\r\n      placeholder=\"Search\"\r\n      onChange={handleChange}\r\n      {...other}\r\n    />\r\n  );\r\n});\r\n\r\nexport default SearchField;\r\n","import React, { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { TGetData } from \"../../types\";\r\nimport { WindowWidthCtx, SettingsDispatchCtx } from \"../../contexts\";\r\nimport Form from \"../Form/Form\";\r\nimport SearchButton from \"../SearchButton/SearchButton\";\r\nimport SearchField from \"../SearchField/SearchField\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { SET_LAST_LOCATION } from \"../../actions\";\r\nimport { TFormEvent } from \"../../types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      right: \"15px\",\r\n      zIndex: 1,\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        position: \"static\",\r\n        marginRight: theme.spacing(1.5),\r\n        transform: \"none\",\r\n        zIndex: \"auto\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport type SearchProps = {\r\n  lastLocation: string | null;\r\n};\r\n\r\ntype Props = {\r\n  getData: TGetData;\r\n} & SearchProps;\r\n\r\nconst Search = ({ lastLocation, getData }: Props) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchIsShown, setSearchIsShown] = useState(false);\r\n  const windowWidth = useContext(WindowWidthCtx);\r\n  const showSearchBtn = useRef<HTMLButtonElement>(null);\r\n  const searchFieldRef = useRef<HTMLInputElement>(null);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const dispatchSettings = useContext(SettingsDispatchCtx);\r\n\r\n  const breakpointMD = theme.breakpoints.values.md;\r\n\r\n  const handleSubmit: TFormEvent = event => {\r\n    event.preventDefault();\r\n    const query = searchQuery.trim().toLowerCase();\r\n    if (query) {\r\n      setSearchQuery(\"\");\r\n      if (query === lastLocation) {\r\n        getData(query);\r\n      } else {\r\n        dispatchSettings({ type: SET_LAST_LOCATION, lastLocation: query });\r\n      }\r\n    }\r\n    if (windowWidth < breakpointMD && showSearchBtn.current) {\r\n      setSearchIsShown(false);\r\n      showSearchBtn.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => setSearchIsShown(false);\r\n\r\n  useEffect(() => {\r\n    if (windowWidth < breakpointMD && searchFieldRef.current) {\r\n      searchFieldRef.current.focus();\r\n    }\r\n  }, [breakpointMD, searchIsShown, windowWidth]);\r\n\r\n  const composeSearch = (onBlur?: () => void) => (\r\n    <Form className={classes.root} onSubmit={handleSubmit}>\r\n      <SearchField\r\n        ref={searchFieldRef}\r\n        value={searchQuery}\r\n        onBlur={onBlur}\r\n        setSearchQuery={setSearchQuery}\r\n      />\r\n      {windowWidth >= breakpointMD && (\r\n        <SearchButton label=\"Search\" type=\"submit\" />\r\n      )}\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {windowWidth >= breakpointMD ? (\r\n        composeSearch()\r\n      ) : (\r\n        <>\r\n          {searchIsShown && composeSearch(handleBlur)}\r\n          <SearchButton\r\n            ref={showSearchBtn}\r\n            label=\"Show search\"\r\n            onClick={() => setSearchIsShown(true)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useReducer, Reducer } from \"react\";\r\nimport { FETCH_INIT, FETCH_FAILURE, FETCH_SUCCESS } from \"../actions\";\r\n\r\nexport type State<T> = {\r\n  data: T | null;\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n};\r\n\r\nexport type Action<T> =\r\n  | { type: FETCH_INIT }\r\n  | { type: FETCH_SUCCESS; data: T }\r\n  | { type: FETCH_FAILURE };\r\n\r\nfunction useFetch<T>() {\r\n  return useReducer<Reducer<State<T>, Action<T>>>(reducer, {\r\n    data: null,\r\n    isLoading: false,\r\n    isError: false\r\n  });\r\n}\r\n\r\nfunction reducer<T>(state: State<T>, action: Action<T>): State<T> {\r\n  switch (action.type) {\r\n    case FETCH_INIT: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false\r\n      };\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      const { data } = action;\r\n      return {\r\n        ...state,\r\n        data,\r\n        isLoading: false\r\n      };\r\n    }\r\n    case FETCH_FAILURE: {\r\n      return {\r\n        ...state,\r\n        data: null,\r\n        isLoading: false,\r\n        isError: true\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default useFetch;\r\n","import { useEffect, useCallback } from \"react\";\r\nimport { fetchForecast, checkIfExpired, removeExpiredWeather } from \"../utils\";\r\nimport { FETCH_INIT, FETCH_SUCCESS, FETCH_FAILURE } from \"../actions\";\r\nimport { IForecast } from \"../types\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst useWeatherApi = (lastLocation?: string) => {\r\n  const [state, dispatch] = useFetch<IForecast>();\r\n\r\n  const getForecast = useCallback(\r\n    async (location: string) => {\r\n      dispatch({ type: FETCH_INIT });\r\n      removeExpiredWeather(location);\r\n      const storedForecast = localStorage.getItem(\r\n        `weather_forecast_${location}`\r\n      );\r\n      let forecast: IForecast | null;\r\n      if (storedForecast) {\r\n        const { requestTime } = JSON.parse(storedForecast);\r\n        if (checkIfExpired(requestTime)) {\r\n          forecast = await fetchForecast(location);\r\n        } else {\r\n          forecast = JSON.parse(storedForecast);\r\n        }\r\n      } else {\r\n        forecast = await fetchForecast(location);\r\n      }\r\n      if (forecast) {\r\n        dispatch({ type: FETCH_SUCCESS, data: forecast });\r\n      } else {\r\n        dispatch({ type: FETCH_FAILURE });\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n  useEffect(() => {\r\n    lastLocation && getForecast(lastLocation);\r\n  }, [dispatch, getForecast, lastLocation]);\r\n\r\n  return [state, getForecast] as const;\r\n};\r\n\r\nexport default useWeatherApi;\r\n","import React from \"react\";\r\nimport Welcome, { WelcomeProps } from \"../../containers/Welcome/Welcome\";\r\nimport Forecast from \"../../containers/Forecast/Forecast\";\r\nimport Search, { SearchProps } from \"../../components/Search/Search\";\r\nimport useWeatherApi from \"../../hooks/useWeatherApi\";\r\n\r\ntype Props = {} & WelcomeProps & SearchProps;\r\n\r\nconst FrontPage = ({ lastLocation, ...other }: Props) => {\r\n  const [forecast, getForecast] = useWeatherApi();\r\n\r\n  const search = <Search lastLocation={lastLocation} getData={getForecast} />;\r\n\r\n  // console.log(\"front\");\r\n  return lastLocation ? (\r\n    <Forecast\r\n      lastLocation={lastLocation}\r\n      forecast={forecast}\r\n      getForecast={getForecast}\r\n      search={search}\r\n    />\r\n  ) : (\r\n    <Welcome search={search} {...other} />\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > a:focus\": {\r\n        outline: \"none\"\r\n      },\r\n      \"& > button, & > a\": {\r\n        border: `0.25rem solid ${theme.palette.secondary.main}`,\r\n        transition: \"all 0.1s ease-in-out\",\r\n        \"&:focus\": {\r\n          boxShadow: `0 0 0 0.25rem ${theme.palette.text.primary}`\r\n        },\r\n        \"&:hover\": {\r\n          outline: `0.25rem solid ${theme.palette.grey[500]}`\r\n        }\r\n      }\r\n    },\r\n    link: {\r\n      display: \"flex\"\r\n    },\r\n    box: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      color: theme.palette.secondary.contrastText,\r\n      padding: theme.spacing(1),\r\n      minHeight: \"6.5rem\",\r\n      minWidth: \"8rem\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        minHeight: \"8.5rem\",\r\n        minWidth: \"13rem\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  className?: string;\r\n  linkStyles?: string;\r\n  boxStyles?: string;\r\n  children: React.ReactNode;\r\n  tooltip: string;\r\n  to: string;\r\n  extra?: React.ReactNode;\r\n  onClick?: () => void;\r\n};\r\n\r\nconst LinkBox = ({\r\n  children,\r\n  tooltip,\r\n  linkStyles,\r\n  boxStyles,\r\n  to,\r\n  extra,\r\n  onClick\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tooltip title={tooltip}>\r\n        <Link\r\n          to={to}\r\n          onClick={onClick}\r\n          className={clsx(classes.link, linkStyles)}\r\n        >\r\n          <div className={clsx(classes.box, boxStyles)}>{children}</div>\r\n        </Link>\r\n      </Tooltip>\r\n      {extra}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkBox;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport Temperature from \"../../components/Temperature/Temperature\";\r\nimport DataLoader from \"../../components/DataLoader/DataLoader\";\r\nimport LinkBox from \"../LinkBox/LinkBox\";\r\nimport useWeatherApi from \"../../hooks/useWeatherApi\";\r\nimport { SettingsDispatchCtx } from \"../../contexts\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\nimport { SET_LAST_LOCATION } from \"../../actions\";\r\nimport { capitalizeFirstChar } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    link: {\r\n      marginRight: \"0.25rem\"\r\n    },\r\n    group: {\r\n      display: \"flex\",\r\n      \"& > p:first-child\": {\r\n        fontSize: \"2.5rem\",\r\n        fontWeight: \"lighter\",\r\n        paddingRight: theme.spacing(2.5),\r\n        paddingBottom: theme.spacing(1),\r\n        \"& span\": {\r\n          fontSize: \"0.4em\",\r\n          lineHeight: \"2.6em\"\r\n        }\r\n      }\r\n    },\r\n    spinner: {\r\n      color: theme.palette.common.white,\r\n      fontSize: \"2.2rem\"\r\n    },\r\n    error: {\r\n      width: \"16rem\"\r\n    }\r\n  })\r\n);\r\n\r\nexport type WeatherBoxProps = {\r\n  location: string;\r\n};\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n} & WeatherBoxProps;\r\n\r\nconst WeatherBox = ({ location, children }: Props) => {\r\n  const classes = useStyles();\r\n  const [{ data, isLoading, isError }] = useWeatherApi(location);\r\n  const dispatchSettings = useContext(SettingsDispatchCtx);\r\n\r\n  const setLastLocation = () => {\r\n    dispatchSettings({ type: SET_LAST_LOCATION, lastLocation: location });\r\n  };\r\n\r\n  return (\r\n    <LinkBox\r\n      tooltip=\"Go to Forecast\"\r\n      to={`${APP_STRUCTURE.forecast}`}\r\n      onClick={setLastLocation}\r\n      linkStyles={classes.link}\r\n      extra={children}\r\n    >\r\n      <DataLoader\r\n        spinnerStyles={classes.spinner}\r\n        errorStyles={classes.error}\r\n        isLoading={isLoading}\r\n        isError={isError}\r\n        errorMessage={`We couldn't find ${capitalizeFirstChar(\r\n          location\r\n        )}. Please, check if the name is correct or try again later.`}\r\n        disableErrorBorder\r\n      >\r\n        {data && (\r\n          <>\r\n            <Typography variant=\"h3\">\r\n              {data.currentWeather.city}, {data.currentWeather.country}\r\n            </Typography>\r\n            <div className={classes.group}>\r\n              <Temperature temperature={data.currentWeather.temperature}>\r\n                C\r\n              </Temperature>\r\n            </div>\r\n            <p>{data.currentWeather.condition}</p>\r\n          </>\r\n        )}\r\n      </DataLoader>\r\n    </LinkBox>\r\n  );\r\n};\r\n\r\nexport default WeatherBox;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport WeatherBox, { WeatherBoxProps } from \"../WeatherBox/WeatherBox\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    link: {\r\n      fontSize: \"1.5rem\",\r\n      padding: \"0.5em\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      color: theme.palette.text.primary\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {} & WeatherBoxProps;\r\n\r\nconst LaunchLocation = ({ ...other }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <WeatherBox {...other}>\r\n      <Tooltip title=\"Change Launch Location\">\r\n        <Link to={`${APP_STRUCTURE.settings}`} className={classes.link}>\r\n          <EditIcon />\r\n        </Link>\r\n      </Tooltip>\r\n    </WeatherBox>\r\n  );\r\n};\r\n\r\nexport default LaunchLocation;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport LinkBox from \"../LinkBox/LinkBox\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    box: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"\r\n    },\r\n    icon: {\r\n      fontSize: \"6.5rem\"\r\n    }\r\n  })\r\n);\r\n\r\nconst AddLocationBox = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <LinkBox\r\n      tooltip=\"Add Location\"\r\n      to={APP_STRUCTURE.settings}\r\n      boxStyles={classes.box}\r\n    >\r\n      <AddIcon className={classes.icon} />\r\n    </LinkBox>\r\n  );\r\n};\r\n\r\nexport default AddLocationBox;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport WeatherBox, { WeatherBoxProps } from \"../WeatherBox/WeatherBox\";\r\nimport { REMOVE_FROM_FAVORITES } from \"../../actions\";\r\nimport { SettingsDispatchCtx } from \"../../contexts\";\r\n\r\ntype Props = {} & WeatherBoxProps & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n  label: \"Remove from Favorites\"\r\n};\r\n\r\nconst FavoritePlace = ({ label, location }: Props) => {\r\n  const dispatchSettings = useContext(SettingsDispatchCtx);\r\n\r\n  const handleClick = () => {\r\n    dispatchSettings({ type: REMOVE_FROM_FAVORITES, location });\r\n  };\r\n\r\n  return (\r\n    <WeatherBox location={location}>\r\n      <Tooltip title={label}>\r\n        <IconButton aria-label={label} color=\"inherit\" onClick={handleClick}>\r\n          <ClearIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </WeatherBox>\r\n  );\r\n};\r\n\r\nFavoritePlace.defaultProps = defaultProps;\r\nexport default FavoritePlace;\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport AppHeader from \"../../components/AppHeader/AppHeader\";\r\nimport LaunchLocation from \"../../components/LaunchLocation/LaunchLocation\";\r\nimport AddLocationBox from \"../../components/AddLocationBox/AddLocationBox\";\r\nimport FavoriteLocation from \"../../components/FavoriteLocation/FavoriteLocation\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& section:not(:last-child)\": {\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          marginBottom: theme.spacing(4)\r\n        }\r\n      }\r\n    },\r\n    favorites: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      \"& > div\": {\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          marginBottom: theme.spacing(3)\r\n        }\r\n      },\r\n      \"& > div:not(:last-child)\": {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          marginBottom: theme.spacing(3)\r\n        }\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  launchLocation: string | null;\r\n  favorites: string[];\r\n};\r\n\r\nconst Favorites = ({ launchLocation, favorites }: Props) => {\r\n  const classes = useStyles();\r\n  // console.log(\"favorites\");\r\n  return (\r\n    <>\r\n      <AppHeader heading={APP_STRUCTURE.favorites} />\r\n      <div className={classes.root}>\r\n        <section>\r\n          <Typography variant=\"h2\">Launch Location</Typography>\r\n          {launchLocation ? (\r\n            <LaunchLocation location={launchLocation} />\r\n          ) : (\r\n            <AddLocationBox />\r\n          )}\r\n        </section>\r\n        {favorites.length > 0 && (\r\n          <section>\r\n            <Typography variant=\"h2\">Favorite Places</Typography>\r\n            <div className={classes.favorites}>\r\n              {favorites.map(location => (\r\n                <FavoriteLocation key={location} location={location} />\r\n              ))}\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ntype Props = {\r\n  heading: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst Setting = ({ heading, children }: Props) => {\r\n  return (\r\n    <section>\r\n      <Typography variant=\"h3\">{heading}</Typography>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","import React, { useContext } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport Form from \"../../components/Form/Form\";\r\nimport InputField from \"../../components/InputField/InputField\";\r\nimport InputButton from \"../../components/InputButton/InputButton\";\r\nimport Setting from \"../../components/Setting/Setting\";\r\n\r\nimport { TFormEvent } from \"../../types\";\r\nimport { FETCH_SUCCESS, SET_LAST_LOCATION } from \"../../actions\";\r\nimport { LOCAL_STORAGE } from \"../../constants\";\r\nimport { Action as FetchAction } from \"../../hooks/useFetch\";\r\nimport { SettingsDispatchCtx } from \"../../contexts\";\r\nimport { capitalizeFirstChar } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: \"16rem\"\r\n    }\r\n  })\r\n);\r\n\r\nexport type LaunchLocationSettingProps = {\r\n  dispatchFetch: React.Dispatch<FetchAction<string>>;\r\n  launchLocation: string | null;\r\n};\r\n\r\ntype Props = {} & LaunchLocationSettingProps;\r\n\r\nconst LaunchLocationSetting = ({ launchLocation, dispatchFetch }: Props) => {\r\n  const classes = useStyles();\r\n  const dispatchSettings = useContext(SettingsDispatchCtx);\r\n\r\n  const handleSubmit: TFormEvent = event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const launchLocation = form.launchLocation.value.trim().toLowerCase();\r\n    if (launchLocation) {\r\n      localStorage.setItem(LOCAL_STORAGE.launchLocation, launchLocation);\r\n      dispatchFetch({ type: FETCH_SUCCESS, data: launchLocation });\r\n      dispatchSettings({\r\n        type: SET_LAST_LOCATION,\r\n        lastLocation: launchLocation\r\n      });\r\n      event.currentTarget.reset();\r\n    }\r\n  };\r\n\r\n  let heading = `Launch Location`;\r\n  if (launchLocation) heading += `: ${capitalizeFirstChar(launchLocation)}`;\r\n  return (\r\n    <Setting heading={heading}>\r\n      <Form onSubmit={event => handleSubmit(event)} className={classes.root}>\r\n        <InputField name=\"launchLocation\" placeholder=\"New Launch Location\" />\r\n        <InputButton label=\"Submit\" type=\"submit\">\r\n          <EditIcon />\r\n        </InputButton>\r\n      </Form>\r\n    </Setting>\r\n  );\r\n};\r\n\r\nexport default LaunchLocationSetting;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport AppHeader from \"../../components/AppHeader/AppHeader\";\r\nimport LaunchLocationSetting, {\r\n  LaunchLocationSettingProps\r\n} from \"../../components/LaunchLocationSetting/LaunchLocationSetting\";\r\n// import ThemeSetting from \"../../components/ThemeSetting/ThemeSetting\";\r\nimport { APP_STRUCTURE } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      \"& > section\": {\r\n        marginTop: theme.spacing(3)\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {} & LaunchLocationSettingProps;\r\n\r\nconst Settings = ({ ...other }: Props) => {\r\n  const classes = useStyles();\r\n  // console.log(\"settings\");\r\n  return (\r\n    <>\r\n      <AppHeader heading={APP_STRUCTURE.settings} />\r\n      <section className={classes.root}>\r\n        <Typography variant=\"h2\">Options</Typography>\r\n        <LaunchLocationSetting {...other} />\r\n        {/* <ThemeSetting /> */}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { useEffect, Dispatch, useCallback } from \"react\";\r\nimport {\r\n  FETCH_INIT,\r\n  FETCH_SUCCESS,\r\n  FETCH_FAILURE,\r\n  SET_LAST_LOCATION\r\n} from \"../actions\";\r\nimport useFetch from \"./useFetch\";\r\nimport { getLaunchLocation } from \"../utils\";\r\nimport { Action as SettingsAction } from \"../hooks/useSettings\";\r\n\r\nconst useGeoLocationApi = (dispatchSettings: Dispatch<SettingsAction>) => {\r\n  const [state, dispatchFetch] = useFetch<string>();\r\n  // console.log(state)\r\n\r\n  const setLocations = useCallback(\r\n    (launchLocation: string) => {\r\n      dispatchSettings({\r\n        type: SET_LAST_LOCATION,\r\n        lastLocation: launchLocation\r\n      });\r\n      dispatchFetch({ type: FETCH_SUCCESS, data: launchLocation });\r\n    },\r\n    [dispatchFetch, dispatchSettings]\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let launchLocation = localStorage.getItem(\"launch_location\");\r\n      if (launchLocation) {\r\n        setLocations(launchLocation);\r\n      } else {\r\n        dispatchFetch({ type: FETCH_INIT });\r\n        launchLocation = await getLaunchLocation();\r\n        if (launchLocation) {\r\n          setLocations(launchLocation);\r\n        } else {\r\n          dispatchFetch({ type: FETCH_FAILURE });\r\n        }\r\n      }\r\n    })();\r\n  }, [dispatchFetch, setLocations]);\r\n  return [state, dispatchFetch] as const;\r\n};\r\n\r\nexport default useGeoLocationApi;\r\n","import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport FrontPage from \"../../containers/FrontPage/FrontPage\";\r\nimport Favorites from \"../../containers/Favorites/Favorites\";\r\nimport Settings from \"../../containers/Settings/Settings\";\r\n\r\nimport {\r\n  APP_STRUCTURE,\r\n  TOOLBAR_HEIGHT,\r\n  toolbarHeightMin\r\n} from \"../../constants\";\r\nimport useGeoLocationApi from \"../../hooks/useGeoLocationApi\";\r\nimport { SettingsDispatchCtx, SettingsCtx } from \"../../contexts\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"flex-start\",\r\n      flexGrow: 1,\r\n      marginTop: toolbarHeightMin,\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginTop: TOOLBAR_HEIGHT,\r\n        padding: theme.spacing(4, 6)\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AppMain = () => {\r\n  const classes = useStyles();\r\n  const dispatchSettings = useContext(SettingsDispatchCtx);\r\n  const { lastLocation, favorites } = useContext(SettingsCtx);\r\n  const [\r\n    { data: launchLocation, isLoading, isError },\r\n    dispatchFetch\r\n  ] = useGeoLocationApi(dispatchSettings);\r\n\r\n  // console.log('main', launchLocation, lastLocation);\r\n  return (\r\n    <main className={classes.root}>\r\n      <Switch>\r\n        <Route path={`/${APP_STRUCTURE.forecast}`}>\r\n          <FrontPage\r\n            lastLocation={lastLocation}\r\n            isLoading={isLoading}\r\n            isError={isError}\r\n          />\r\n        </Route>\r\n        <Route path={`/${APP_STRUCTURE.favorites}`}>\r\n          <Favorites launchLocation={launchLocation} favorites={favorites} />\r\n        </Route>\r\n        <Route path={`/${APP_STRUCTURE.settings}`}>\r\n          <Settings\r\n            launchLocation={launchLocation}\r\n            dispatchFetch={dispatchFetch}\r\n          />\r\n        </Route>\r\n        <Route path={`/`}>\r\n          <Redirect to={`/${APP_STRUCTURE.forecast}`} />\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AppMain;\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppDrawer from \"../../components/AppDrawer/AppDrawer\";\r\nimport AppContent from \"../../components/AppContent/AppContent\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& h2\": {\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          fontSize: \"2rem\"\r\n        }\r\n      },\r\n      \"& h3\": {\r\n        marginBottom: theme.spacing(1.5),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          fontSize: \"1.5rem\"\r\n        }\r\n      },\r\n      \"& button\": {\r\n        \"&:focus\": {\r\n          backgroundColor: theme.palette.action.selected\r\n        },\r\n        \"&:hover\": {\r\n          backgroundColor: theme.palette.action.hover\r\n        },\r\n        \"&:active\": {\r\n          backgroundColor: theme.palette.action.active,\r\n          color: theme.palette.primary.main\r\n        }\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst Page = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppDrawer />\r\n      <AppContent />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport {\r\n  LIST_ITEM_GUTTER_SIZE,\r\n  TOOLBAR_HEIGHT,\r\n  SVG_ICON_FONT_SIZE,\r\n  listItemIconMinWidth,\r\n  listItemLeftGutterSize,\r\n  SCALING_FACTOR\r\n} from \"./constants\";\r\n\r\nconst baseTheme = {\r\n  pallete: {\r\n    secondary: {\r\n      main: blue[700]\r\n    }\r\n  },\r\n  props: {\r\n    MuiAppBar: {\r\n      elevation: 0\r\n    },\r\n    MuiButtonBase: {\r\n      disableRipple: true\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paperAnchorDockedLeft: {\r\n        borderRight: 0\r\n      }\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        borderRadius: \"0\",\r\n        fontSize: \"1rem\",\r\n        padding: \"0.5em\"\r\n      }\r\n    },\r\n    MuiListItem: {\r\n      gutters: {\r\n        paddingLeft: listItemLeftGutterSize,\r\n        paddingRight: LIST_ITEM_GUTTER_SIZE\r\n      }\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        minWidth: listItemIconMinWidth\r\n      }\r\n    },\r\n    MuiSvgIcon: {\r\n      root: {\r\n        fontSize: SVG_ICON_FONT_SIZE\r\n      }\r\n    },\r\n    MuiToolbar: {\r\n      dense: {\r\n        minHeight: TOOLBAR_HEIGHT\r\n      }\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: \"0.8rem\"\r\n      }\r\n    }\r\n  },\r\n  typography: {\r\n    h1: {\r\n      fontSize: \"1.5rem\"\r\n    },\r\n    h2: {\r\n      fontSize: \"1.3rem\"\r\n    },\r\n    h3: {\r\n      fontSize: \"1rem\",\r\n      fontWeight: 300\r\n    }\r\n  },\r\n  spacing: (factor: number) => `${SCALING_FACTOR * factor}rem`,\r\n  shape: {\r\n    borderRadius: 0\r\n  }\r\n};\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  ...baseTheme,\r\n  palette: {\r\n    ...baseTheme.pallete,\r\n    action: {\r\n      active: \"rgba(0, 0, 0, 0.5)\",\r\n      hover: \"rgba(0, 0, 0, 0.13)\",\r\n      selected: \"rgba(0, 0, 0, 0.16)\"\r\n    },\r\n    background: {\r\n      default: grey[100]\r\n    },\r\n    primary: {\r\n      main: grey[50]\r\n    }\r\n  }\r\n});\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  ...baseTheme,\r\n  palette: {\r\n    ...baseTheme.pallete,\r\n    action: {\r\n      active: \"rgba(255, 255, 255, 0.8)\",\r\n      hover: \"rgba(255, 255, 255, 0.3)\"\r\n    },\r\n    primary: {\r\n      main: grey[900]\r\n    },\r\n    type: \"dark\"\r\n  }\r\n});\r\n","import { useEffect } from \"react\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport { TOGGLE_THEME } from \"../actions\";\r\nimport { TDispatchSettings } from \"../types\";\r\nimport { LOCAL_STORAGE } from \"../constants\";\r\n\r\nconst useTheme = (dispatch: TDispatchSettings, isThemeDark: boolean) => {\r\n  const prefersDarkTheme = useMediaQuery(\"(prefers-color-scheme: dark)\", {\r\n    noSsr: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    let storedTheme = localStorage.getItem(LOCAL_STORAGE.isThemeDark);\r\n    if (storedTheme) {\r\n      if (isThemeDark !== JSON.parse(storedTheme)) {\r\n        dispatch({ type: TOGGLE_THEME });\r\n      }\r\n    } else {\r\n      if (isThemeDark !== prefersDarkTheme) {\r\n        dispatch({ type: TOGGLE_THEME });\r\n      }\r\n      localStorage.setItem(LOCAL_STORAGE.isThemeDark, String(prefersDarkTheme));\r\n    }\r\n  }, [dispatch, isThemeDark, prefersDarkTheme]);\r\n};\r\n\r\nexport default useTheme;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { TOGGLE_DRAWER } from \"../actions\";\r\nimport { TDispatchSettings } from \"../types\";\r\nimport { LOCAL_STORAGE } from \"../constants\";\r\n\r\nconst useDrawer = (dispatch: TDispatchSettings, isDrawerOpen: boolean) => {\r\n  useEffect(() => {\r\n    const storedDrawer = localStorage.getItem(LOCAL_STORAGE.isDrawerOpen);\r\n    if (storedDrawer) {\r\n      const settings: boolean = JSON.parse(storedDrawer);\r\n      if (settings !== isDrawerOpen) {\r\n        dispatch({ type: TOGGLE_DRAWER });\r\n      }\r\n    } else {\r\n      localStorage.setItem(LOCAL_STORAGE.isDrawerOpen, String(isDrawerOpen));\r\n    }\r\n  }, [dispatch, isDrawerOpen]);\r\n};\r\n\r\nexport default useDrawer;\r\n","import { useReducer } from \"react\";\r\n\r\nimport {\r\n  TOGGLE_DRAWER,\r\n  TOGGLE_THEME,\r\n  SET_LAST_LOCATION,\r\n  ADD_TO_FAVORITES,\r\n  REMOVE_FROM_FAVORITES\r\n} from \"../actions\";\r\nimport useTheme from \"../hooks/useTheme\";\r\nimport useDrawer from \"../hooks/useDrawer\";\r\nimport { ISettings } from \"../types\";\r\nimport { INITIAL_SETTINGS, LOCAL_STORAGE } from \"../constants\";\r\n\r\nexport type Action =\r\n  | { type: TOGGLE_DRAWER }\r\n  | { type: TOGGLE_THEME }\r\n  | { type: SET_LAST_LOCATION; lastLocation: string }\r\n  | { type: ADD_TO_FAVORITES; location: string }\r\n  | { type: REMOVE_FROM_FAVORITES; location: string };\r\n\r\nconst useSettings = () => {\r\n  const [state, dispatch] = useReducer(reducer, INITIAL_SETTINGS);\r\n  const { isDrawerOpen, isThemeDark } = state;\r\n\r\n  useTheme(dispatch, isThemeDark);\r\n  useDrawer(dispatch, isDrawerOpen);\r\n\r\n  return [state, dispatch] as const;\r\n};\r\n\r\nfunction reducer(state: ISettings, action: Action): ISettings {\r\n  switch (action.type) {\r\n    case TOGGLE_DRAWER: {\r\n      const { isDrawerOpen } = state;\r\n      localStorage.setItem(LOCAL_STORAGE.isDrawerOpen, String(!isDrawerOpen));\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: !isDrawerOpen\r\n      };\r\n    }\r\n    case TOGGLE_THEME: {\r\n      const { isThemeDark } = state;\r\n      localStorage.setItem(LOCAL_STORAGE.isThemeDark, String(!isThemeDark));\r\n      return {\r\n        ...state,\r\n        isThemeDark: !isThemeDark\r\n      };\r\n    }\r\n    case SET_LAST_LOCATION: {\r\n      return {\r\n        ...state,\r\n        lastLocation: action.lastLocation\r\n      };\r\n    }\r\n    case ADD_TO_FAVORITES: {\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, action.location]\r\n      };\r\n    }\r\n    case REMOVE_FROM_FAVORITES: {\r\n      return {\r\n        ...state,\r\n        favorites: [\r\n          ...state.favorites.filter(location => action.location !== location)\r\n        ]\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default useSettings;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return width;\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import React from \"react\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { StylesProvider } from \"@material-ui/styles\";\r\n\r\nimport Page from \"../../components/Page/Page\";\r\n\r\nimport { lightTheme, darkTheme } from \"../../theme\";\r\nimport useSettings from \"../../hooks/useSettings\";\r\nimport { SettingsDispatchCtx, SettingsCtx } from \"../../contexts\";\r\nimport useWindowWidth from \"../../hooks/useWindowWidth\";\r\nimport { WindowWidthCtx } from \"../../contexts\";\r\n\r\nconst App: React.FC = () => {\r\n  const windowWidth = useWindowWidth();\r\n  const [settings, dispatchSettings] = useSettings();\r\n\r\n  // console.log(\"app\", settings);\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <ThemeProvider theme={settings.isThemeDark ? darkTheme : lightTheme}>\r\n        <CssBaseline />\r\n        <WindowWidthCtx.Provider value={windowWidth}>\r\n          <SettingsDispatchCtx.Provider value={dispatchSettings}>\r\n            <SettingsCtx.Provider value={settings}>\r\n              <Page />\r\n            </SettingsCtx.Provider>\r\n          </SettingsDispatchCtx.Provider>\r\n        </WindowWidthCtx.Provider>\r\n      </ThemeProvider>\r\n    </StylesProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}